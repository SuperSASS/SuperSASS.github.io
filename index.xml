<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Super SASS……</title>
        <link>https://blog.supersassw.com/</link>
        <description>Recent content on Super SASS……</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-CN</language>
        <lastBuildDate>Wed, 03 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.supersassw.com/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Misc - 流量分析……</title>
        <link>https://blog.supersassw.com/p/ctf-misc-3/</link>
        <pubDate>Wed, 03 Feb 2021 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/ctf-misc-3/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/ctf-misc-3/57890506_p0.png" alt="Featured image of post Misc - 流量分析……" /&gt;&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 以下为涅普计划的课程笔记，建议搭配课程视频理解。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;流量分析：&lt;br&gt;
利用流量分析工具，抓取网络请求中的各种流量数据包，&lt;br&gt;
分析其中的信息，并得到自己所需要的有用信息（如flag）。&lt;/p&gt;
&lt;h1 id=&#34;0x00-课程视频&#34;&gt;0x00 课程视频&lt;/h1&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;课程视频&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;bilibili-player&#34;style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
	&lt;iframe loading=&#34;lazy&#34; src=&#34;https://player.bilibili.com/player.html?bvid=BV1VA411u7Tg&amp;high_quality=1&amp;page=3&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;Bilibili Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1VA411u7Tg?p=3&#34;&gt;视频Bilibili链接&lt;/a&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;h1 id=&#34;0x01-所需工具&#34;&gt;0x01 所需工具&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Burp Suite&lt;/li&gt;
&lt;li&gt;Nmap&lt;/li&gt;
&lt;li&gt;Packet Tracer&lt;/li&gt;
&lt;li&gt;Wireshark&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;0x02-互联网五层模型&#34;&gt;0x02 互联网五层模型&lt;/h1&gt;
&lt;p&gt;基本介绍：&lt;br&gt;
&lt;figure style=&#34;flex-grow: 210; flex-basis: 505px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BA%92%E8%81%94%E7%BD%91%E4%BA%94%E5%B1%82%E6%A8%A1%E5%9E%8B-%E4%BB%8B%E7%BB%8D_1.png&#34; data-size=&#34;1221x580&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BA%92%E8%81%94%E7%BD%91%E4%BA%94%E5%B1%82%E6%A8%A1%E5%9E%8B-%E4%BB%8B%E7%BB%8D_1.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BA%92%E8%81%94%E7%BD%91%E4%BA%94%E5%B1%82%E6%A8%A1%E5%9E%8B-%E4%BB%8B%E7%BB%8D_1_huc4b88d3a44898cbc2cc2bb07a8b71d4b_64417_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BA%92%E8%81%94%E7%BD%91%E4%BA%94%E5%B1%82%E6%A8%A1%E5%9E%8B-%E4%BB%8B%E7%BB%8D_1_huc4b88d3a44898cbc2cc2bb07a8b71d4b_64417_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1221&#34;
				height=&#34;580&#34;
				loading=&#34;lazy&#34;
				alt=&#34;互联网五层模型 - 基本介绍 1&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;互联网五层模型 - 基本介绍 1&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 实际上互联网应该是&lt;a href=&#34;https://baike.baidu.com/item/%E4%B8%83%E5%B1%82%E6%A8%A1%E5%9E%8B/1441391?fr=aladdin&#34;&gt;七层模型&lt;/a&gt;，但因为具体实现上大部分只实现了五层，所以这里只介绍五层模型。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这五层并不是层次关系，而是一种包含关系，&lt;br&gt;
也就是说：物理层中包含了一个数据链路层、数据链路层包含了一个网络层，以此类推。
&lt;figure style=&#34;flex-grow: 304; flex-basis: 730px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BA%92%E8%81%94%E7%BD%91%E4%BA%94%E5%B1%82%E6%A8%A1%E5%9E%8B-%E4%BB%8B%E7%BB%8D_2.png&#34; data-size=&#34;1865x613&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BA%92%E8%81%94%E7%BD%91%E4%BA%94%E5%B1%82%E6%A8%A1%E5%9E%8B-%E4%BB%8B%E7%BB%8D_2.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BA%92%E8%81%94%E7%BD%91%E4%BA%94%E5%B1%82%E6%A8%A1%E5%9E%8B-%E4%BB%8B%E7%BB%8D_2_hu5b4e960d34f9ddb24ac38dd335541b52_533360_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BA%92%E8%81%94%E7%BD%91%E4%BA%94%E5%B1%82%E6%A8%A1%E5%9E%8B-%E4%BB%8B%E7%BB%8D_2_hu5b4e960d34f9ddb24ac38dd335541b52_533360_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1865&#34;
				height=&#34;613&#34;
				loading=&#34;lazy&#34;
				alt=&#34;互联网五层模型 - 基本介绍 2&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;互联网五层模型 - 基本介绍 2&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当信号传导对应层时，该层的信息就会被切去。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;当信息通过物理层传输完成后，其物理层的信息就会被切去，&lt;br&gt;
这之后信息通过数据链路层，其数据链路层的信息就会被切去。&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class=&#34;snote todo yellow &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;个人没有详细去了解以下部分（互联网五层模型），&lt;br&gt;
只是大致写了课程中所讲到的内容。&lt;/p&gt;
&lt;p&gt;但其知识点又较为复杂，&lt;br&gt;
如需更深入了解可自行查阅相关资料。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;物理层&#34;&gt;物理层&lt;/h2&gt;
&lt;p&gt;物理层就是在现实世界中数据的传输方式。&lt;/p&gt;
&lt;p&gt;其有很多传输方式，不同方式的原理不同。&lt;br&gt;
比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wi-Fi无线通信——通过电磁波来进行传输。&lt;/li&gt;
&lt;li&gt;千兆网线——通过其中八根金属芯进行传输。&lt;/li&gt;
&lt;li&gt;百兆网线——通过其中四根金属芯进行传输。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;物理层在传输到一个信息后，&lt;br&gt;
会被计算机将其中的物理信号，调制解调成&lt;strong&gt;数据链路层的一个信号&lt;/strong&gt;，&lt;br&gt;
也就是一个以太网帧格式的信号。&lt;/p&gt;
&lt;h2 id=&#34;数据链路层&#34;&gt;数据链路层&lt;/h2&gt;
&lt;p&gt;在数据链路层中，每台设备都被分配了&lt;strong&gt;对应的且独一无二的MAC地址&lt;/strong&gt;（物理地址）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MAC地址：&lt;/p&gt;
&lt;p&gt;每个网卡都有个独一无二的MAC地址，&lt;br&gt;
当网卡被厂家生产出来的时候，就已经有一个确定的MAC地址。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以太网协议属于数据链路层，&lt;br&gt;
其协议主要体现在以太帧上。&lt;/p&gt;
&lt;p&gt;以太帧中的网络数据包分为两个主要地址：&lt;br&gt;
一个是&lt;strong&gt;源地址的MAC地址&lt;/strong&gt;，&lt;br&gt;
一个是&lt;strong&gt;目的地址的MAC地址&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;当某台计算机想给另外一台计算机发送消息时，&lt;br&gt;
需要在以太帧头中&lt;strong&gt;指明发送方和接收方的MAC地址&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;网络层&#34;&gt;网络层&lt;/h2&gt;
&lt;p&gt;当我们计算机的网络较为大且复杂的时候，&lt;br&gt;
我们使用简单的MAC地址并不能很好的管理网络。&lt;/p&gt;
&lt;p&gt;因为MAC地址是和硬件绑定的，&lt;br&gt;
因为假如我们更换了计算机设备，那么就需要重新配置网络的信息。&lt;/p&gt;
&lt;p&gt;这个时候IP地址网络协议就诞生了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在网络层中，每台设备都被分配了一个&lt;strong&gt;虚拟的且独一无二的IP地址&lt;/strong&gt;（网络地址）。&lt;/p&gt;
&lt;p&gt;IP地址与MAC地址的关系：&lt;br&gt;
可以是一对多，也可以是多对一。&lt;br&gt;
也就是说一个MAC地址可以分配给多个IP，&lt;br&gt;
同一个IP也可以被多个网卡（MAC地址）所使用。&lt;/p&gt;
&lt;p&gt;根据ARP协议，可以&lt;strong&gt;将物理地址和网络地址相互转换&lt;/strong&gt;。&lt;br&gt;
&lt;figure style=&#34;flex-grow: 1577; flex-basis: 3785px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E7%BD%91%E7%BB%9C%E5%B1%82-ARP%E4%B8%BE%E4%BE%8B.png&#34; data-size=&#34;978x62&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E7%BD%91%E7%BB%9C%E5%B1%82-ARP%E4%B8%BE%E4%BE%8B.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E7%BD%91%E7%BB%9C%E5%B1%82-ARP%E4%B8%BE%E4%BE%8B_huc890ff47d41cec95dd358f21cfd5b308_7775_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E7%BD%91%E7%BB%9C%E5%B1%82-ARP%E4%B8%BE%E4%BE%8B_huc890ff47d41cec95dd358f21cfd5b308_7775_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;978&#34;
				height=&#34;62&#34;
				loading=&#34;lazy&#34;
				alt=&#34;网络层 - ARP举例&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;网络层 - ARP举例&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;子网与网段的概念&#34;&gt;子网与网段的概念&lt;/h3&gt;
&lt;p&gt;通过与子网掩码的与运算，可以从逻辑上把一个大网络划分成一些小网络。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;子网掩码：&lt;/p&gt;
&lt;p&gt;是由一系列的1和0构成，通过将其同IP地址做“与”运算来指出一个IP地址的网络号是什么。&lt;/p&gt;
&lt;p&gt;对于传统IP地址分类来说：&lt;br&gt;
A类地址的子网掩码是255.0.0.0；&lt;br&gt;
B类地址的子网掩码是255.255.0.0；&lt;br&gt;
C类地址的子网掩码是255.255.255.0。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;将一个B类网络&lt;code&gt;166.111.0.0&lt;/code&gt;划分为多个C类子网来用的话，&lt;br&gt;
只要将其子网掩码设置为255.255.255.0即可。&lt;/p&gt;
&lt;p&gt;这样&lt;code&gt;166.111.1.1&lt;/code&gt;和&lt;code&gt;166.111.2.1&lt;/code&gt;就分属于不同的网络了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;像这样，通过较长的子网掩码将一个网络划分为多个网络的方法就叫做划分子网。&lt;/p&gt;
&lt;p&gt;一般来说，对于&lt;code&gt;192.168.1.x&lt;/code&gt;与&lt;code&gt;192.168.2.x&lt;/code&gt;，其属于不同的网段，&lt;br&gt;
要通过路由器，使得不同网段能相互访问。&lt;/p&gt;
&lt;h2 id=&#34;传输层&#34;&gt;传输层&lt;/h2&gt;
&lt;p&gt;在网络层的基础上，我们完成了数据通过IP地址的传送，&lt;br&gt;
但是我们仍然要&lt;strong&gt;确保数据传输的可靠性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;这里便产生了许多协议，如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;UDP协议&lt;/li&gt;
&lt;li&gt;TCP协议&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;udp协议&#34;&gt;UDP协议&lt;/h3&gt;
&lt;p&gt;是不可靠连接。&lt;br&gt;
因为不能确定对方是否收到数据包。&lt;/p&gt;
&lt;p&gt;QQ通讯使用的OICQ协议，也是基于UDP协议。&lt;/p&gt;
&lt;h3 id=&#34;tcp协议&#34;&gt;TCP协议&lt;/h3&gt;
&lt;p&gt;要点为三次握手和四次挥手。&lt;/p&gt;
&lt;p&gt;总览图：&lt;br&gt;
&lt;figure style=&#34;flex-grow: 195; flex-basis: 470px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BC%A0%E8%BE%93%E5%B1%82-TCP-%E6%80%BB%E8%A7%88.png&#34; data-size=&#34;1281x654&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BC%A0%E8%BE%93%E5%B1%82-TCP-%E6%80%BB%E8%A7%88.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BC%A0%E8%BE%93%E5%B1%82-TCP-%E6%80%BB%E8%A7%88_hu022ee4895b6bd0fd9eece7f196d8a7bf_71931_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BC%A0%E8%BE%93%E5%B1%82-TCP-%E6%80%BB%E8%A7%88_hu022ee4895b6bd0fd9eece7f196d8a7bf_71931_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1281&#34;
				height=&#34;654&#34;
				loading=&#34;lazy&#34;
				alt=&#34;TCP - 过程总览&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;TCP - 过程总览&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;三次握手&#34;&gt;三次握手&lt;/h4&gt;
&lt;p&gt;流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;SYN&lt;br&gt;
客户端向服务端发送一个请求连接包，&lt;br&gt;
标识符为SYN J。&lt;/li&gt;
&lt;li&gt;SYN, ACK&lt;br&gt;
服务端收到请求连接包，并对SYN J进行确认，&lt;br&gt;
然后发送一个回复包，标识符为SYN K, ACK J+1。&lt;/li&gt;
&lt;li&gt;ACK&lt;br&gt;
客户端向服务端发一个确认收到回复包，&lt;br&gt;
标识符为ACK K+1&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;抓包如图：&lt;br&gt;
&lt;figure style=&#34;flex-grow: 1275; flex-basis: 3060px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BC%A0%E8%BE%93%E5%B1%82-TCP-%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.png&#34; data-size=&#34;1122x88&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BC%A0%E8%BE%93%E5%B1%82-TCP-%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BC%A0%E8%BE%93%E5%B1%82-TCP-%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B_hu39d16ecac2eeaf5186a1dabef408c9c4_70422_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E4%BC%A0%E8%BE%93%E5%B1%82-TCP-%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B_hu39d16ecac2eeaf5186a1dabef408c9c4_70422_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1122&#34;
				height=&#34;88&#34;
				loading=&#34;lazy&#34;
				alt=&#34;TCP - 三次握手抓包&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;TCP - 三次握手抓包&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;四次挥手&#34;&gt;四次挥手&lt;/h4&gt;
&lt;p&gt;流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;FIN M&lt;/li&gt;
&lt;li&gt;ACK M+1&lt;/li&gt;
&lt;li&gt;FIN N&lt;/li&gt;
&lt;li&gt;ACK N+1&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;应用层&#34;&gt;应用层&lt;/h2&gt;
&lt;p&gt;基本协议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTTP&lt;/li&gt;
&lt;li&gt;SSH&lt;/li&gt;
&lt;li&gt;SFTP&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;都是&lt;strong&gt;基于UDP或TCP等传输层的协议&lt;/strong&gt;来实现的。&lt;/p&gt;
&lt;h3 id=&#34;http报文&#34;&gt;HTTP报文&lt;/h3&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 110; flex-basis: 264px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E5%BA%94%E7%94%A8%E5%B1%82-HTTP%E6%8A%A5%E6%96%87.png&#34; data-size=&#34;630x572&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E5%BA%94%E7%94%A8%E5%B1%82-HTTP%E6%8A%A5%E6%96%87.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E5%BA%94%E7%94%A8%E5%B1%82-HTTP%E6%8A%A5%E6%96%87_hu35b3d531ea51404df9d484421f4cf8c2_335081_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E5%BA%94%E7%94%A8%E5%B1%82-HTTP%E6%8A%A5%E6%96%87_hu35b3d531ea51404df9d484421f4cf8c2_335081_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;630&#34;
				height=&#34;572&#34;
				loading=&#34;lazy&#34;
				alt=&#34;应用层 - HTTP请求和响应报文&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;应用层 - HTTP请求和响应报文&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;请求报文：&lt;br&gt;
&lt;figure style=&#34;flex-grow: 278; flex-basis: 668px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E5%BA%94%E7%94%A8%E5%B1%82-HTTP%E8%AF%B7%E6%B1%82%E6%8A%A5%E6%96%87.png&#34; data-size=&#34;989x355&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E5%BA%94%E7%94%A8%E5%B1%82-HTTP%E8%AF%B7%E6%B1%82%E6%8A%A5%E6%96%87.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E5%BA%94%E7%94%A8%E5%B1%82-HTTP%E8%AF%B7%E6%B1%82%E6%8A%A5%E6%96%87_huf035087f2d8403fa6306c276d19e4495_111086_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E5%BA%94%E7%94%A8%E5%B1%82-HTTP%E8%AF%B7%E6%B1%82%E6%8A%A5%E6%96%87_huf035087f2d8403fa6306c276d19e4495_111086_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;989&#34;
				height=&#34;355&#34;
				loading=&#34;lazy&#34;
				alt=&#34;应用层 - HTTP请求报文&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;应用层 - HTTP请求报文&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;响应报文：&lt;br&gt;
&lt;figure style=&#34;flex-grow: 158; flex-basis: 380px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E5%BA%94%E7%94%A8%E5%B1%82-HTTP%E5%93%8D%E5%BA%94%E6%8A%A5%E6%96%87.png&#34; data-size=&#34;781x493&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E5%BA%94%E7%94%A8%E5%B1%82-HTTP%E5%93%8D%E5%BA%94%E6%8A%A5%E6%96%87.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E5%BA%94%E7%94%A8%E5%B1%82-HTTP%E5%93%8D%E5%BA%94%E6%8A%A5%E6%96%87_hu7dcd495190cfece669aa520d40853dda_135241_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E5%BA%94%E7%94%A8%E5%B1%82-HTTP%E5%93%8D%E5%BA%94%E6%8A%A5%E6%96%87_hu7dcd495190cfece669aa520d40853dda_135241_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;781&#34;
				height=&#34;493&#34;
				loading=&#34;lazy&#34;
				alt=&#34;应用层 - HTTP响应报文&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;应用层 - HTTP响应报文&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;http与https协议区别&#34;&gt;HTTP与HTTPS协议区别&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;HTTP是未加密&lt;/strong&gt;的，可以直接被Wireshark截获；&lt;br&gt;
而&lt;strong&gt;HTTPS是加密&lt;/strong&gt;的，请求的路径和内容是不能被直接截获的。&lt;/p&gt;
&lt;p&gt;将这些加密的协议统一称为&amp;quot;TLS&amp;quot;或&amp;quot;SSL&amp;quot;加密协议。&lt;/p&gt;
&lt;h1 id=&#34;0x03-流量分析工具&#34;&gt;0x03 流量分析工具&lt;/h1&gt;
&lt;h2 id=&#34;wireshark&#34;&gt;Wireshark&lt;/h2&gt;
&lt;p&gt;用于流量数据包的抓包、记录、分析等。&lt;/p&gt;
&lt;h3 id=&#34;开始界面&#34;&gt;开始界面&lt;/h3&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 177; flex-basis: 426px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E5%BC%80%E5%A7%8B%E7%95%8C%E9%9D%A2.png&#34; data-size=&#34;1920x1080&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E5%BC%80%E5%A7%8B%E7%95%8C%E9%9D%A2.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E5%BC%80%E5%A7%8B%E7%95%8C%E9%9D%A2_huae9c6004bfe1936f6a5aa00130bd4ecd_374299_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E5%BC%80%E5%A7%8B%E7%95%8C%E9%9D%A2_huae9c6004bfe1936f6a5aa00130bd4ecd_374299_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1920&#34;
				height=&#34;1080&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Wireshark - 开始界面&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Wireshark - 开始界面&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中显示的是捕获到的各种本地接口。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;以太网：表示的是用网线进行上网的物理接口。&lt;/li&gt;
&lt;li&gt;WLAN：表示的是用Wi-Fi进行上网的物理接口。&lt;/li&gt;
&lt;li&gt;VMware：虚拟机上网使用的虚拟接口。&lt;/li&gt;
&lt;li&gt;VPN：使用VPN上网的网络接口。&lt;/li&gt;
&lt;li&gt;USBPacp：USB的接口。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;当同时连接以太网和WLAN时，&lt;br&gt;
决定使用哪个接口的是&lt;strong&gt;跃点数&lt;/strong&gt;。&lt;br&gt;
&lt;strong&gt;跃点数越低，优先级越高。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;对于计算机来说，默认情况下：&lt;br&gt;
物理网口往往比无限网口跃点数低。&lt;br&gt;
所以默认使用以太网接口。&lt;/p&gt;
&lt;h3 id=&#34;打开网络接口&#34;&gt;打开网络接口&lt;/h3&gt;
&lt;p&gt;可以在这里截获这个接口上传输的流量包。&lt;/p&gt;
&lt;h4 id=&#34;例一http&#34;&gt;例一——HTTP&lt;/h4&gt;
&lt;p&gt;以&lt;a class=&#34;link&#34; href=&#34;http://www.gsxt.gov.cn/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;国家企业信用信息公示系统&lt;/a&gt;网页为例：&lt;/p&gt;
&lt;p&gt;刚访问网站时，我们会向网站服务器&lt;strong&gt;发送一个&lt;code&gt;GET&lt;/code&gt;类型的request数据包&lt;/strong&gt;，&lt;br&gt;
作用是得到刚进入网站的首页&lt;code&gt;index.html&lt;/code&gt;这个网页文本。
&lt;figure style=&#34;flex-grow: 301; flex-basis: 723px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-GET%E7%9A%84request%E5%86%85%E5%AE%B9.png&#34; data-size=&#34;1203x399&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-GET%E7%9A%84request%E5%86%85%E5%AE%B9.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-GET%E7%9A%84request%E5%86%85%E5%AE%B9_hu77f3a37f1f13f73d562b778ec4737478_43681_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-GET%E7%9A%84request%E5%86%85%E5%AE%B9_hu77f3a37f1f13f73d562b778ec4737478_43681_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1203&#34;
				height=&#34;399&#34;
				loading=&#34;lazy&#34;
				alt=&#34;截获流量包 - GET的request内容&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;截获流量包 - GET的request内容&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;根据这个request数据包，网站服务器会&lt;strong&gt;返回一个response数据包&lt;/strong&gt;，&lt;br&gt;
当前这个请求的response数据，包就是网页的内容。
&lt;figure style=&#34;flex-grow: 188; flex-basis: 453px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-response%E8%BF%94%E5%9B%9E%E5%86%85%E5%AE%B9.png&#34; data-size=&#34;1437x761&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-response%E8%BF%94%E5%9B%9E%E5%86%85%E5%AE%B9.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-response%E8%BF%94%E5%9B%9E%E5%86%85%E5%AE%B9_hudcac17a7d14e3b2d9e23f75d4a8edec9_137216_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-response%E8%BF%94%E5%9B%9E%E5%86%85%E5%AE%B9_hudcac17a7d14e3b2d9e23f75d4a8edec9_137216_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1437&#34;
				height=&#34;761&#34;
				loading=&#34;lazy&#34;
				alt=&#34;截获流量包 - response返回内容&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;截获流量包 - response返回内容&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;使用浏览器访问页面后，发现其使用的是不安全的HTTP协议。&lt;br&gt;
&lt;figure style=&#34;flex-grow: 132; flex-basis: 317px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E4%B8%8D%E5%AE%89%E5%85%A8%E5%9B%BE%E7%A4%BA.png&#34; data-size=&#34;320x242&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E4%B8%8D%E5%AE%89%E5%85%A8%E5%9B%BE%E7%A4%BA.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E4%B8%8D%E5%AE%89%E5%85%A8%E5%9B%BE%E7%A4%BA_huf86a8f9f24801e03798cce35e1e24621_16182_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E4%B8%8D%E5%AE%89%E5%85%A8%E5%9B%BE%E7%A4%BA_huf86a8f9f24801e03798cce35e1e24621_16182_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;320&#34;
				height=&#34;242&#34;
				loading=&#34;lazy&#34;
				alt=&#34;截获流量包 - 不安全图示&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;截获流量包 - 不安全图示&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因此用过滤器过滤出HTTP，然后寻找&lt;code&gt;GET /index.html&lt;/code&gt;。
&lt;figure style=&#34;flex-grow: 183; flex-basis: 441px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E8%BF%87%E6%BB%A4HTTP.png&#34; data-size=&#34;1928x1049&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E8%BF%87%E6%BB%A4HTTP.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E8%BF%87%E6%BB%A4HTTP_hu801bf3cc85d19d6c24ca63186b8a2756_150986_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E8%BF%87%E6%BB%A4HTTP_hu801bf3cc85d19d6c24ca63186b8a2756_150986_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1928&#34;
				height=&#34;1049&#34;
				loading=&#34;lazy&#34;
				alt=&#34;截获流量包 - 过滤HTTP&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;截获流量包 - 过滤HTTP&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个数据包就是网络中负责请求的request数据包。&lt;/p&gt;
&lt;p&gt;其必然对应于一个返回的response数据包，&lt;br&gt;
查看下方&amp;quot;Hypertext Transfer Protocol&amp;quot;中的&amp;quot;Response in frame&amp;quot;，&lt;br&gt;
可以得到返回的数据包在所截获数据包中的编号&amp;quot;No.&amp;quot;。（双击即可跳转到该response数据包）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;上面GET的request数据包中，&lt;br&gt;
&lt;figure style=&#34;flex-grow: 674; flex-basis: 1618px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E5%BE%97%E5%88%B0response%E5%8C%85_1.png&#34; data-size=&#34;209x31&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E5%BE%97%E5%88%B0response%E5%8C%85_1.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E5%BE%97%E5%88%B0response%E5%8C%85_1_hu34c0215ef4757fda8d5bb6c06306836c_1416_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E5%BE%97%E5%88%B0response%E5%8C%85_1_hu34c0215ef4757fda8d5bb6c06306836c_1416_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;209&#34;
				height=&#34;31&#34;
				loading=&#34;lazy&#34;
				alt=&#34;截获数据包 - response数据包所在帧&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;截获数据包 - response数据包所在帧&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;br&gt;
发现在编号No.174处。&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 2784; flex-basis: 6682px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E5%BE%97%E5%88%B0response%E5%8C%85_2.png&#34; data-size=&#34;891x32&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E5%BE%97%E5%88%B0response%E5%8C%85_2.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E5%BE%97%E5%88%B0response%E5%8C%85_2_hud06469f6aaa37554d3d85d7b2889b957_4114_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-%E5%BE%97%E5%88%B0response%E5%8C%85_2_hud06469f6aaa37554d3d85d7b2889b957_4114_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;891&#34;
				height=&#34;32&#34;
				loading=&#34;lazy&#34;
				alt=&#34;截获数据包 - response数据包&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;截获数据包 - response数据包&lt;/figcaption&gt;
		
	&lt;/figure&gt;
即对应这一数据包&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;查看response数据包中的&amp;quot;Line-based text data: text/html&amp;quot;，&lt;br&gt;
可以看到相同的HTML内容。
&lt;figure style=&#34;flex-grow: 328; flex-basis: 787px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-response%E6%95%B0%E6%8D%AE%E5%8C%85%E5%86%85%E5%AE%B9.png&#34; data-size=&#34;1920x585&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-response%E6%95%B0%E6%8D%AE%E5%8C%85%E5%86%85%E5%AE%B9.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-response%E6%95%B0%E6%8D%AE%E5%8C%85%E5%86%85%E5%AE%B9_hu08b71b056562aefa77bb7ca5ea7fe41c_58568_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTP-response%E6%95%B0%E6%8D%AE%E5%8C%85%E5%86%85%E5%AE%B9_hu08b71b056562aefa77bb7ca5ea7fe41c_58568_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1920&#34;
				height=&#34;585&#34;
				loading=&#34;lazy&#34;
				alt=&#34;截获数据包 - response数据包内容&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;截获数据包 - response数据包内容&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&#34;例二https&#34;&gt;例二——HTTPS&lt;/h4&gt;
&lt;p&gt;以&lt;a class=&#34;link&#34; href=&#34;https://sichuan.chinatax.gov.cn/index.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;国家税务总局四川省税务局&lt;/a&gt;网页为例：&lt;/p&gt;
&lt;p&gt;可以发现其使用的是安全的HTTPS协议。&lt;br&gt;
&lt;figure style=&#34;flex-grow: 106; flex-basis: 255px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTPS-%E5%AE%89%E5%85%A8%E5%9B%BE%E7%A4%BA.png&#34; data-size=&#34;320x301&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTPS-%E5%AE%89%E5%85%A8%E5%9B%BE%E7%A4%BA.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTPS-%E5%AE%89%E5%85%A8%E5%9B%BE%E7%A4%BA_hucda8dfab47830dfab3f6fddf3cb831eb_16158_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTPS-%E5%AE%89%E5%85%A8%E5%9B%BE%E7%A4%BA_hucda8dfab47830dfab3f6fddf3cb831eb_16158_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;320&#34;
				height=&#34;301&#34;
				loading=&#34;lazy&#34;
				alt=&#34;截获流量包 - 安全图示&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;截获流量包 - 安全图示&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;此时单纯过滤HTTP数据包，&lt;br&gt;
无论怎么刷新网页，都是无法过滤出这个网站所产生的数据包的。
&lt;figure style=&#34;flex-grow: 185; flex-basis: 444px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTPS-%E6%97%A0%E6%B3%95%E6%88%AA%E8%8E%B7.png&#34; data-size=&#34;1928x1042&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTPS-%E6%97%A0%E6%B3%95%E6%88%AA%E8%8E%B7.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTPS-%E6%97%A0%E6%B3%95%E6%88%AA%E8%8E%B7_hu13697b097e48ed0e72cdfe05893ac9c3_68439_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E6%88%AA%E8%8E%B7%E6%B5%81%E9%87%8F%E5%8C%85-HTTPS-%E6%97%A0%E6%B3%95%E6%88%AA%E8%8E%B7_hu13697b097e48ed0e72cdfe05893ac9c3_68439_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1928&#34;
				height=&#34;1042&#34;
				loading=&#34;lazy&#34;
				alt=&#34;截获流量包 - HTTPS&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;截获流量包 - HTTPS&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;此时数据包采用了TLS协议加密，&lt;br&gt;
所以我们无法直接截获。&lt;/p&gt;
&lt;h3 id=&#34;数据导出&#34;&gt;数据导出&lt;/h3&gt;
&lt;p&gt;可以使用如下方法导出Wireshark中所有的HTTP包的数据。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;选择&amp;quot;File - Export Objects - HTTP&amp;hellip;&amp;quot;&lt;br&gt;
&lt;figure style=&#34;flex-grow: 119; flex-basis: 287px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA-%E6%B3%951_1.png&#34; data-size=&#34;439x367&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA-%E6%B3%951_1.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA-%E6%B3%951_1_hu5cea033652f434138eb6bbbc1504c83d_248442_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA-%E6%B3%951_1_hu5cea033652f434138eb6bbbc1504c83d_248442_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;439&#34;
				height=&#34;367&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Wireshark - 数据导出 方法1 1&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Wireshark - 数据导出 方法1 1&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure style=&#34;flex-grow: 402; flex-basis: 967px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA-%E6%B3%951_2.png&#34; data-size=&#34;677x168&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA-%E6%B3%951_2.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA-%E6%B3%951_2_hu4c9ddb92afb5f3555b503e61485c2daf_34842_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA-%E6%B3%951_2_hu4c9ddb92afb5f3555b503e61485c2daf_34842_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;677&#34;
				height=&#34;168&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Wireshark - 数据导出 方法1 2&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Wireshark - 数据导出 方法1 2&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;也可以在某个TCP包上面选择&amp;quot;右键 - Follow - TCP Stream&amp;quot;，从而获取一整个TCP连接的数据。&lt;br&gt;
&lt;figure style=&#34;flex-grow: 173; flex-basis: 415px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA-%E6%B3%952_1.png&#34; data-size=&#34;688x397&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA-%E6%B3%952_1.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA-%E6%B3%952_1_hu32a3e608ab3c8e378890a4e9e05d77fb_160726_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/Wireshark-%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA-%E6%B3%952_1_hu32a3e608ab3c8e378890a4e9e05d77fb_160726_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;688&#34;
				height=&#34;397&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Wireshark - 数据导出 方法2 1&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Wireshark - 数据导出 方法2 1&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;保存&#34;&gt;保存&lt;/h3&gt;
&lt;p&gt;点击菜单栏中的“文件 - 保存”，&lt;br&gt;
能将所有截获的流量包，保存为pcapng格式文件。&lt;br&gt;
以供今后分析使用。&lt;/p&gt;
&lt;h3 id=&#34;ctf应用&#34;&gt;CTF应用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;给个流量包，从中找到flag。&lt;br&gt;
简单的题目可以直接字符串查找&lt;code&gt;flag&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;cisco-packet-tracer&#34;&gt;Cisco Packet Tracer&lt;/h2&gt;
&lt;p&gt;网络拓扑模拟的软件。&lt;/p&gt;
&lt;h3 id=&#34;网络连线&#34;&gt;网络连线&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;不同设备用直连线（实线）&lt;/li&gt;
&lt;li&gt;相同设备用交叉线（虚线）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;当两台计算机&lt;strong&gt;直接连接通信&lt;/strong&gt;的时候，发挥主要作用的是&lt;strong&gt;物理层&lt;/strong&gt;。&lt;br&gt;
计算机将信号发送到网线上，另外一台计算机负责接收。&lt;/p&gt;
&lt;h3 id=&#34;网络设备&#34;&gt;网络设备&lt;/h3&gt;
&lt;h4 id=&#34;集线器-hub&#34;&gt;集线器 Hub&lt;/h4&gt;
&lt;p&gt;应用于物理层。&lt;/p&gt;
&lt;p&gt;集线器对接收到的信号进行再生整形放大，以扩大网络的传输距离，&lt;br&gt;
同时将所有结点集中在以它为中心的节点上。&lt;/p&gt;
&lt;p&gt;采取&lt;strong&gt;广播式发送&lt;/strong&gt;，而不是针对式发送。&lt;br&gt;
会将数据包&lt;strong&gt;发送至与集线器相连的所有节点&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;相当于多台计算机同时连接在一根导线上。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;便宜。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺陷：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不安全。
如果有黑客成功将自己电脑接线于集线器上，&lt;br&gt;
那么其就能监听截获其他设备所发送给另外设备的数据包。&lt;/li&gt;
&lt;li&gt;可能信号冲突。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;交换机-switch&#34;&gt;交换机 Switch&lt;/h4&gt;
&lt;p&gt;应用于数据链路层。&lt;/p&gt;
&lt;p&gt;利用以太网协议，&lt;br&gt;
主要体现在以太帧上。&lt;/p&gt;
&lt;p&gt;交换机在接收到信号之后，&lt;br&gt;
会告知交换机要发送的设备的网卡的MAC地址是多少。&lt;br&gt;
于是交换机会根据这个地址正确将信号转发至某一端口（即网线），&lt;br&gt;
从而&lt;strong&gt;避免了网络内所有计算机都能收到信号&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;起到了信号隔离的作用，也成为隔离冲突域。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;同时支持分别发送和广播式发送。&lt;br&gt;
将目的地址写为0.0.0.0，便能广播式发送。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安全性高。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果网卡坏了，MAC地址需要更改，则不能用之前的MAC地址。&lt;br&gt;
需要刷新记录的MAC表。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;路由器&#34;&gt;路由器&lt;/h4&gt;
&lt;p&gt;路由器能使设备之间&lt;strong&gt;跨网段访问&lt;/strong&gt;。&lt;br&gt;
相当于一个网关。&lt;/p&gt;
&lt;p&gt;如图所示网络&lt;br&gt;
&lt;figure style=&#34;flex-grow: 104; flex-basis: 250px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E8%B7%AF%E7%94%B1%E5%99%A8-%E4%B8%BE%E4%BE%8B.png&#34; data-size=&#34;558x534&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E8%B7%AF%E7%94%B1%E5%99%A8-%E4%B8%BE%E4%BE%8B.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E8%B7%AF%E7%94%B1%E5%99%A8-%E4%B8%BE%E4%BE%8B_hu47b55d50e3bb0a62542458c3f265183c_25514_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E8%B7%AF%E7%94%B1%E5%99%A8-%E4%B8%BE%E4%BE%8B_hu47b55d50e3bb0a62542458c3f265183c_25514_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;558&#34;
				height=&#34;534&#34;
				loading=&#34;lazy&#34;
				alt=&#34;路由器 - 网络举例&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;路由器 - 网络举例&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;两个网段分别是&lt;code&gt;192.168.0.0/24&lt;/code&gt;和&lt;code&gt;192.168.1.0/24&lt;/code&gt;。&lt;br&gt;
网关则是路由器连接每个网段的接口。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;192.168.0.2&lt;/code&gt;想与&lt;code&gt;192.168.1.4&lt;/code&gt;跨网段通信，&lt;br&gt;
则需要把消息转发给路由器上的网关，&lt;br&gt;
路由器再根据IP地址转发。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;nmapnetcat&#34;&gt;Nmap/NetCat&lt;/h2&gt;


&lt;div class=&#34;snote todo yellow &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;有关这两个工具师傅并未很详细讲到具体作用和与CTF有关联系，&lt;br&gt;
于是个人写的很简略，并且可能存在错误。&lt;/p&gt;
&lt;p&gt;但稍微查询感觉这两个工具作用很大，&lt;br&gt;
需要深入了解可以自我查询相关资料。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;基于TCP协议的监听或发送数据的命令。&lt;/p&gt;
&lt;p&gt;NetCat用&lt;code&gt;netcat&lt;/code&gt;或&lt;code&gt;nc&lt;/code&gt;；&lt;br&gt;
Nmap用&lt;code&gt;ncat&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;两者使用方法差不多。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;输入&lt;code&gt;ncat (地址) (端口)&lt;/code&gt;，&lt;br&gt;
可以连接上该地址，并发送简单的TCP数据包。&lt;/p&gt;
&lt;h3 id=&#34;参数&#34;&gt;参数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-lk (端口)&lt;/code&gt;：监听某一端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--chat&lt;/code&gt;：在服务器中启动聊天服务。
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ncat -lk (端口) --chat&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;0x04-课堂练习与个人解析&#34;&gt;0x04 课堂练习与个人解析&lt;/h1&gt;
&lt;h2 id=&#34;1-上课认真听了吗&#34;&gt;1. 上课认真听了吗&lt;/h2&gt;
&lt;h3 id=&#34;题目描述&#34;&gt;题目描述&lt;/h3&gt;
&lt;p&gt;flag在三种不同的流量中。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;附件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;udphttptcp.pcapng&lt;/code&gt;&lt;br&gt;
本题所需分析的流量包&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;解题方法&#34;&gt;解题方法&lt;/h3&gt;
&lt;p&gt;三种流量分别对应今天所学的TCP、HTTP、UDP。&lt;/p&gt;
&lt;p&gt;下载流量包后用Wireshark打开。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;首先尝试直接搜索关键字&lt;code&gt;flag{&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;按Ctrl+F打开搜索栏，&lt;br&gt;
第一个选项栏选择“分组字节流”，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有关第一个选项栏中三个选项的解释：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;分组列表：代表的是最上面的窗口，在Info栏中进行搜索。&lt;/li&gt;
&lt;li&gt;分组详细：代表的是中间的窗口。&lt;/li&gt;
&lt;li&gt;分组字节流：代表的是最下面的窗口，在十六进制文件中搜索。
第三个选项栏选择“字符串”，&lt;br&gt;
搜索框中填写&lt;code&gt;flag{&lt;/code&gt;。&lt;br&gt;
&lt;figure style=&#34;flex-grow: 7384; flex-basis: 17723px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E9%A2%98%E8%A7%A3-1-%E6%90%9C%E7%B4%A2%E6%A0%8F.png&#34; data-size=&#34;1920x26&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E9%A2%98%E8%A7%A3-1-%E6%90%9C%E7%B4%A2%E6%A0%8F.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E9%A2%98%E8%A7%A3-1-%E6%90%9C%E7%B4%A2%E6%A0%8F_hu9b463ac12620d0699f624a29df6ff569_1980_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E9%A2%98%E8%A7%A3-1-%E6%90%9C%E7%B4%A2%E6%A0%8F_hu9b463ac12620d0699f624a29df6ff569_1980_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1920&#34;
				height=&#34;26&#34;
				loading=&#34;lazy&#34;
				alt=&#34;第一题 - 搜索栏设置&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;第一题 - 搜索栏设置&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;一直搜索，会分别搜索到三个flag。&lt;/p&gt;




&lt;div class=&#34;sc-tabs&#34;&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-1-flags&#34; id=&#34;tabs-1-flags-0&#34; checked=&#34;checked&#34; /&gt;
	&lt;label for=&#34;tabs-1-flags-0&#34;&gt;第一个flag&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;p&gt;UDP帧：&lt;br&gt;
&lt;img src=&#34;pic/%E9%A2%98%E8%A7%A3-1-UDP_1.png&#34; alt=&#34;第一题 - UDP帧&#34;&gt;&lt;/p&gt;
&lt;p&gt;flag内容：&lt;br&gt;
&lt;img src=&#34;pic/%E9%A2%98%E8%A7%A3-1-UDP_2.png&#34; alt=&#34;第一题 - UDP flag&#34;&gt;&lt;/p&gt;
&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-1-flags&#34; id=&#34;tabs-1-flags-1&#34;  /&gt;
	&lt;label for=&#34;tabs-1-flags-1&#34;&gt;第二个flag&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;p&gt;TCP帧：&lt;br&gt;
&lt;img src=&#34;pic/%E9%A2%98%E8%A7%A3-1-TCP_1.png&#34; alt=&#34;第一题 - TCP帧&#34;&gt;&lt;/p&gt;
&lt;p&gt;flag内容：&lt;br&gt;
&lt;img src=&#34;pic/%E9%A2%98%E8%A7%A3-1-TCP_2.png&#34; alt=&#34;第一题 - TCP flag&#34;&gt;&lt;/p&gt;
&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-1-flags&#34; id=&#34;tabs-1-flags-2&#34;  /&gt;
	&lt;label for=&#34;tabs-1-flags-2&#34;&gt;第三个flag&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;p&gt;HTTP帧：&lt;br&gt;
&lt;img src=&#34;pic/%E9%A2%98%E8%A7%A3-1-HTTP_1.png&#34; alt=&#34;第一题 - HTTP帧&#34;&gt;&lt;/p&gt;
&lt;p&gt;flag内容：&lt;br&gt;
&lt;img src=&#34;pic/%E9%A2%98%E8%A7%A3-1-HTTP_2.png&#34; alt=&#34;第一题 - HTTP flag&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;之前提到过，HTTP协议也是基于TCP协议实现的，&lt;br&gt;
所以这里现实的类别也是TCP协议。&lt;/p&gt;
&lt;p&gt;在详细窗口中，可以发现&amp;quot;Reassembled PDU in frame: &amp;hellip;&amp;ldquo;这样一个超链接字段，&lt;br&gt;
&lt;img src=&#34;pic/%E9%A2%98%E8%A7%A3-1-HTTP-Reassembled.png&#34; alt=&#34;第一题 - HTTP帧 - Reassembled PDU in frame&#34;&gt;&lt;/p&gt;
&lt;p&gt;双击后，便可以找到最开始的HTTP数据包。&lt;br&gt;
&lt;img src=&#34;pic/%E9%A2%98%E8%A7%A3-1-HTTP-%E8%B7%B3%E8%BD%ACHTTP.png&#34; alt=&#34;第一题 - HTTP帧 - 跳转回HTTP帧&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;p&gt;对这三个flag排列组合测试，得到最终的flag：&lt;code&gt;flag{25434026}&lt;/code&gt;。&lt;/p&gt;
&lt;h2 id=&#34;2-我是间谍&#34;&gt;2. 我是间谍&lt;/h2&gt;
&lt;h3 id=&#34;题目描述-1&#34;&gt;题目描述&lt;/h3&gt;
&lt;p&gt;我是间谍，我在干什么呢？&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;附件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;imaspy.exe&lt;/code&gt;&lt;br&gt;
需要分析的“恶意软件”，分析其发送流量的数据包。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;解题方法-1&#34;&gt;解题方法&lt;/h3&gt;
&lt;p&gt;首先需要注意的是：&lt;br&gt;
对于恶意软件，我们应该&lt;strong&gt;在一个隔离的环境中运行&lt;/strong&gt;，&lt;br&gt;
也就是应该在一台虚拟机或沙盒中运行该软件。&lt;br&gt;
【虽然这道题中的程序并不是真的恶意程序……&lt;/p&gt;
&lt;p&gt;并且由于宿主机中流量很多，不好轻易找出恶意软件的流量，&lt;br&gt;
所以更应该在虚拟机中运行。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;但这里还是直接在宿主机中运行并抓取流量的。&lt;/p&gt;
&lt;p&gt;虽然流量很多不好直接找到，&lt;br&gt;
但我们仍可以用&lt;strong&gt;万能的搜索&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;启动Wireshark监听并运行程序。&lt;/p&gt;
&lt;p&gt;待程序执行完成并关闭窗口后，&lt;br&gt;
跟上道题一样，直接在分组字节流中搜索字符串&lt;code&gt;flag{&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;可以直接得到flag。&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 185; flex-basis: 444px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E9%A2%98%E8%A7%A3-2-%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C.png&#34; data-size=&#34;1928x1040&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E9%A2%98%E8%A7%A3-2-%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-3/pic/%E9%A2%98%E8%A7%A3-2-%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C_hu7035bdc5ae670fd66899293941f7df5a_124592_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-3/pic/%E9%A2%98%E8%A7%A3-2-%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C_hu7035bdc5ae670fd66899293941f7df5a_124592_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1928&#34;
				height=&#34;1040&#34;
				loading=&#34;lazy&#34;
				alt=&#34;第二题 - 搜索内容&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;第二题 - 搜索内容&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;这里只写了课堂上的两道习题。&lt;/p&gt;
&lt;p&gt;有关课后的两道习题，在视频最后部分师傅有所解答，&lt;br&gt;
可以去视频中查看。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h1 id=&#34;0x05-写在最后&#34;&gt;0x05 写在最后&lt;/h1&gt;
&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 因为个人水平原因，这篇笔记可能写的很简略不清晰或存在很多错误，请见谅！…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这部分有点不知道怎么做笔记……&lt;br&gt;
只可意会不可言传的那种感觉_(:з」∠)_……&lt;/p&gt;
&lt;p&gt;而且很多知识（比如网络方面）如果要真去弄懂，又要学很多方面的东西……&lt;/p&gt;
&lt;p&gt;想了好久才最终把这个整理完成orzzz……&lt;br&gt;
写得好乱【……&lt;/p&gt;
&lt;p&gt;&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 以上大部分为个人总结，由于这里也刚入门，很多地方可能存在错误。如发现错误请及时指出，谢谢！…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote link green&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 由于目前博客不支持附件上传下载，所以如果需要上述中的文件，可以联系我分享文件【联系方式在关于页面中有…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote up cyan&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 如对以上内容存在疑惑不解的地方，也可以询问我。如果我了解的话会尽力解答；不了解的话可以一起努力弄明白hhh…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;感谢fjh1997师傅的辛勤付出！……&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以上……&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Misc - 数据编码……</title>
        <link>https://blog.supersassw.com/p/ctf-misc-2/</link>
        <pubDate>Tue, 02 Feb 2021 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/ctf-misc-2/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/ctf-misc-2/87075144_p0.jpg" alt="Featured image of post Misc - 数据编码……" /&gt;&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 以下为涅普计划的课程笔记，建议搭配课程视频理解。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;0x00-课程视频&#34;&gt;0x00 课程视频&lt;/h1&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;课程视频&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;bilibili-player&#34;style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
	&lt;iframe loading=&#34;lazy&#34; src=&#34;https://player.bilibili.com/player.html?bvid=BV1VA411u7Tg&amp;high_quality=1&amp;page=3&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;Bilibili Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1VA411u7Tg?p=3&#34;&gt;视频Bilibili链接&lt;/a&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;h1 id=&#34;0x01-常见进制与进制转换&#34;&gt;0x01 常见进制与进制转换&lt;/h1&gt;
&lt;h2 id=&#34;常见进制&#34;&gt;常见进制&lt;/h2&gt;
&lt;p&gt;计算机领域中，常用进制有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二进制(Binary、bin)&lt;/li&gt;
&lt;li&gt;八进制(Octal、oct)&lt;/li&gt;
&lt;li&gt;十六进制(Hexadecimal、hex)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 有关这几种进制的优缺点、用处分析，可见“六六”在&lt;a href=&#34;https://www.zhihu.com/question/298324513/answer/1702759239&#34;&gt;知乎问题“二进制，十进制，十六进制各有什么优缺点？”&lt;/a&gt;中的回答。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;而在计算机中，存储信息归根到底&lt;strong&gt;都是以二进制存储的&lt;/strong&gt;。&lt;br&gt;
八进制和十六进制，只是为了&lt;strong&gt;简化二进制的表达&lt;/strong&gt;，方便观察记录。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如将&lt;code&gt;1010 0101 1100 1011&lt;/code&gt;这复杂的一串二进制，转化为十六进制就为&lt;code&gt;A 5 C D&lt;/code&gt;，更方便记录和观察。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;进制转换&#34;&gt;进制转换&lt;/h2&gt;
&lt;p&gt;因为信息都是以二进制的形式存储，所以二进制可以转换为各种信息。&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 177; flex-basis: 426px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E7%B1%BB%E5%88%AB.png&#34; data-size=&#34;1920x1080&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E7%B1%BB%E5%88%AB.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E7%B1%BB%E5%88%AB_hub355596b0731306b7f991cff6703144f_1069929_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E7%B1%BB%E5%88%AB_hub355596b0731306b7f991cff6703144f_1069929_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1920&#34;
				height=&#34;1080&#34;
				loading=&#34;lazy&#34;
				alt=&#34;进制转换类别&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;进制转换类别&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;1-二进制转ascii码&#34;&gt;1. 二进制转ASCII码&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;每八位&lt;/strong&gt;为一个整体，将其&lt;strong&gt;转换为十进制&lt;/strong&gt;后，对应ASCII码表查询得到对应的字符。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;一串二进制串&lt;code&gt;01101110 01101001 01100011 01101111&lt;/code&gt;，&lt;br&gt;
将其按每八位一节转换为十进制后为&lt;code&gt;110 105 99 111&lt;/code&gt;，&lt;br&gt;
查询ASCII码表，得到字符串&lt;code&gt;nico&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;2-二进制转morse码&#34;&gt;2. 二进制转Morse码&lt;/h3&gt;
&lt;p&gt;跟二进制转ASCII码一样，&lt;br&gt;
将一串二进制转化为ASCII码中的&lt;code&gt;.&lt;/code&gt;和&lt;code&gt;-&lt;/code&gt;和&lt;code&gt;␠&lt;/code&gt;(空格)，来表示摩尔斯码。&lt;/p&gt;
&lt;p&gt;Morse码中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.&lt;/code&gt; 对应的ASCII码为46、二进制为&lt;code&gt;0010 1110&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt; 对应的ASCII码为45、二进制为&lt;code&gt;0010 1101&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;␠&lt;/code&gt; 对应的ASCII码为32、二进制位&lt;code&gt;0010 0000&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;一大串二进制数据：&lt;br&gt;
&lt;code&gt;00101101 00101110 00100000 00101110 00101110 00100000 00101101 00101110 00101101 00101110 00100000 00101101 00101101 00101101&lt;/code&gt;&lt;br&gt;
发现其中仅由&lt;code&gt;00101101&lt;/code&gt;、&lt;code&gt;00101110&lt;/code&gt;、&lt;code&gt;00100000&lt;/code&gt;三种二进制节构成，对应于&lt;code&gt;-&lt;/code&gt;、&lt;code&gt;.&lt;/code&gt;、&lt;code&gt;␠&lt;/code&gt;，故可知应为Morse码的二进制。&lt;/p&gt;
&lt;p&gt;使用二进制转Morse转换工具，得到&lt;code&gt;-. .. -.-. ---&lt;/code&gt;，&lt;br&gt;
在使用Morse转文本转换工具，得到&lt;code&gt;nico&lt;/code&gt;这个文本。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;3-二进制转二维码&#34;&gt;3. 二进制转二维码&lt;/h3&gt;
&lt;p&gt;对于一二进制字符串，转成十进制、十六进制后分析不出有用信息，&lt;br&gt;
若其长度$n$，满足$n=a^2(a∈Z)$，也就是这个&lt;strong&gt;长度是个完全平方数&lt;/strong&gt;(如$625$），&lt;br&gt;
可以&lt;strong&gt;考虑转换为二维码&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;0&lt;/code&gt;则代表白色，&lt;code&gt;1&lt;/code&gt;则代表黑色。（也可能为反过来）&lt;/p&gt;
&lt;p&gt;转换方式使用Python中的&lt;code&gt;PIL&lt;/code&gt;(Pillow)库，按上述规则将二维码绘制出来。&lt;/p&gt;
&lt;p&gt;Python代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;kn&#34;&gt;from&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;PIL&lt;/span&gt; &lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Image&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;MAX&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 在这里输入二维码的长宽（为二进制字符串长度开根）&lt;/span&gt;
&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 在这里输入二进制字符串&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pic&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Image&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;new&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;RGB&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;MAX&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;str&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;1&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;pic&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;putpixel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 为1，填充黑色&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;pic&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;putpixel&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;255&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 为0，填充白色&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pic&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;show&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 打开生成的二维码&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;pic&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;save&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;flag.png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 保存二维码为flag.png&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
例题中所生成的二维码：&lt;br&gt;
&lt;figure style=&#34;flex-grow: 263; flex-basis: 633px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%AC%E4%BA%8C%E7%BB%B4%E7%A0%81%E4%BE%8B%E5%AD%90.png&#34; data-size=&#34;1132x429&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%AC%E4%BA%8C%E7%BB%B4%E7%A0%81%E4%BE%8B%E5%AD%90.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%AC%E4%BA%8C%E7%BB%B4%E7%A0%81%E4%BE%8B%E5%AD%90_hu04c5d54e493ed78dc6580c33e4dc0b05_43872_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E4%BA%8C%E8%BF%9B%E5%88%B6%E8%BD%AC%E4%BA%8C%E7%BB%B4%E7%A0%81%E4%BE%8B%E5%AD%90_hu04c5d54e493ed78dc6580c33e4dc0b05_43872_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1132&#34;
				height=&#34;429&#34;
				loading=&#34;lazy&#34;
				alt=&#34;进制转换 - 二进制转二维码例子&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;进制转换 - 二进制转二维码例子&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;4-二进制转图片&#34;&gt;4. 二进制转图片&lt;/h3&gt;
&lt;p&gt;先将二进制字符串&lt;strong&gt;转换为十六进制&lt;/strong&gt;，&lt;br&gt;
再用十六进制编辑器，将转换后的十六进制数据，&lt;strong&gt;写入到新的文件&lt;/strong&gt;中。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;/p&gt;
&lt;p&gt;对于例题所给的长串二进制，&lt;br&gt;
先使用工具将其转换为十六进制，&lt;br&gt;
&lt;figure style=&#34;flex-grow: 184; flex-basis: 441px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E8%BD%AC%E5%9B%BE%E7%89%87_1.png&#34; data-size=&#34;1928x1047&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E8%BD%AC%E5%9B%BE%E7%89%87_1.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E8%BD%AC%E5%9B%BE%E7%89%87_1_hu763bdc94ecb24f5a11eae3896c2b8c1d_224222_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E8%BD%AC%E5%9B%BE%E7%89%87_1_hu763bdc94ecb24f5a11eae3896c2b8c1d_224222_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1928&#34;
				height=&#34;1047&#34;
				loading=&#34;lazy&#34;
				alt=&#34;进制转换 - 转图片 转十六进制&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;进制转换 - 转图片 转十六进制&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;然后打开十六进制编辑器，新建&lt;strong&gt;十六进制文件&lt;/strong&gt;（不是文本文件），&lt;br&gt;
将转换后的十六进制结果，粘贴到新文件中。&lt;br&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 注意：010 Editor粘贴十六进制文本的快捷键位Ctrl+Shift+V，并非Ctrl+V。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;figure style=&#34;flex-grow: 183; flex-basis: 441px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E8%BD%AC%E5%9B%BE%E7%89%87_2.png&#34; data-size=&#34;1928x1048&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E8%BD%AC%E5%9B%BE%E7%89%87_2.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E8%BD%AC%E5%9B%BE%E7%89%87_2_huabeffd75caf470174ddc5205b4377e83_209481_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E8%BD%AC%E5%9B%BE%E7%89%87_2_huabeffd75caf470174ddc5205b4377e83_209481_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1928&#34;
				height=&#34;1048&#34;
				loading=&#34;lazy&#34;
				alt=&#34;进制转换 - 转图片 写入十六进制文件&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;进制转换 - 转图片 写入十六进制文件&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以发现文件头尾分别为&lt;code&gt;FF D8&lt;/code&gt;和&lt;code&gt;FF D9&lt;/code&gt;，可知为JPG文件，&lt;br&gt;
保存为JPG格式文件，可得到转换后的图片。&lt;br&gt;
&lt;figure style=&#34;flex-grow: 102; flex-basis: 246px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E8%BD%AC%E5%9B%BE%E7%89%87_3.png&#34; data-size=&#34;76x74&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E8%BD%AC%E5%9B%BE%E7%89%87_3.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E8%BD%AC%E5%9B%BE%E7%89%87_3_hu890129be70b64e20a5f8a6eddc986787_7335_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2-%E8%BD%AC%E5%9B%BE%E7%89%87_3_hu890129be70b64e20a5f8a6eddc986787_7335_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;76&#34;
				height=&#34;74&#34;
				loading=&#34;lazy&#34;
				alt=&#34;进制转换 - 转图片 转换得到图片&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;进制转换 - 转图片 转换得到图片&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;0x02-常见编码&#34;&gt;0x02 常见编码&lt;/h1&gt;
&lt;h2 id=&#34;ascii&#34;&gt;ASCII&lt;/h2&gt;
&lt;p&gt;【应该都很熟悉这个ASCII码了……&lt;/p&gt;
&lt;p&gt;把常用的字符（如&lt;code&gt;a ~ z&lt;/code&gt;、&lt;code&gt;A ~ Z&lt;/code&gt;、&lt;code&gt;0 ~ 9&lt;/code&gt;、常用符号等），&lt;strong&gt;以一个特定的数来表示&lt;/strong&gt;。&lt;br&gt;
则可以&lt;strong&gt;将常用的字符，转化为二进制数并且直接存储&lt;/strong&gt;到计算机中。&lt;/p&gt;
&lt;p&gt;标准的ASCII定义了128个字符，刚好为$2^7$个，所以部分ASCII码以每7位二进制为一个组合，来表示这128种字符。&lt;br&gt;
但通常来说，为了统一，都是&lt;strong&gt;以每8位二进制为一个组合&lt;/strong&gt;，最高位补0。&lt;/p&gt;
&lt;p&gt;以下为ASCII码表可显示字符部分：&lt;br&gt;
&lt;figure style=&#34;flex-grow: 82; flex-basis: 198px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/ASCII%28%E5%8F%AF%E6%98%BE%E7%A4%BA%E5%AD%97%E7%AC%A6%29.png&#34; data-size=&#34;710x858&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/ASCII%28%E5%8F%AF%E6%98%BE%E7%A4%BA%E5%AD%97%E7%AC%A6%29.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/ASCII%28%E5%8F%AF%E6%98%BE%E7%A4%BA%E5%AD%97%E7%AC%A6%29_hudd841adfef2ee8502fb1516dffc17db4_68069_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/ASCII%28%E5%8F%AF%E6%98%BE%E7%A4%BA%E5%AD%97%E7%AC%A6%29_hudd841adfef2ee8502fb1516dffc17db4_68069_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;710&#34;
				height=&#34;858&#34;
				loading=&#34;lazy&#34;
				alt=&#34;ASCII码表 - 可显示部分&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;ASCII码表 - 可显示部分&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 控制字符部分(0 ~ 31)可查看&lt;a href=&#34;http://ascii.911cha.com/&#34;&gt;ASCII编码对照表&lt;/a&gt;。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;base家族&#34;&gt;Base家族&lt;/h2&gt;
&lt;h3 id=&#34;base64&#34;&gt;base64&lt;/h3&gt;
&lt;p&gt;为最为常见的编码。&lt;/p&gt;
&lt;h4 id=&#34;编码原理&#34;&gt;编码原理&lt;/h4&gt;
&lt;p&gt;把&lt;strong&gt;3个8位&lt;/strong&gt;的字节&lt;strong&gt;转化为4个6位&lt;/strong&gt;的节，&lt;br&gt;
之后在每个6位的节的&lt;strong&gt;前面补两个&lt;code&gt;0&lt;/code&gt;&lt;/strong&gt;，重新形成8位（一字节）形式。&lt;/p&gt;
&lt;p&gt;6位的二进制最大容量为$2^6 = 64$，故其字符集只有64个字符，&lt;br&gt;
分别为&lt;code&gt;A ~ Z&lt;/code&gt;、&lt;code&gt;a ~ z&lt;/code&gt;、&lt;code&gt;0 ~ 9&lt;/code&gt;、&lt;code&gt;+&lt;/code&gt;、&lt;code&gt;/&lt;/code&gt;。&lt;br&gt;
&lt;figure style=&#34;flex-grow: 233; flex-basis: 559px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/base64-%E7%BC%96%E7%A0%81%E8%A1%A8.png&#34; data-size=&#34;793x340&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/base64-%E7%BC%96%E7%A0%81%E8%A1%A8.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/base64-%E7%BC%96%E7%A0%81%E8%A1%A8_hu133b7c446c5718fd8c4554f211185e66_23354_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/base64-%E7%BC%96%E7%A0%81%E8%A1%A8_hu133b7c446c5718fd8c4554f211185e66_23354_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;793&#34;
				height=&#34;340&#34;
				loading=&#34;lazy&#34;
				alt=&#34;base64编码表&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;base64编码表&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
&lt;figure style=&#34;flex-grow: 248; flex-basis: 595px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/base64-%E4%BE%8B%E5%AD%90.png&#34; data-size=&#34;484x195&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/base64-%E4%BE%8B%E5%AD%90.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/base64-%E4%BE%8B%E5%AD%90_hu9fccd5f745f390b11086cf4590f11180_92362_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/base64-%E4%BE%8B%E5%AD%90_hu9fccd5f745f390b11086cf4590f11180_92362_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;484&#34;
				height=&#34;195&#34;
				loading=&#34;lazy&#34;
				alt=&#34;base64转换例子&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;base64转换例子&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;虽然&lt;code&gt;=&lt;/code&gt;是&lt;strong&gt;不存在于编码表&lt;/strong&gt;的，但其可能会出现在base64编码后的字符串中，&lt;br&gt;
其作用是：&lt;br&gt;
当字符&lt;strong&gt;不为$3$的倍数个&lt;/strong&gt;时，会先用&lt;code&gt;0&lt;/code&gt;将末尾补全，再用&lt;code&gt;=&lt;/code&gt;表示填补了多少字节(8bits)的&lt;code&gt;0&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
&lt;code&gt;A&lt;/code&gt;的ASCII是&lt;code&gt;0100 0001&lt;/code&gt;，只有8位，&lt;br&gt;
则会用0补成24位，变成&lt;code&gt;0010 0001 0000 0000 0000 0000&lt;/code&gt;，&lt;br&gt;
然后划分成4个6位后高位补0，即为&lt;code&gt;00010000 00010000 00000000 00000000&lt;/code&gt;，
对照表编码后即为&lt;code&gt;QQ&lt;/code&gt;，补了$2$个字节的&lt;code&gt;0&lt;/code&gt;，所以最终为&lt;code&gt;QQ==&lt;/code&gt;。&lt;br&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 注意：不能将末尾补的&lt;code&gt;00000000&lt;/code&gt;看作&lt;code&gt;A&lt;/code&gt;。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但为了避免&lt;code&gt;=&lt;/code&gt;在URL和Cookie中产生歧义，部分base64编码也会把&lt;code&gt;=&lt;/code&gt;去掉。&lt;/p&gt;
&lt;h4 id=&#34;作用&#34;&gt;作用&lt;/h4&gt;
&lt;p&gt;可能有人会不懂发明这个base64编码有什么作用（比如我），&lt;br&gt;
为什么不能直接传输原来的文本数据，而要通过这个base64编码后再传，&lt;br&gt;
甚至编码后占用空间还变大了.jpg……&lt;/p&gt;
&lt;p&gt;个人查阅学习了以后稍微有所理解，这里稍微写下来记录一下。
&lt;strong&gt;【以下为个人理解，很有可能有错误，仅供参考！……&lt;/strong&gt;&lt;/p&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;个人理解的base64作用&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;p&gt;首先对于各种文本的编码，如果只是简单的西欧文本（也就是&lt;strong&gt;ASCII码&lt;/strong&gt;中包括的东西，如字母），&lt;strong&gt;处理就相对统一&lt;/strong&gt;。&lt;br&gt;
但对于其他文本（如中文、俄文等），简单的ASCII码不能满足，于是会有&lt;strong&gt;各种其他的编码方式来处理&lt;/strong&gt;这些文本（如GBK、JIS等）。&lt;/p&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;需注意这里的文本编码方式，都是怎么将我们这些&lt;strong&gt;各种字符，转化为数字（二进制）运用&lt;/strong&gt;到计算机中。&lt;br&gt;
ASCII码也是，就是将“a”字符传化为二进制&lt;code&gt;0110 0001&lt;/code&gt;来处理。&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这些编码方式，普遍&lt;strong&gt;与ASCII码的编码方式有区别&lt;/strong&gt;。&lt;br&gt;
其中最突出的就是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ASCII码&lt;/strong&gt;的一字节8位中，&lt;strong&gt;最高位是&lt;code&gt;0&lt;/code&gt;的&lt;/strong&gt;，&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;其他编码方式&lt;/strong&gt;，很可能会&lt;strong&gt;使最高位位&lt;code&gt;1&lt;/code&gt;&lt;/strong&gt;。
&lt;blockquote&gt;
&lt;p&gt;比如对于汉字“你”，&lt;br&gt;
以UTF-8方式编码后，为&lt;code&gt;111100100 10111101 10100000&lt;/code&gt;（hex: &lt;code&gt;E4 BD A0&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;可以发现与标准的ASCII码对比，最高位是&lt;code&gt;1&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;注意标准ASCII码与扩展ASCII码的区别：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;标准的ASCII码最高位是&lt;code&gt;0&lt;/code&gt;&lt;/strong&gt;，也就是范围为&lt;code&gt;0 ~ 127&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;而对于那些最高位是&lt;code&gt;1&lt;/code&gt;的ASCII码，是之后扩充的，其&lt;strong&gt;属于不可见字符&lt;/strong&gt;，&lt;br&gt;
对这些不可见字符，不同国家的处理方式也会不同。&lt;/p&gt;
&lt;p&gt;所以只有&lt;strong&gt;最高位是&lt;code&gt;0&lt;/code&gt;（范围为&lt;code&gt;0 ~ 127&lt;/code&gt;）的ASCII码为真正的统一标准&lt;/strong&gt;。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;这样的后果就是：&lt;br&gt;
一些设备，对于传输过来的标准ASCII码中字符数据，处理方式都是一样的没问题。&lt;br&gt;
但对于那些&lt;strong&gt;不可见字符的处理方式&lt;/strong&gt;，就很可能&lt;strong&gt;不一样&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;比如传输了一个“a”过来，其以ASCII码传输为&lt;code&gt;0110 0001&lt;/code&gt;，&lt;br&gt;
对于这个，所有设备都知道它是个“a”这个字符，所以能正确传输，&lt;/p&gt;
&lt;p&gt;而对于“你”这个汉字，如果直接UTF-8编码后传输过来为&lt;code&gt;111100100 10111101 10100000&lt;/code&gt;，&lt;br&gt;
不同设备的处理方式就会不同了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;比如有些可能强行将最高位变为&lt;code&gt;0&lt;/code&gt;，传输成&lt;code&gt;011100100 00111101 00100000&lt;/code&gt;，就完全不同了，&lt;br&gt;
有些可能把这个当成个控制命令，而不是继续传输这个数据。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;所以经过bse64编码后，将所有字符转化为标准ASCII码，&lt;br&gt;
就能有效地&lt;strong&gt;避免在传输过程中的歧义操作&lt;/strong&gt;了，&lt;br&gt;
传输完成后再解码回来就可以了。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 以下base编码方式大部分与base64相同，唯一区别只是字符集不同，故不再给出编码原理。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;base36&#34;&gt;base36&lt;/h3&gt;
&lt;h4 id=&#34;字符集&#34;&gt;字符集&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;0 ~ 9&lt;/code&gt;、&lt;code&gt;A ~ Z&lt;/code&gt;(或&lt;code&gt;a ~ z&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;包含$0 \sim 9$的数字，加上所有$26$个字母（不区分大小写，即大写或小写均可）。&lt;/p&gt;
&lt;p&gt;不包含任何标点。&lt;/p&gt;
&lt;h4 id=&#34;特点&#34;&gt;特点&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;加密仅支持整数数字。&lt;/li&gt;
&lt;li&gt;解密仅支持字符串。&lt;/li&gt;
&lt;li&gt;不支持中文。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;base58&#34;&gt;base58&lt;/h3&gt;
&lt;h4 id=&#34;字符集-1&#34;&gt;字符集&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;123456789&lt;/code&gt;、&lt;code&gt;abcdefghijk&lt;/code&gt;、&lt;code&gt;mnopqrstuvwxyz&lt;/code&gt;、&lt;code&gt;ABCDEFGH&lt;/code&gt;、&lt;code&gt;JKLMN&lt;/code&gt;、&lt;code&gt;PQRSTUVWXYZ&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;仅包含部分数字和部分字母，&lt;br&gt;
其中不包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;0&lt;/code&gt;（数字0）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;l&lt;/code&gt;（小写L）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;O&lt;/code&gt;（大写o）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;I&lt;/code&gt;（大写i）&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;特点-1&#34;&gt;特点&lt;/h4&gt;
&lt;p&gt;为base64的字符集中，&lt;br&gt;
&lt;strong&gt;去掉了四个容易引起视觉混淆的字符&lt;/strong&gt;(&lt;code&gt;0&lt;/code&gt;、&lt;code&gt;l&lt;/code&gt;、&lt;code&gt;O&lt;/code&gt;、&lt;code&gt;I&lt;/code&gt;)，和两个符号(&lt;code&gt;+&lt;/code&gt;、&lt;code&gt;/&lt;/code&gt;)。&lt;/p&gt;
&lt;p&gt;$9$个数字$+49$个字母$=58$，所以称为base58。&lt;/p&gt;
&lt;h3 id=&#34;base62&#34;&gt;base62&lt;/h3&gt;
&lt;p&gt;区别于base64的地方只是&lt;strong&gt;去掉了&lt;code&gt;+&lt;/code&gt;和&lt;code&gt;/&lt;/code&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;base85&#34;&gt;base85&lt;/h3&gt;
&lt;p&gt;base85不太常用。&lt;/p&gt;
&lt;p&gt;类似于base64的二进制文本编码形式，&lt;br&gt;
通过使用$5$个ASCII字符来表示四个字节的二进制数据。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这个base85个人暂时不是很理解，&lt;br&gt;
因为大于了$2^6=64$，所以跟base64的编码原理应该是不一样的，&lt;br&gt;
字符集也不清楚。&lt;/p&gt;
&lt;p&gt;【但网上也很少关于base85的资料orz……&lt;/p&gt;
&lt;p&gt;目前只找到一份图，看样子应该是将4个字节划分为$6+7+6+7+6$这种划分形式转换为ASCII码的。&lt;br&gt;
&lt;figure style=&#34;flex-grow: 213; flex-basis: 512px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/base85-%E4%BE%8B%E5%AD%90.png&#34; data-size=&#34;1254x587&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/base85-%E4%BE%8B%E5%AD%90.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/base85-%E4%BE%8B%E5%AD%90_hu356ab1854a4086a8058f19c55801828f_42962_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/base85-%E4%BE%8B%E5%AD%90_hu356ab1854a4086a8058f19c55801828f_42962_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1254&#34;
				height=&#34;587&#34;
				loading=&#34;lazy&#34;
				alt=&#34;base85 - 例子&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;base85 - 例子&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;来源于&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/0yst3r-2046/p/11962942.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Base系列编码浅析&lt;/a&gt;。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;因为说不常用就没深入去了解，&lt;br&gt;
想要了解可以到google查阅英文文档看看吧。&lt;/p&gt;
&lt;h3 id=&#34;base9192&#34;&gt;base91、92&lt;/h3&gt;
&lt;p&gt;base91的字符集为：&lt;code&gt;0-9&lt;/code&gt;、&lt;code&gt;a-z&lt;/code&gt;、&lt;code&gt;A-Z&lt;/code&gt;、&lt;code&gt;!#$%&amp;amp;()*+,./:;&amp;lt;=&amp;gt;?@[]^_`{|}~&amp;quot;&lt;/code&gt;（就是你键盘上除了&lt;code&gt;\&lt;/code&gt;、&lt;code&gt;-&lt;/code&gt;、&lt;code&gt;&#39;&lt;/code&gt;能打出来的所有符号）&lt;br&gt;
&lt;figure style=&#34;flex-grow: 222; flex-basis: 534px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/base91-%E5%AD%97%E7%AC%A6%E9%9B%86.png&#34; data-size=&#34;782x351&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/base91-%E5%AD%97%E7%AC%A6%E9%9B%86.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/base91-%E5%AD%97%E7%AC%A6%E9%9B%86_hue00b631d941affe1504146b157726ca3_35555_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/base91-%E5%AD%97%E7%AC%A6%E9%9B%86_hue00b631d941affe1504146b157726ca3_35555_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;782&#34;
				height=&#34;351&#34;
				loading=&#34;lazy&#34;
				alt=&#34;base91 - 字符集&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;base91 - 字符集&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;base92比base91多一个&lt;code&gt;〜&lt;/code&gt;（注意不是&lt;code&gt;~&lt;/code&gt;）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;这两个编码方式相关资料很少，&lt;br&gt;
只用了解并且会使用转换工具应该就可以了，不需要太深入掌握吧应该【……&lt;/p&gt;
&lt;h3 id=&#34;转换工具&#34;&gt;转换工具&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;网络上各种base编码转换工具。&lt;/li&gt;
&lt;li&gt;CyberChef中Magic模块。&lt;br&gt;
特点：可自动识别为哪种base编码。&lt;/li&gt;
&lt;li&gt;CyberChef中的 &amp;ldquo;From base &amp;hellip;&amp;rdquo; 模块。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;morse电码&#34;&gt;Morse电码&lt;/h2&gt;
&lt;p&gt;【简介略……&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 77; flex-basis: 184px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/Morse-%E7%94%B5%E7%A0%81%E8%A1%A8.png&#34; data-size=&#34;474x615&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/Morse-%E7%94%B5%E7%A0%81%E8%A1%A8.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/Morse-%E7%94%B5%E7%A0%81%E8%A1%A8_hu2ed3b08bfcfb9aa0318e8870992102d3_77780_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/Morse-%E7%94%B5%E7%A0%81%E8%A1%A8_hu2ed3b08bfcfb9aa0318e8870992102d3_77780_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;474&#34;
				height=&#34;615&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Morse电码表&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Morse电码表&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;计算机中表示方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;用&lt;code&gt;.&lt;/code&gt;来表示点&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-&lt;/code&gt;来表示划&lt;/li&gt;
&lt;li&gt;常用空格&lt;code&gt;␠&lt;/code&gt;来表示分割&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;shellcode&#34;&gt;shellcode&lt;/h2&gt;
&lt;p&gt;shellcode是一段用于利用软件漏洞而执行的代码。&lt;/p&gt;
&lt;p&gt;shellcode为16进制的机器码，因为经常让攻击者获得shell而得名。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在这里其实就是&lt;strong&gt;一串16进制数据&lt;/strong&gt;，&lt;br&gt;
先转换为10进制，然后解码成ASCII即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
一串shellcode&lt;code&gt;\x54\x68\x65&lt;/code&gt;，&lt;br&gt;
转换为10进制为&lt;code&gt;84 104 101&lt;/code&gt;，&lt;br&gt;
对照ASCII码则为&lt;code&gt;The&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;urlencode&#34;&gt;urlencode&lt;/h2&gt;
&lt;p&gt;url编码又称百分号编码，是统一资源定位(URL)编码方式。&lt;/p&gt;
&lt;p&gt;URL地址（网址）中规定：&lt;br&gt;
数字、字母和特定字符（&lt;code&gt;/&lt;/code&gt;、&lt;code&gt;,&lt;/code&gt;、&lt;code&gt;:&lt;/code&gt;、&lt;code&gt;@&lt;/code&gt;等）可以直接使用，&lt;br&gt;
&lt;strong&gt;其余必须通过&lt;code&gt;%xx&lt;/code&gt;来编码&lt;/strong&gt;。&lt;br&gt;
（其中的&lt;code&gt;xx&lt;/code&gt;代表ASCII的十六进制。）&lt;/p&gt;
&lt;p&gt;&lt;em&gt;也就是说编码形式上跟shellcode差不多，不过把&lt;code&gt;\x&lt;/code&gt;换成了&lt;code&gt;%&lt;/code&gt;而已。&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
&lt;code&gt;The&lt;/code&gt;编码成urlencode就是&lt;code&gt;%54%68%65&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;关于urlencode的拓展&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;p&gt;经常可以见到，在地址栏中，一些汉字就会变成&lt;code&gt;%xx&lt;/code&gt;这样的编码形式。&lt;br&gt;
也就是这些汉字先以UTF-8编码变成16进制，然后又按urlencode加上&lt;code&gt;%&lt;/code&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
萌娘百科中&lt;a href=&#34;https://zh.moegirl.org.cn/%E7%AB%A5%E7%94%B0%E6%98%8E%E6%B2%BB&#34;&gt;童田明治&lt;/a&gt;的页面URL为：&lt;code&gt;https://zh.moegirl.org.cn/%E7%AB%A5%E7%94%B0%E6%98%8E%E6%B2%BB&lt;/code&gt;，&lt;br&gt;
“童田明治”以UTF-8编码成十六进制数据后，分别为：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;E7 AB A5&lt;/code&gt;（童）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;E7 94 B0&lt;/code&gt;（田）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;E6 98 8E&lt;/code&gt;（明）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;E6 B2 BB&lt;/code&gt;（治）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;对应到上方的URL中，就是&lt;code&gt;%E7%AB%A5&lt;/code&gt;等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;h2 id=&#34;unicode&#34;&gt;Unicode&lt;/h2&gt;
&lt;p&gt;中文又称国际码、万国码等。&lt;/p&gt;
&lt;p&gt;表示形式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;十六进制表示
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;\u****&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;#x****;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;十进制表示
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;#****;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;unicode与utf-8等的区别与联系&#34;&gt;Unicode与UTF-8等的区别与联系&lt;/h3&gt;
&lt;p&gt;个人在学习的时候发现这两类东西很迷惑，网上各种说法也很混淆。&lt;br&gt;
通过查找资料加上自我脑补x后，对这两类稍微明白了一点。&lt;/p&gt;
&lt;p&gt;于是这里顺带提一下UTF-8、UTF-16等UTF-*编码，及其与Unicode编码的关系。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;【内容太多故做折叠处理……&lt;/em&gt;&lt;/p&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;两类的区别联系&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;p&gt;首先&lt;strong&gt;对于Unicode编码&lt;/strong&gt;，&lt;br&gt;
其跟ASCII码一样，是&lt;strong&gt;一种对字符的编码方式&lt;/strong&gt;，&lt;br&gt;
或者以术语来称呼，是&lt;strong&gt;一种“字符集”&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;其完成的是一种“字符—数字”的一一映射的转换。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;比如ASCII码中，对于&lt;code&gt;A&lt;/code&gt;这个字符，对应的数字（十进制）为65，也就是将字符&lt;code&gt;A&lt;/code&gt;映射到数字&lt;code&gt;65&lt;/code&gt;，&lt;br&gt;
Unicode编码中，对于&lt;code&gt;A&lt;/code&gt;这个字符，对应的数字（十进制）为41，也就是将字符&lt;code&gt;A&lt;/code&gt;映射到数字&lt;code&gt;41&lt;/code&gt;。
而Unicode编码中，对于&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Unicode其实也有个跟ASCII码一样的表，不过太大了所以一张图放不下x……&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其实Word中的“插入字符”，其就是按照Unicode的编号顺序来排列的，&lt;br&gt;
可以看作一张跟ASCII码表一样的Unicode码表：&lt;br&gt;
&lt;img src=&#34;pic/Unicode-%E8%A1%A8.png&#34; alt=&#34;Word中的Unicode码表&#34;&gt;&lt;br&gt;
下方的字符代码，则是这个符号在Unicode这个映射表中对应的数字的十六进制形式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;Unicode本身是不断在扩充的，&lt;br&gt;
最初它只选择了2个字节(16位)，最多能表示$2^{16} = 65536$个字符。&lt;/p&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 但这里说选择2个字节实际上不恰当，因为&lt;strong&gt;Unicode并不是一种存储方式&lt;/strong&gt;，而&lt;strong&gt;只是一种字符与数映射关系&lt;/strong&gt;。存储方式由后面讲的UTF-8来决定 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;后面发现$65536$个也不够，所以又在前面加了8位，称为“扩展位”，&lt;br&gt;
一共24位，最多能存$2^{24} = 16777216$个了。&lt;br&gt;
【但这样扩展后又太多了，目前扩展位最多只用到了&lt;code&gt;10&lt;/code&gt;(hex)，也就是Unicode范围为&lt;code&gt;000000 ~ 10FFFF&lt;/code&gt;。&lt;br&gt;
【【等到以后发现外星语后就可能再扩充，一直用到&lt;code&gt;FFFFFF&lt;/code&gt;这样吧233333……&lt;/p&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;这里可以牢记两个对应思想：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$1$位十六进制对应$4$位二进制&lt;/li&gt;
&lt;li&gt;$1$字节对应$8$位，也就是$2$位十六进制。&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;请注意：上面所说的Unicode&lt;strong&gt;只是一种字符集，一种对应方式&lt;/strong&gt;，并没有涉及到怎么存储。&lt;br&gt;
这里就可能会感到奇怪：明明通过Unicode，都对应成了数字，为什么不能直接&lt;strong&gt;像ASCII码一样把数字存下来&lt;/strong&gt;就好了？&lt;/p&gt;
&lt;p&gt;对啦！这种想法就是Unicode的存储方式之一——直接把序号存下来，跟ASCII码一样。&lt;br&gt;
这种存储方式&lt;strong&gt;就叫做UTF-32&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;UTF-32编码方式：&lt;br&gt;
将Unicode中的序号转换为16进制，再最高位补&lt;code&gt;0&lt;/code&gt;至32位。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
对于“🀀”这个符号来说，【不要管为什么要举麻将啦2333【因为这个序号大一些这样……&lt;br&gt;
其Unicode序号是126976，&lt;br&gt;
也就是在Unicode这张表中，将字符&lt;code&gt;🀀&lt;/code&gt;映射成了数字&lt;code&gt;126976&lt;/code&gt;，&lt;br&gt;
转换为16进制为&lt;code&gt;1F000&lt;/code&gt;，&lt;/p&gt;
&lt;p&gt;那么按我们想的，直接把这个序号数字存储下来，&lt;br&gt;
但注意&lt;strong&gt;计算机中最好按$2^n(n∈N^+)$个字节来存储&lt;/strong&gt;，【具体原因好像是因为内存对齐？……&lt;br&gt;
这里已经是$5*4=20$位了，2个字节不够，&lt;br&gt;
所以只能&lt;strong&gt;选择4个字节，也就是32位来存&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;那么跟很多编码操作一样，最高位补&lt;code&gt;0&lt;/code&gt;，
于是变成了&lt;code&gt;001F 0000&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;那么也就是按UTF-32编码后&lt;code&gt;🀀&lt;/code&gt;则被编码成&lt;code&gt;001F 0000&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;可以发现，&lt;br&gt;
UTF-32好处就是&lt;strong&gt;非常直观&lt;/strong&gt;，&lt;br&gt;
但缺点也很明显：&lt;strong&gt;太浪费空间&lt;/strong&gt;了。&lt;/p&gt;
&lt;p&gt;原本用ASCII编码，1个字节就能存储表示的英文字母，&lt;br&gt;
到UTF-32编码，就要用4个字节了。&lt;/p&gt;
&lt;p&gt;这在当时昂贵的存储代价和极扣x的程序员们的眼中是不能忍受的！&lt;br&gt;
于是他们又机智地创造出别的编码方法，&lt;br&gt;
也就是UTF-8和UTF-16。&lt;/p&gt;
&lt;p&gt;这两种编码方法具体怎么实现这里就不讲了，有兴趣可以自己查阅。&lt;br&gt;
但可以知道的是：&lt;br&gt;
UTF-16用$2$或$4$字节，&lt;br&gt;
UTF-8用$1\sim4$字节。&lt;/p&gt;
&lt;p&gt;无论怎样，都比UTF-32纯用$4$字节好多了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那么对于以上，可以总结出以下说法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Unicode只是一种字符集，是一种字符对应数字的映射，&lt;strong&gt;并不能说是一种编码&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;各种UTF-*才真正实现了Unicode在计算机上的存储，&lt;strong&gt;才能说是编码&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Unicode可以对字符进行“初步编码”，然后用&lt;code&gt;&amp;amp;#&lt;/code&gt;、&lt;code&gt;&amp;amp;#x&lt;/code&gt;、&lt;code&gt;\u&lt;/code&gt;来表示。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;真&lt;/code&gt;，Unicode序号为&lt;code&gt;30495&lt;/code&gt;(hex:&lt;code&gt;771F&lt;/code&gt;，可以表示为&lt;code&gt;&amp;amp;#30495;&lt;/code&gt;、&lt;code&gt;&amp;amp;#x771F;&lt;/code&gt;、&lt;code&gt;\u771F&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;UTF-*是对Unicode编码后的数字进行的的一种“再编码”。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;更多扩展&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;p&gt;对于网络上各种Unicode编码工具，&lt;br&gt;
如果只是简单的对中文编码是不存在问题的。&lt;/p&gt;
&lt;p&gt;而对版本较新，序号较大（16进制用了5位及以上）的字符，则会出现问题。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;仍以序号比较大的&lt;code&gt;🀀&lt;/code&gt;为例：&lt;/p&gt;
&lt;p&gt;首先通过网站查询，得到以下信息。&lt;br&gt;
&lt;img src=&#34;pic/Unicode-%E7%BC%96%E7%A0%81%E4%B8%BE%E4%BE%8B.png&#34; alt=&#34;Unicode - 符号🀀信息&#34;&gt;&lt;br&gt;
将重要信息已经用红线划出。&lt;br&gt;
&lt;a href=&#34;https://www.fuhaozi.com/unicode/1F/1F000.html&#34;&gt;查询地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;则Unicode编码结果应该为&lt;code&gt;&amp;amp;#126976;&lt;/code&gt;、&lt;code&gt;&amp;amp;#x1F000;&lt;/code&gt;、&lt;code&gt;\u1F000&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://tool.chinaz.com/tools/unicode.aspx&#34;&gt;站长工具&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;pic/Unicode-%E7%BC%96%E7%A0%81%E7%BB%93%E6%9E%9C_1.png&#34; alt=&#34;站长工具 - Unicode编码结果&#34;&gt;&lt;br&gt;
发现与推断出的不符合。&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sojson.com/unicode.html&#34;&gt;SOJSON在线解析&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;pic/Unicode-%E7%BC%96%E7%A0%81%E7%BB%93%E6%9E%9C_2.png&#34; alt=&#34;SOJSON在线解析 - Unicode编码结果&#34;&gt;&lt;br&gt;
点击HTML预览后，很明显看到左上角为两个乱码。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果需要正确转换，可以使用千千秀字中的&lt;a href=&#34;https://www.qqxiuzi.cn/bianma/zifushiti.php&#34;&gt;HTML字符实体转换工具&lt;/a&gt;。&lt;br&gt;
&lt;img src=&#34;pic/Unicode-%E7%BC%96%E7%A0%81%E7%BB%93%E6%9E%9C_3.png&#34; alt=&#34;HTML字符实体转换工具&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;刚接触Unicode时，总会将其与ASCII比较，&lt;br&gt;
但现在可以发现：&lt;br&gt;
ASCII编码，实际上&lt;strong&gt;是字符集和编码方法的整合&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;字符集就是基本的ASCII码表，&lt;br&gt;
不过其编码方法十分简单粗暴，字符集对应的序号是多少，编码后就是多少。&lt;/p&gt;
&lt;p&gt;而Unicode中，字符集有了后，&lt;br&gt;
本来也有跟ASCII一样简单粗暴的编码方法，就是UTF-32，&lt;br&gt;
但当时的储存代价很高，于是人们将扣的艺术运用到机制，&lt;br&gt;
创造了UTF-16、甚至UTF-8这些编码方式，减小了储存消耗。&lt;/p&gt;
&lt;p&gt;这也产生了现在的歧义。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;假想一下：&lt;br&gt;
如果当时技术力就很高，储存代价极小，&lt;br&gt;
有可能像ASCII那样，就用UTF-32存，&lt;br&gt;
不用再去想UTF-8这种抠门方式，&lt;br&gt;
那应该今天就不会有这种Unicode于UTF-8是什么关系的迷惑了_(:з」∠)_……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;h2 id=&#34;aaencode&#34;&gt;aaencode&lt;/h2&gt;
&lt;p&gt;使用颜文字进行的编码。&lt;/p&gt;
&lt;p&gt;特点：&lt;br&gt;
可以将JavaScript代码编码，并且&lt;strong&gt;可以直接执行&lt;/strong&gt;。&lt;br&gt;
也就是常说的颜文字js加密。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
一段js代码，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;nico&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将这段js代码用aaencode编码后，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;ﾟωﾟﾉ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;sr&#34;&gt;/｀ｍ´）ﾉ ~┻━┻   /&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/*´∇｀*/&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟωﾟﾉ&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟωﾟﾉ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟﾉ&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟωﾟﾉ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟﾉ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;};&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟωﾟﾉ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;];(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟoﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟωﾟﾉ&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟωﾟﾉ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟoﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟoﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟﾉ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;==&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟωﾟﾉ&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;\\&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;).&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟﾉ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)];(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;oﾟｰﾟo&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟωﾟﾉ&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟoﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;\&amp;#34;&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;/*´∇｀*/&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟoﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;^&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;o&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟεﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟｰﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟДﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟoﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;ﾟΘﾟ&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;_&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用开发者工具中控制台执行这段编码后的代码效果：&lt;br&gt;
&lt;figure style=&#34;flex-grow: 183; flex-basis: 441px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/aaencode-%E6%95%88%E6%9E%9C.png&#34; data-size=&#34;1928x1048&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/aaencode-%E6%95%88%E6%9E%9C.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/aaencode-%E6%95%88%E6%9E%9C_hud6bde9c850cb63aeaa148dabdecbc8f9_140897_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/aaencode-%E6%95%88%E6%9E%9C_hud6bde9c850cb63aeaa148dabdecbc8f9_140897_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1928&#34;
				height=&#34;1048&#34;
				loading=&#34;lazy&#34;
				alt=&#34;aaencode - 效果&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;aaencode - 效果&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;br&gt;
可以看到效果确实同&lt;code&gt;alert(&amp;quot;nico&amp;quot;)&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;【这是什么稀奇古怪&lt;del&gt;又可可爱爱&lt;/del&gt;的编码方式啊.jpg……&lt;/p&gt;
&lt;h2 id=&#34;jjencode&#34;&gt;jjencode&lt;/h2&gt;
&lt;p&gt;用途等同&amp;quot;aaencode&amp;quot;，&lt;br&gt;
不同在于jjencode使用&lt;code&gt;$&lt;/code&gt;、&lt;code&gt;=&lt;/code&gt;、&lt;code&gt;+&lt;/code&gt;、&lt;code&gt;_&lt;/code&gt;、&lt;code&gt;[&lt;/code&gt;、&lt;code&gt;]&lt;/code&gt;等符号进行编码。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
同上例，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;alert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;nico&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;将这段js代码用jjencode编码后，&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=~&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[];&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;___&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:++&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$$$$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;__$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:++&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$_$_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_$_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:++&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$_$$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$$_$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_$$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:++&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$$$_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$__&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:++&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$_$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:++&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$$__&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;({}&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$$_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:++&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$$$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:++&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$___&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:++&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$__$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;:++&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$_$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;__$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;__$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_$$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$$_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;__$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_$_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$_$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_$$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;___&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$_$_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_$_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$$$_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;\\&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;__$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$$_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_$_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;__&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;(\\\&amp;#34;\\&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;__$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$_$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$$_&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;\\&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;__$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$_$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;__$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$$__&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;_$&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;\\\&amp;#34;)&amp;#34;&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;\&amp;#34;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)())();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;运行后一样的效果。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;uuencode&#34;&gt;uuencode&lt;/h2&gt;
&lt;p&gt;是二进制信息和文字信息之间的转换编码。&lt;/p&gt;
&lt;p&gt;常用于电子信息的传输。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;具体编码过程没有去了解。&lt;br&gt;
【能够了解并使用工具转换就可以了x……&lt;/p&gt;
&lt;h2 id=&#34;jsfuck&#34;&gt;jsfuck&lt;/h2&gt;
&lt;p&gt;跟&amp;quot;aaencode&amp;quot;和&amp;quot;jjencode&amp;quot;差不多。&lt;/p&gt;
&lt;p&gt;区别是：用六个字符&lt;code&gt;[]()!+&lt;/code&gt;来重新编码。&lt;/p&gt;
&lt;h2 id=&#34;brainfuck&#34;&gt;brainfuck&lt;/h2&gt;
&lt;p&gt;跟&amp;quot;jsfuck&amp;quot;、&amp;ldquo;aaencode&amp;quot;和&amp;quot;jjencode&amp;quot;差不多。&lt;br&gt;
【你呀，总能给我玩点新花样【指js……&lt;/p&gt;
&lt;p&gt;区别是：用八个字符&lt;code&gt;[]&amp;lt;&amp;gt;+-.,&lt;/code&gt;来重新编码。&lt;/p&gt;
&lt;h2 id=&#34;ook&#34;&gt;Ook&lt;/h2&gt;
&lt;p&gt;比赛中常见。&lt;/p&gt;
&lt;p&gt;有两种形式。&lt;/p&gt;
&lt;h3 id=&#34;1-ook&#34;&gt;1. &amp;ldquo;Ook!&amp;rdquo;&lt;/h3&gt;
&lt;p&gt;由&lt;code&gt;Ook.&lt;/code&gt;、&lt;code&gt;Ook!&lt;/code&gt;、&lt;code&gt;Ook?&lt;/code&gt;三个字符串组成。&lt;/p&gt;
&lt;h3 id=&#34;2-short-ook&#34;&gt;2. &amp;ldquo;Short Ook!&amp;rdquo;&lt;/h3&gt;
&lt;p&gt;只有&lt;code&gt;.&lt;/code&gt;、&lt;code&gt;!&lt;/code&gt;、&lt;code&gt;?&lt;/code&gt;三个字符组成。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;经典例题：&lt;br&gt;
在图片的lsb隐写中，藏有ShortOok!。&lt;br&gt;
&lt;figure style=&#34;flex-grow: 123; flex-basis: 297px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/Ook-%E4%BE%8B%E9%A2%98.png&#34; data-size=&#34;914x738&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/Ook-%E4%BE%8B%E9%A2%98.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/Ook-%E4%BE%8B%E9%A2%98_hu3e7e5af707c1ac282b11c8f8630ef6f1_259377_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/Ook-%E4%BE%8B%E9%A2%98_hu3e7e5af707c1ac282b11c8f8630ef6f1_259377_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;914&#34;
				height=&#34;738&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Ook - 经典例题&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Ook - 经典例题&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;敲击码&#34;&gt;敲击码&lt;/h2&gt;
&lt;p&gt;是一种很简单的对文本信息进行编码的方式。&lt;/p&gt;
&lt;p&gt;基于$5\times5$的方格（波利比奥斯方阵）来实现，&lt;br&gt;
区别在于：K字母被整合到C中。&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 117; flex-basis: 281px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E6%95%B2%E5%87%BB%E7%A0%81.png&#34; data-size=&#34;468x399&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E6%95%B2%E5%87%BB%E7%A0%81.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E6%95%B2%E5%87%BB%E7%A0%81_huc050287f0a112e61803903cf6cca0166_40350_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/%E6%95%B2%E5%87%BB%E7%A0%81_huc050287f0a112e61803903cf6cca0166_40350_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;468&#34;
				height=&#34;399&#34;
				loading=&#34;lazy&#34;
				alt=&#34;敲击码&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;敲击码&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
&lt;code&gt;F&lt;/code&gt;，对应位置为$(2,1)$，所以可以编码为21。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;二维码&#34;&gt;二维码&lt;/h2&gt;
&lt;p&gt;用某种特定的几何图形按一定规律，在平面分布的黑白相间的图形，来记录数据符号信息。&lt;/p&gt;
&lt;p&gt;种类：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;堆叠式/行排式（堆积式或层排式）&lt;/li&gt;
&lt;li&gt;矩阵式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;常见的二维码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Code 16K&lt;/li&gt;
&lt;li&gt;Code 49&lt;/li&gt;
&lt;li&gt;PDF417&lt;/li&gt;
&lt;li&gt;QR Code&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 234; flex-basis: 562px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E4%BA%8C%E7%BB%B4%E7%A0%81-%E5%B8%B8%E8%A7%81%E5%BD%A2%E5%BC%8F.png&#34; data-size=&#34;1078x460&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E4%BA%8C%E7%BB%B4%E7%A0%81-%E5%B8%B8%E8%A7%81%E5%BD%A2%E5%BC%8F.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E4%BA%8C%E7%BB%B4%E7%A0%81-%E5%B8%B8%E8%A7%81%E5%BD%A2%E5%BC%8F_huf6a8c73c1fa9a69c8f577cfbf6a5b580_322959_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/%E4%BA%8C%E7%BB%B4%E7%A0%81-%E5%B8%B8%E8%A7%81%E5%BD%A2%E5%BC%8F_huf6a8c73c1fa9a69c8f577cfbf6a5b580_322959_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1078&#34;
				height=&#34;460&#34;
				loading=&#34;lazy&#34;
				alt=&#34;二维码 - 常见形式&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;二维码 - 常见形式&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;矩阵式二维码&#34;&gt;矩阵式二维码&lt;/h3&gt;
&lt;p&gt;最流行的就是QR Code，&lt;br&gt;
也就是我们常说的二维码。&lt;/p&gt;
&lt;p&gt;其是&lt;strong&gt;在一个矩阵空间通过黑、白像素在矩阵中的不同分布&lt;/strong&gt;进行编码。&lt;/p&gt;
&lt;p&gt;用点（方点、圆点或其他形状）的出现表示二进制&lt;code&gt;1&lt;/code&gt;，&lt;br&gt;
不出现表示二进制&lt;code&gt;0&lt;/code&gt;，&lt;br&gt;
&lt;strong&gt;点的排列组合&lt;/strong&gt;确定了矩阵式二维码所代表的意义。&lt;/p&gt;
&lt;p&gt;矩阵式二维码是建立在计算机图像处理技术、组合编码原理等基础上的一种新型图形符号自动识读处理码制。&lt;/p&gt;
&lt;p&gt;代表性的矩阵式二维码：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Code One&lt;/li&gt;
&lt;li&gt;MaxiCode&lt;/li&gt;
&lt;li&gt;QR Code&lt;/li&gt;
&lt;li&gt;Data Matrix&lt;/li&gt;
&lt;li&gt;Han Xin Code&lt;/li&gt;
&lt;li&gt;Grid Matrix&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;qr-code&#34;&gt;QR Code&lt;/h3&gt;
&lt;h4 id=&#34;特点-2&#34;&gt;特点&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;储存大容量信息。&lt;br&gt;
传统的条形码只能处理$20$位左右的信息量，QR码可以处理条形码几十到几百倍的信息量。&lt;/li&gt;
&lt;li&gt;支持所有类型的数据。（如：数字、英文字母、日文字母、汉字、二进制、控制码等）&lt;/li&gt;
&lt;li&gt;在小空间内可打印。&lt;br&gt;
使用纵向和横向两个方向处理数据，所以相同信息量，QR码所占空间为条形码十分之一。（Micro QR码可以更小）&lt;/li&gt;
&lt;li&gt;解码速度快。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;基本结构&#34;&gt;基本结构&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;格式信息：纠错等级&lt;/li&gt;
&lt;li&gt;版本信息：即二维码规格（QR码符号共有$40$种规格的矩阵）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 171; flex-basis: 411px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E4%BA%8C%E7%BB%B4%E7%A0%81-QRcode%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84.png&#34; data-size=&#34;1242x724&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E4%BA%8C%E7%BB%B4%E7%A0%81-QRcode%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-2/pic/%E4%BA%8C%E7%BB%B4%E7%A0%81-QRcode%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84_hu4fa5621e24e028fcab2f5e69b92442b0_172175_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-2/pic/%E4%BA%8C%E7%BB%B4%E7%A0%81-QRcode%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84_hu4fa5621e24e028fcab2f5e69b92442b0_172175_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1242&#34;
				height=&#34;724&#34;
				loading=&#34;lazy&#34;
				alt=&#34;二维码 - 基本结构&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;二维码 - 基本结构&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;考点&#34;&gt;考点&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;将定位点拿掉，需要自己去补充定位点。&lt;/li&gt;
&lt;li&gt;修复二维码。&lt;br&gt;
基于纠错等级，只给部分信息，需要自己补全。&lt;br&gt;
可以使用工具：&lt;a class=&#34;link&#34; href=&#34;https://github.com/Merricx/qrazybox&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;QRazyBox&lt;/a&gt;。&lt;br&gt;
&lt;div class=&#34;snote guide cyan&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 解题方法：使用工具先调整纠错等级，使得跟残缺二维码一致；然后再手动填充。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;稀奇古怪的编码&#34;&gt;稀奇古怪的编码&lt;/h2&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 以下编码由于特点明显，故不详细介绍。均可以直接搜索相关编码解码工具。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;社会主义核心价值观编码&#34;&gt;社会主义核心价值观编码&lt;/h3&gt;
&lt;p&gt;特点：由社会主义核心价值观十二个词构成。&lt;/p&gt;
&lt;h3 id=&#34;与佛论禅&#34;&gt;与佛论禅&lt;/h3&gt;
&lt;p&gt;特点：开头为“佛曰：”。&lt;/p&gt;
&lt;h3 id=&#34;与熊论道&#34;&gt;与熊论道&lt;/h3&gt;
&lt;p&gt;特点：开头为“熊曰：”。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;0x03-写在最后&#34;&gt;0x03 写在最后&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 以上大部分为个人总结，由于这里也刚入门，很多地方可能存在错误。如发现错误请及时指出，谢谢！…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote link green&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 由于目前博客不支持附件上传下载，所以如果需要上述中的文件，可以联系我分享文件【联系方式在关于页面中有…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote up cyan&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 如对以上内容存在疑惑不解的地方，也可以询问我。如果我了解的话会尽力解答；不了解的话可以一起努力弄明白hhh…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;感谢1cePeak师傅的辛勤付出！……&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以上……&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Misc - 图片隐写……</title>
        <link>https://blog.supersassw.com/p/ctf-misc-1/</link>
        <pubDate>Mon, 01 Feb 2021 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/ctf-misc-1/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/ctf-misc-1/86016044_p0.png" alt="Featured image of post Misc - 图片隐写……" /&gt;&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 以下为涅普计划的课程笔记，建议搭配课程视频理解。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;图片隐写：&lt;br&gt;
将一些不可告人x的东西（如flag）以各种方式隐藏在图片中。&lt;br&gt;
自已需要分析出隐写方法，并找出隐藏的信息。&lt;/p&gt;
&lt;h1 id=&#34;0x00-课程视频&#34;&gt;0x00 课程视频&lt;/h1&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;课程视频&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;bilibili-player&#34;style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
	&lt;iframe loading=&#34;lazy&#34; src=&#34;https://player.bilibili.com/player.html?bvid=BV1VA411u7Tg&amp;high_quality=1&amp;page=2&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;Bilibili Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&#34;https://www.bilibili.com/video/BV1VA411u7Tg?p=2&#34;&gt;视频Bilibili链接&lt;/a&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;h1 id=&#34;0x01-准备工具&#34;&gt;0x01 准备工具&lt;/h1&gt;
&lt;h2 id=&#34;十六进制编辑器&#34;&gt;十六进制编辑器&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&amp;ldquo;010 Editor&amp;rdquo;&lt;br&gt;
优点：有模板（需要安装）&lt;br&gt;
&lt;em&gt;Tip: 复制16进制的快捷键为&lt;code&gt;Ctrl+Shift+C&lt;/code&gt;。&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&amp;ldquo;WinHex&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;其实也称二进制编辑器，因为文件都是以bin二进制来存储的，不过为了阅读方便，将8位2进制串转化为2位16($2^4=16$)进制串。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;虚拟机kail&#34;&gt;虚拟机——&amp;ldquo;Kail&amp;rdquo;&lt;/h2&gt;
&lt;h3 id=&#34;相关命令&#34;&gt;相关命令&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;strings&lt;/code&gt;&lt;br&gt;
打印文件中可打印的字符。&lt;br&gt;
作用：可找出图片中&lt;strong&gt;隐写的字符串&lt;/strong&gt;。&lt;/p&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;例子&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;在终端中输入&lt;code&gt;strings strings.jpg&lt;/code&gt;后&lt;br&gt;
&lt;img src=&#34;pic/Kali-strings.png&#34; alt=&#34;Kali - strings&#34;&gt;&lt;br&gt;
可以看见&amp;quot;Nepnep{welcome}&amp;ldquo;和&amp;quot;print(hell oworld)&amp;ldquo;这两条信息。&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;grep&lt;/code&gt;&lt;br&gt;
用于&lt;strong&gt;查找内容包含指定的范本样式&lt;/strong&gt;的文件，如果发现某文件的内容符合所指定的范本样式，预设&lt;code&gt;grep&lt;/code&gt;指令会把含有范本样式的那一列显示出来。&lt;/p&gt;
&lt;p&gt;输入&lt;code&gt;grep -a &amp;quot;flag&amp;quot; xxx.jpg&lt;/code&gt;&lt;br&gt;
则会把文件中含&amp;quot;flag&amp;quot;字符串部分前后显示出来。&lt;/p&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;例子&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;如图：&lt;br&gt;
&lt;img src=&#34;pic/Kali-grep.png&#34; alt=&#34;Kali - grep&#34;&gt;&lt;br&gt;
可以看见&amp;quot;BJD{haokanma_xjj}&amp;ldquo;这个flag。&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;file&lt;/code&gt;&lt;br&gt;
用于&lt;strong&gt;辨识文件类型&lt;/strong&gt;。&lt;br&gt;
可以显示文件的格式，属性等信息。&lt;/p&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;例子&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;p&gt;对&amp;quot;strings-file&amp;quot;这个无后缀名文件进行分析。&lt;br&gt;
&lt;img src=&#34;pic/Kali-file.png&#34; alt=&#34;Kali - file&#34;&gt;&lt;br&gt;
可以看见文件的基本信息，为JPEG文件。&lt;/p&gt;
  &lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; Tip: JPEG和JPG是同一个格式。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;binwalk&lt;/code&gt;&lt;br&gt;
用于搜索给定二进制镜像文件以获取嵌入的文件和代码的工具，即可以查看文件中含有的其他文件。&lt;br&gt;
在CTF中&lt;code&gt;binwalk&lt;/code&gt;常用于&lt;strong&gt;分析隐藏文件&lt;/strong&gt;。&lt;br&gt;
参数：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-e&lt;/code&gt; 分离出文件到新文件夹中（但可能不全）。&lt;/li&gt;
&lt;/ul&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;例子&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;p&gt;输入&lt;code&gt;binwalk xxx.png&lt;/code&gt;&lt;br&gt;
&lt;img src=&#34;pic/Kali-binwalk.png&#34; alt=&#34;Kali - binwalk&#34;&gt;&lt;/p&gt;
&lt;p&gt;输入&lt;code&gt;binwalk -e xxx.png&lt;/code&gt;
得到新文件夹，里面有提取出的文件。&lt;br&gt;
&lt;img src=&#34;pic/Kali-binwalk-e_1.png&#34; alt=&#34;Kali - binwalk -e&#34;&gt; &lt;img src=&#34;pic/Kali-binwalk-e_2.png&#34; alt=&#34;Kali - binwalk -e&#34;&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;foremost&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;注意&lt;/strong&gt;：需要使用&lt;code&gt;apt-get install foremost&lt;/code&gt;安装。&lt;br&gt;
也可以提取文件（也不一定能提取所有文件）。&lt;br&gt;
&lt;em&gt;比较于&lt;code&gt;binwalk&lt;/code&gt;，&lt;code&gt;binwalk&lt;/code&gt;更加强大，速度也快。但是有时候如果不能分离出来，就可以试试看&lt;code&gt;foremost&lt;/code&gt;。&lt;/em&gt;&lt;/p&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;例子&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;p&gt;输入&lt;code&gt;foremost xxx.png&lt;/code&gt;后，得到output文件夹，其中目录树如图。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;pic/Kali-foremost.png&#34; alt=&#34;Kali - foremost&#34;&gt;&lt;br&gt;
其中png文件夹中为原图片，而jpg文件夹中则为分离处的新图片。&lt;br&gt;
audit.txt则为所分离文件的信息。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;dd&lt;/code&gt;
搭配&lt;code&gt;binwalk&lt;/code&gt;分析后，&lt;strong&gt;指定提取&lt;/strong&gt;文件。&lt;/p&gt;
&lt;p&gt;命令为&lt;code&gt;dd if=xxx.png of=out.jpg bs=1 skip=***&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;参数解释：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;if=xxx.png&lt;/code&gt;为要分离的文件名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;of=out.jpg&lt;/code&gt;为输出的文件名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;bs=1&lt;/code&gt;为每次读取几个块（一般为1）。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;skip=***&lt;/code&gt;为从哪里开始读入（搭配&lt;code&gt;binwalk&lt;/code&gt;分析后确定）。&lt;br&gt;
如上面输入&lt;code&gt;binwalk&lt;/code&gt;命令后，可得知内含的JPEG文件从&lt;code&gt;271007&lt;/code&gt;开始，则此处&lt;code&gt;skip=271007&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;0x02-知识点&#34;&gt;0x02 知识点&lt;/h1&gt;
&lt;h2 id=&#34;文件头文件尾&#34;&gt;文件头文件尾&lt;/h2&gt;
&lt;p&gt;每个文件格式有相应的文件头和文件尾，可通过十六进制编辑器查看。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
&lt;code&gt;.jpg&lt;/code&gt;：开头——&lt;code&gt;FF D8&lt;/code&gt;，结尾——&lt;code&gt;FF D9&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;重点：超过文件尾的部分不会被读取。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;文件模板&#34;&gt;文件模板&lt;/h2&gt;
&lt;p&gt;以十六进制查看方式打开后，若存在对应模板，&lt;br&gt;
则会将整个十六进制划分成一个个部分，每部分会有各自的作用。&lt;/p&gt;
&lt;p&gt;可根据模板的划分，快速确定某一部分十六进制代表什么意思，有什么作用，储存什么信息等。&lt;/p&gt;
&lt;p&gt;如图：&lt;br&gt;
&lt;figure style=&#34;flex-grow: 184; flex-basis: 443px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/%E6%96%87%E4%BB%B6%E6%A8%A1%E6%9D%BF.png&#34; data-size=&#34;1920x1038&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/%E6%96%87%E4%BB%B6%E6%A8%A1%E6%9D%BF.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/%E6%96%87%E4%BB%B6%E6%A8%A1%E6%9D%BF_hu44fa7a4b09e38036e26c26555aa0d739_166464_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/%E6%96%87%E4%BB%B6%E6%A8%A1%E6%9D%BF_hu44fa7a4b09e38036e26c26555aa0d739_166464_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1920&#34;
				height=&#34;1038&#34;
				loading=&#34;lazy&#34;
				alt=&#34;文件模板&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;文件模板&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可见通过PNG文件模板将十六进制分为了许多部分。&lt;/p&gt;
&lt;p&gt;最常用的信息如告知图片长宽、属性。&lt;/p&gt;
&lt;h2 id=&#34;文件属性&#34;&gt;文件属性&lt;/h2&gt;
&lt;p&gt;就是文件的属性【？……&lt;br&gt;
点击右键属性，可查看文件的一定属性信息。&lt;/p&gt;
&lt;p&gt;如图：&lt;br&gt;
&lt;figure style=&#34;flex-grow: 64; flex-basis: 154px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7.png&#34; data-size=&#34;420x651&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7_huc42468176a7e4d4c659042e911af5517_28126_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/%E6%96%87%E4%BB%B6%E5%B1%9E%E6%80%A7_huc42468176a7e4d4c659042e911af5517_28126_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;420&#34;
				height=&#34;651&#34;
				loading=&#34;lazy&#34;
				alt=&#34;文件属性&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;文件属性&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&#34;0x03-图片隐写分类&#34;&gt;0x03 图片隐写分类&lt;/h1&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 176; flex-basis: 423px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99%E5%88%86%E7%B1%BB.png&#34; data-size=&#34;1421x805&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99%E5%88%86%E7%B1%BB.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99%E5%88%86%E7%B1%BB_huc3e5ae86ffd9d6c34e0f45651723242c_674835_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/%E5%9B%BE%E7%89%87%E9%9A%90%E5%86%99%E5%88%86%E7%B1%BB_huc3e5ae86ffd9d6c34e0f45651723242c_674835_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1421&#34;
				height=&#34;805&#34;
				loading=&#34;lazy&#34;
				alt=&#34;图片隐写分类&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;图片隐写分类&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&#34;1-属性隐写&#34;&gt;1. 属性隐写&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;【就单纯在文件属性（标题、作者等）中写东西，很少用……&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-16进制隐写&#34;&gt;2. 16进制隐写&lt;/h2&gt;
&lt;p&gt;一般在文件的16进制格式中增添或修改，达到隐写字符串的目的。&lt;/p&gt;
&lt;p&gt;常见形式：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在文件尾后直接隐写内容。
&lt;ul&gt;
&lt;li&gt;原理：文件不会读取超过文件尾的部分。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
&lt;figure style=&#34;flex-grow: 372; flex-basis: 893px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/16%E8%BF%9B%E5%88%B6%E9%9A%90%E5%86%99-%E6%96%87%E4%BB%B6%E5%B0%BE.png&#34; data-size=&#34;674x181&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/16%E8%BF%9B%E5%88%B6%E9%9A%90%E5%86%99-%E6%96%87%E4%BB%B6%E5%B0%BE.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/16%E8%BF%9B%E5%88%B6%E9%9A%90%E5%86%99-%E6%96%87%E4%BB%B6%E5%B0%BE_hu04db99b9c03b8b48ec53a80de8e9f09a_16618_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/16%E8%BF%9B%E5%88%B6%E9%9A%90%E5%86%99-%E6%96%87%E4%BB%B6%E5%B0%BE_hu04db99b9c03b8b48ec53a80de8e9f09a_16618_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;674&#34;
				height=&#34;181&#34;
				loading=&#34;lazy&#34;
				alt=&#34;16进制隐写 - 文件尾&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;16进制隐写 - 文件尾&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;br&gt;
可以发现文件尾后还有&lt;code&gt;niconiconi&lt;/code&gt;这个字符串。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;在中间部分隐写内容。
&lt;ul&gt;
&lt;li&gt;原理：有些时候在中间处修改添加内容，是不会或略微影响文件正常读取的，从而达到隐写的效果。&lt;/li&gt;
&lt;li&gt;判断方法：图片可能会有所怪异，如中间有条线。
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
&lt;figure style=&#34;flex-grow: 149; flex-basis: 359px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/16%E8%BF%9B%E5%88%B6%E9%9A%90%E5%86%99-%E4%BE%8B%E9%A2%98.jpeg&#34; data-size=&#34;2600x1736&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/16%E8%BF%9B%E5%88%B6%E9%9A%90%E5%86%99-%E4%BE%8B%E9%A2%98.jpeg&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/16%E8%BF%9B%E5%88%B6%E9%9A%90%E5%86%99-%E4%BE%8B%E9%A2%98_hu7213fd93d5f48756bf5f780e62d8940c_420441_480x0_resize_q75_box.jpeg 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/16%E8%BF%9B%E5%88%B6%E9%9A%90%E5%86%99-%E4%BE%8B%E9%A2%98_hu7213fd93d5f48756bf5f780e62d8940c_420441_1024x0_resize_q75_box.jpeg 1024w&#34;
				width=&#34;2600&#34;
				height=&#34;1736&#34;
				loading=&#34;lazy&#34;
				alt=&#34;16进制隐写 - 例题&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;16进制隐写 - 例题&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;br&gt;
可以发现黑丝【？】那有明显的一条线。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;对应方法：使用Linux命令中的&lt;code&gt;strings&lt;/code&gt;或&lt;code&gt;grep&lt;/code&gt;。&lt;br&gt;
&lt;em&gt;使用例见上方&lt;a class=&#34;link&#34; href=&#34;#%e7%9b%b8%e5%85%b3%e5%91%bd%e4%bb%a4&#34; &gt;虚拟机——&amp;ldquo;Kail&amp;quot;的命令部分&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;不给出文件后缀名，不能直接判断出这个文件是什么格式。&lt;/p&gt;
&lt;p&gt;可以通过16进制编辑器，&lt;strong&gt;查看对应的文件头&lt;/strong&gt;，从而找出是什么格式。&lt;/p&gt;
&lt;h2 id=&#34;3-文件包含&#34;&gt;3. 文件包含&lt;/h2&gt;
&lt;p&gt;隐写的内容可能为简单的字符串，也可能为&lt;strong&gt;若干个新的文件&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;解决方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通过Linux命令&lt;code&gt;binwalk&lt;/code&gt;来分析或&lt;code&gt;binwalk -a&lt;/code&gt;尝试分离。&lt;/li&gt;
&lt;li&gt;通过Linux命令&lt;code&gt;foremost&lt;/code&gt;来尝试分离。&lt;/li&gt;
&lt;li&gt;通过Linux命令&lt;code&gt;dd&lt;/code&gt;来尝试分离。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;以上三种命令的使用例见上方&lt;a class=&#34;link&#34; href=&#34;#%e7%9b%b8%e5%85%b3%e5%91%bd%e4%bb%a4&#34; &gt;虚拟机——&amp;ldquo;Kail&amp;quot;的命令部分&lt;/a&gt;。&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;直接以16进制编辑器&amp;quot;010 Editor&amp;rdquo;，将所隐藏的文件16进制部分写入到一个新的文件后并打开。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;4-文件头修改隐写&#34;&gt;4. 文件头修改隐写&lt;/h2&gt;
&lt;p&gt;将文件头修改或删除，文件将不能读取。&lt;br&gt;
&lt;em&gt;但破坏文件尾可能不会影响读取。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;需要通过16进制编辑器查看文件头尾部分，分析出该有的文件头。&lt;/p&gt;
&lt;h2 id=&#34;5-gif&#34;&gt;5. gif&lt;/h2&gt;
&lt;h3 id=&#34;特殊帧&#34;&gt;特殊帧&lt;/h3&gt;
&lt;p&gt;隐藏在帧中的信息。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
&lt;figure style=&#34;flex-grow: 117; flex-basis: 282px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/gif-%E7%89%B9%E6%AE%8A%E5%B8%A7.gif&#34; data-size=&#34;219x186&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/gif-%E7%89%B9%E6%AE%8A%E5%B8%A7.gif&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/gif-%E7%89%B9%E6%AE%8A%E5%B8%A7_hubc11521b1fa6218c45a5b162984b5e4d_1568845_480x0_resize_box.gif 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/gif-%E7%89%B9%E6%AE%8A%E5%B8%A7_hubc11521b1fa6218c45a5b162984b5e4d_1568845_1024x0_resize_box.gif 1024w&#34;
				width=&#34;219&#34;
				height=&#34;186&#34;
				loading=&#34;lazy&#34;
				alt=&#34;gif - 特殊帧&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;gif - 特殊帧&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;br&gt;
&lt;em&gt;【需要点击图片才能查看动图】&lt;/em&gt;&lt;br&gt;
可以明显看见图中会闪过一些东西。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;一般选择逐帧分析的方法。&lt;br&gt;
&lt;em&gt;【当然可以选择用手速来截图查看【b站视频闪过图片的常用方法x……&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;逐帧分析工具：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;PhotoShop&lt;br&gt;
会将每帧分为一层图层，即可查看。&lt;/li&gt;
&lt;li&gt;Stegsolve.jar&lt;br&gt;
打开图片后，点击&amp;quot;Analyse&amp;quot;中的&amp;quot;Frame Browser&amp;quot;也可以逐帧查看。&lt;/li&gt;
&lt;li&gt;Ulead GIF&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;帧的时间间隔&#34;&gt;帧的时间间隔&lt;/h3&gt;
&lt;p&gt;信息也可能隐藏在帧时间间隔中。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
很多帧都是$0.1$s，但某几帧是$0.2$s，就很有问题.jpg……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;采用&amp;quot;Ulead GIF&amp;quot;来查看帧时间间隔。&lt;/p&gt;
&lt;h2 id=&#34;6-pngbmp&#34;&gt;6. png(bmp)&lt;/h2&gt;
&lt;h3 id=&#34;长高修改ihdr&#34;&gt;长高修改(IHDR)&lt;/h3&gt;
&lt;p&gt;可能通过&lt;strong&gt;修改宽高&lt;/strong&gt;，隐藏了某些信息，&lt;br&gt;
通过16进制编辑器来修改查看。&lt;/p&gt;
&lt;p&gt;其中宽高信息则在模板中IHDR部分里可查看。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;一般是修改高&lt;/strong&gt;，因为修改宽会导致不能正常显示。&lt;br&gt;
&lt;em&gt;并且修改得大一点更好，避免重复修改。&lt;/em&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
&lt;figure style=&#34;flex-grow: 177; flex-basis: 426px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-%E4%BF%AE%E6%94%B9%E9%AB%98_1.png&#34; data-size=&#34;1920x1080&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-%E4%BF%AE%E6%94%B9%E9%AB%98_1.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-%E4%BF%AE%E6%94%B9%E9%AB%98_1_hu2f1e39eb229ed32311a7f8201f851bd5_1385593_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/png-%E4%BF%AE%E6%94%B9%E9%AB%98_1_hu2f1e39eb229ed32311a7f8201f851bd5_1385593_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1920&#34;
				height=&#34;1080&#34;
				loading=&#34;lazy&#34;
				alt=&#34;长高修改 - 修改高&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;长高修改 - 修改高&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;br&gt;
&lt;figure style=&#34;flex-grow: 177; flex-basis: 426px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-%E4%BF%AE%E6%94%B9%E9%AB%98_2.png&#34; data-size=&#34;1920x1080&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-%E4%BF%AE%E6%94%B9%E9%AB%98_2.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-%E4%BF%AE%E6%94%B9%E9%AB%98_2_hu6c457ac6328d2d2808cdab535cad5daa_1104997_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/png-%E4%BF%AE%E6%94%B9%E9%AB%98_2_hu6c457ac6328d2d2808cdab535cad5daa_1104997_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1920&#34;
				height=&#34;1080&#34;
				loading=&#34;lazy&#34;
				alt=&#34;长高修改 - 发现隐写信息&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;长高修改 - 发现隐写信息&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;br&gt;
将该图片的高增大后，则可发现隐藏信息。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;判断是否高被修改的方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过检验CRC32确定。
当用&amp;quot;010 Editor&amp;quot;打开图片后，若输出窗口中会报错，显示CRC32有问题，证明这张图片的属性（如本类中的高）被篡改过。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
&lt;figure style=&#34;flex-grow: 2017; flex-basis: 4842px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-IHDR-CRC32%E9%94%99%E8%AF%AF.png&#34; data-size=&#34;1372x68&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-IHDR-CRC32%E9%94%99%E8%AF%AF.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-IHDR-CRC32%E9%94%99%E8%AF%AF_huf63c8c929bc9d31596748a75f94681fb_11462_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/png-IHDR-CRC32%E9%94%99%E8%AF%AF_huf63c8c929bc9d31596748a75f94681fb_11462_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1372&#34;
				height=&#34;68&#34;
				loading=&#34;lazy&#34;
				alt=&#34;CRC32错误显示&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;CRC32错误显示&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也可以手动计算校验和来比对。&lt;br&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;手动计算方法&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;ol&gt;
&lt;li&gt;先选中IHDR到crc之前的部分。&lt;br&gt;
&lt;img src=&#34;pic/png-IHDR-%E6%89%8B%E5%8A%A8CRC32%E8%AE%A1%E7%AE%97_1.png&#34; alt=&#34;选中部分&#34;&gt;&lt;br&gt;
对应模板中的&amp;quot;union CTYPE type&amp;quot;和&amp;quot;struct PNG_CHUNK_IHDR_ihdr&amp;quot;两个部分。&lt;br&gt;
&lt;img src=&#34;pic/png-IHDR-%E6%89%8B%E5%8A%A8CRC32%E8%AE%A1%E7%AE%97_2.png&#34; alt=&#34;模板对应处&#34;&gt;&lt;/li&gt;
&lt;li&gt;然后点击“工具”中的“校验和”，选择“CRC-32”。&lt;br&gt;
&lt;img src=&#34;pic/png-IHDR-%E6%89%8B%E5%8A%A8CRC32%E8%AE%A1%E7%AE%97_3.png&#34; alt=&#34;计算校验和&#34;&gt;&lt;/li&gt;
&lt;li&gt;得到计算结果后与crc部分比对即可。&lt;br&gt;
&lt;img src=&#34;pic/png-IHDR-%E6%89%8B%E5%8A%A8CRC32%E8%AE%A1%E7%AE%97_4.png&#34; alt=&#34;计算出的校验和&#34;&gt; &lt;img src=&#34;pic/png-IHDR-%E6%89%8B%E5%8A%A8CRC32%E8%AE%A1%E7%AE%97_5.png&#34; alt=&#34;文件中的校验和&#34;&gt;&lt;br&gt;
&lt;em&gt;注意文件中的检验和是1FCF9E8E，没有那个h。&lt;/em&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
&lt;/details&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;脚本爆破来得到真实高度。&lt;br&gt;
&lt;em&gt;就是暴力的意思，不断修改高度并比对校验和，如果一致则为正确高度。&lt;/em&gt;&lt;br&gt;
爆破python代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;os&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;binascii&lt;/span&gt;
&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;struct&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;misc&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;***.png&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;rb&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 请在这里填写要爆破的文件名&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# 爆破高&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;crc32_bytes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;misc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x20&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 文件IHDR块的crc32的bytes&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;crc32_hex_eval&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;eval&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;0x&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;crc32_bytes&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;())&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 将crc32的bytes串 -&amp;gt; hex串 -&amp;gt; 值 &lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4096&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;misc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x0c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x0f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;misc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x13&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;struct&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pack&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;gt;i&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;misc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x18&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;mh&#34;&gt;0x1c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 爆破IHDR数据&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;crc32&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;binascii&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;crc32&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;data&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mh&#34;&gt;0xffffffff&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;# 计算当前crc32&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;crc32&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;crc32_hex_eval&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;height:&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;height_hex: &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;hex&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;数据块idat修改&#34;&gt;数据块IDAT修改&lt;/h3&gt;
&lt;p&gt;本来IDAT数据块是写满当前块后再换下一个块，&lt;br&gt;
但用&amp;quot;010 Editor&amp;quot;查看后发现有IDAT块有异常（不满足上述规律），故这个数据块可能藏有信息。&lt;/p&gt;
&lt;p&gt;检测方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用&lt;code&gt;pngcheck.exe&lt;/code&gt;来查看IDAT数据块情况。
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
输入&lt;code&gt;pngcheck.exe -v ***.png&lt;/code&gt;后，&lt;br&gt;
&lt;figure style=&#34;flex-grow: 244; flex-basis: 586px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-IDAT-pngcheck.png&#34; data-size=&#34;1368x560&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-IDAT-pngcheck.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-IDAT-pngcheck_hu4bf2919553c0fe92453278902e34f963_199435_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/png-IDAT-pngcheck_hu4bf2919553c0fe92453278902e34f963_199435_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1368&#34;
				height=&#34;560&#34;
				loading=&#34;lazy&#34;
				alt=&#34;pngcheck&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;pngcheck&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;br&gt;
发现最后部分有异常。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;将该数据块十六进制提取出来后，用脚本或其他方法得到信息。&lt;/p&gt;
&lt;p&gt;得到信息方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&amp;ldquo;010 Editor&amp;rdquo; + &amp;ldquo;zlib.py&amp;rdquo;&lt;br&gt;
用010查看后得到异常部分的16进制，复制后放入脚本运行可得到信息。&lt;br&gt;
&lt;figure style=&#34;flex-grow: 177; flex-basis: 426px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-IDAT-zlib.png&#34; data-size=&#34;1920x1080&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-IDAT-zlib.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-IDAT-zlib_huf19167afd3b42c3af8380d89b98a6352_596727_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/png-IDAT-zlib_huf19167afd3b42c3af8380d89b98a6352_596727_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1920&#34;
				height=&#34;1080&#34;
				loading=&#34;lazy&#34;
				alt=&#34;zlib得到信息&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;zlib得到信息&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/li&gt;
&lt;li&gt;用&lt;code&gt;binwalk -e&lt;/code&gt;提取，直接得到信息。
&lt;figure style=&#34;flex-grow: 264; flex-basis: 634px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-IDAT-binwalk.png&#34; data-size=&#34;690x261&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-IDAT-binwalk.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-IDAT-binwalk_huc0dbc55f13899563010aae791b1e1846_38667_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/png-IDAT-binwalk_huc0dbc55f13899563010aae791b1e1846_38667_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;690&#34;
				height=&#34;261&#34;
				loading=&#34;lazy&#34;
				alt=&#34;binwalk得到信息&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;binwalk得到信息&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;lsb隐写&#34;&gt;lsb隐写&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;为贝塔姐姐强调的部分。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;snote quote &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 接下来我们讲一个大头er~ &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;又称“最低有效位隐写”。&lt;/p&gt;
&lt;p&gt;将隐写内容转换为2进制，整合修改到图片2进制形式的最低位，使得颜色被修改程度极小，&lt;strong&gt;肉眼无法分辨&lt;/strong&gt;。&lt;br&gt;
但可以通过某些命令或脚本来分辨出。&lt;/p&gt;
&lt;h4 id=&#34;不带密匙&#34;&gt;不带密匙&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;通过&amp;quot;Stegsolve.jar&amp;quot;分析。&lt;br&gt;
用&amp;quot;Analyse&amp;quot;的&amp;quot;Data Extract&amp;rdquo;，一个个选项测试得到文本串或者新的文件。&lt;/p&gt;
&lt;p&gt;可参考&amp;quot;cat47&amp;quot;的文章&lt;a class=&#34;link&#34; href=&#34;https://cnblogs.com/cat47/p/11483478.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;stegsolve使用方法&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;&lt;code&gt;zsteg&lt;/code&gt;（很好用）&lt;/strong&gt;&lt;br&gt;
使用命令&lt;code&gt;zsteg xxx.png&lt;/code&gt;来查看各种方式下的文本串或者文件（如果这个命令中没有发现，则可以用&lt;code&gt;zsteg -a xxx.png&lt;/code&gt;），&lt;br&gt;
然后用命令&lt;code&gt;zsteg -e ...(分析的通道) &amp;gt; ***.xxx&lt;/code&gt;得到文件&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
对某图片使用命令&lt;code&gt;zsteg lsb.png&lt;/code&gt;后，&lt;br&gt;
&lt;figure style=&#34;flex-grow: 261; flex-basis: 627px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-zsteg_1.png&#34; data-size=&#34;617x236&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-zsteg_1.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-zsteg_1_hu6547dd33a8fbf2d1fd94fdc63470684b_50780_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-zsteg_1_hu6547dd33a8fbf2d1fd94fdc63470684b_50780_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;617&#34;
				height=&#34;236&#34;
				loading=&#34;lazy&#34;
				alt=&#34;zsteg - 分析&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;zsteg - 分析&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;br&gt;
发现&lt;code&gt;b1,rgb,lsb,xy&lt;/code&gt;这个方式存在一个PNG文件。&lt;br&gt;
则使用命令&lt;code&gt;zsteg -e b1,rgb,lsb,xy &amp;gt; ans.png&lt;/code&gt;得到文件。&lt;br&gt;
&lt;figure style=&#34;flex-grow: 564; flex-basis: 1354px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-zsteg_2.png&#34; data-size=&#34;666x118&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-zsteg_2.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-zsteg_2_hudb22b476cca2663bfa85d81c03be66ea_46937_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-zsteg_2_hudb22b476cca2663bfa85d81c03be66ea_46937_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;666&#34;
				height=&#34;118&#34;
				loading=&#34;lazy&#34;
				alt=&#34;zsteg - 提取&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;zsteg - 提取&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可参考&amp;quot;β-AS&amp;quot;姐姐的文章&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/Amherstieae/article/details/107512398&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;隐写工具zsteg安装+使用教程&lt;/a&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h4 id=&#34;带密匙&#34;&gt;带密匙&lt;/h4&gt;
&lt;p&gt;带密钥的可以用&amp;quot;cloacked-pixel&amp;quot;脚本。&lt;br&gt;
&lt;strong&gt;该脚本为python2环境，并且需要numpy、matplotlib、Pillow、pycrypto库的支持。&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 由于为过气python2环境（且并无python3版本），所需配置较为复杂，所有注意事项已写在下方折叠栏中。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;cloacked-pixel脚本的各种注意事项&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;同时安装python2和python3方法：&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;请参考文章&lt;a href=&#34;https://blog.csdn.net/zuochang_liu/article/details/91361756&#34;&gt;如何设置python2，python3，并添加环境变量&lt;/a&gt;。&lt;/div&gt;
&lt;/details&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;python2库本地安装方式：&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;p&gt;感觉pip2现在好像不能在线安装库了【？……&lt;br&gt;
所以只能在&lt;a href=&#34;https://pypi.org/&#34;&gt;pypi&lt;/a&gt;中将库下载到本地安装。&lt;/p&gt;
&lt;p&gt;选择合适的版本，下载到本地。&lt;br&gt;
下载完成后在cmd中，输入&lt;code&gt;pip2 install ...(本地路径)&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 路径快速输入方法：输入&lt;code&gt;pip2 install&lt;/code&gt;后，将文件直接拖入cmd窗口中即可。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;即可成功安装。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;参考自文章&lt;a href=&#34;https://www.cnblogs.com/teagnes/p/6032964.html&#34;&gt;Python2.7本地安装numpy包&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;上述库的下载地址：&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 以下库为个人挨个查询并对应版本后下载，均为Python2.7所能支持的最新版本，可直接下载后按上述安装方法安装。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/14/ef/9f2eeb4ff0c733ad9149f17266e388c308e171fdb8c2415dbb472e2bbc0f/numpy-1.16.6-cp27-cp27m-win_amd64.whl&#34;&gt;numpy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/ee/ff/48bde5c0f013094d729fe4b0316ba2a24774b3ff1c52d924a8a4cb04078a/six-1.15.0-py2.py3-none-any.whl&#34;&gt;six&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/f7/d2/e07d3ebb2bd7af696440ce7e754c59dd546ffe1bbe732c8ab68b9c834e61/cycler-0.10.0-py2.py3-none-any.whl&#34;&gt;cycle&lt;/a&gt;（需要先安装six）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/70/94/784178ca5dd892a98f113cdd923372024dc04b8d40abe77ca76b5fb90ca6/pytz-2021.1-py2.py3-none-any.whl&#34;&gt;pytz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/4e/02/9c79d58f2e9f61d201f8390b5f51fdb0c19e777a241818b784f2a38ee013/kiwisolver-1.1.0-cp27-none-win_amd64.whl&#34;&gt;kiwisolver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/d4/70/d60450c3dd48ef87586924207ae8907090de0b306af2bce5d134d78615cb/python_dateutil-2.8.1-py2.py3-none-any.whl&#34;&gt;python-dateutil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/da/d1/080d2bb13773803648281a49e3918f65b31b7beebf009887a529357fd44a/backports.functools_lru_cache-1.6.1-py2.py3-none-any.whl&#34;&gt;backports.functools-lru-cache&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/8a/bb/488841f56197b13700afd5658fc279a2025a39e22449b7cf29864669b15d/pyparsing-2.4.7-py2.py3-none-any.whl&#34;&gt;pyparsing&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/60/f3/6bf72ceec1f3cd3ff5df1ab71d1655920f099c34484360bbed025ded521f/matplotlib-2.2.5-cp27-cp27m-win_amd64.whl&#34;&gt;matplotlib&lt;/a&gt;（需要先安装cycle、pytz、kiwisolver、python-dateutil、backports.functools-lru-cache、pyparsing）&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/5e/b6/8960697526a79bd1cb4520293078be3a10d725f23f20abbee298ebdeaabd/Pillow-6.2.2-cp27-cp27m-win_amd64.whl&#34;&gt;Pillow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/60/db/645aa9af249f059cc3a368b118de33889219e0362141e75d4eaf6f80f163/pycrypto-2.6.1.tar.gz&#34;&gt;pycrypto&lt;/a&gt;（&lt;strong&gt;安装方法有所不同&lt;/strong&gt;，请见&lt;a href=&#34;https://blog.csdn.net/qq_40657585/article/details/84309573&#34;&gt;python2.7 安装pycrypto库&lt;/a&gt;中“下载压缩包解压到本地”部分）&lt;br&gt;
同时安装时还需要&amp;quot;vcvarsall.bat&amp;quot;，方法为两步：
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;下载&lt;a href=&#34;https://download.microsoft.com/download/7/9/6/796EF2E4-801B-4FC4-AB28-B59FBF6D907B/VCForPython27.msi&#34;&gt;&amp;ldquo;Microsoft Visual C++ Compiler for Python 2.7&amp;rdquo;&lt;/a&gt;并安装。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;按照&lt;a href=&#34;https://blog.csdn.net/donger_soft/article/details/44838109&#34;&gt;完美解决“Unable to find vcvarsall.bat”错误&lt;/a&gt;中配置注册表。&lt;br&gt;
【其中路径为&lt;code&gt;C:\Users\SuperSASSw\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0&lt;/code&gt;】&lt;/p&gt;
&lt;p&gt;&lt;em&gt;不确定是否还需要配置环境变量（个人为配置了的），如果仍有问题，请点击开始菜单中的&amp;quot;Microsoft Visual C++ Compiler Package for Python 2.7&amp;quot;这个文件夹中，自己对应平台的&amp;quot;Visual C++ 2008 xx-bit Command Prompt&amp;quot;这个快捷方式。&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;snote yellow &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;以下折叠部分为安装&lt;a href=&#34;https://pypi.org/project/crypto/&#34;&gt;crypto&lt;/a&gt;库所需库，但安装这个后发现不对（有个Random不存在orz……），&lt;br&gt;
查询后发现为上面那个&amp;quot;pycrypto&amp;quot;库。&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;crypto所需库&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;ul&gt;
&lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/d0/f4/0081137fceff5779cd4205c1e96657e41cc2d2d56c940dc8eeb6111780f7/shellescape-3.8.1-py2.py3-none-any.whl&#34;&gt;shellescape&lt;/a&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/c5/5b/b961f4add16d941585f318051dd5410a01596d98132acab8cf8e9e18e20c/PyYAML-5.4.1-cp27-cp27m-win_amd64.whl&#34;&gt;PyYAML&lt;/a&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/19/c7/fa589626997dd07bd87d9269342ccb74b1720384a4d739a1872bd84fbe68/chardet-4.0.0-py2.py3-none-any.whl&#34;&gt;chardet&lt;/a&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/5e/a0/5f06e1e1d463903cf0c0eebeb751791119ed7a4b3737fdc9a77f1cdfb51f/certifi-2020.12.5-py2.py3-none-any.whl&#34;&gt;certifi&lt;/a&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/23/fc/8a49991f7905261f9ca9df5aa9b58363c3c821ce3e7f671895442b7100f2/urllib3-1.26.3-py2.py3-none-any.whl&#34;&gt;urllib3&lt;/a&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/a2/38/928ddce2273eaa564f6f50de919327bf3a00f091b5baba8dfa9460f3a8a8/idna-2.10-py2.py3-none-any.whl&#34;&gt;idna&lt;/a&gt;&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href=&#34;https://files.pythonhosted.org/packages/29/c1/24814557f1d22c56d50280771a17307e6bf87b70727d975fd6b2ce6b014a/requests-2.25.1-py2.py3-none-any.whl&#34;&gt;requests&lt;/a&gt;（需要先安装chardet、certifi、urllib3、na）&lt;/del&gt;&lt;/li&gt;
&lt;li&gt;&lt;del&gt;&lt;a href=&#34;%5Bpic/png-lsb-zsteg_2.png%5D(https://files.pythonhosted.org/packages/02/36/b8107b51adca73402ec1860d88f41d958e275e60eea6eeaa9c39ddb89a40/Naked-0.1.31-py2.py3-none-any.whl)&#34;&gt;Naked&lt;/a&gt;（需要先安装YAML、requests）&lt;/del&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;p&gt;【弄了我好久啊这些库qwqqq太累了……&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;p&gt;命令：&lt;br&gt;
&lt;code&gt;python2 lsb.py extract ***.png *** KEY&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;***.png&lt;/code&gt;为源文件名。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;***&lt;/code&gt;为输出文件名。（由于不确定什么格式，可以先不加扩展名，用010查看后再加上对应扩展名）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;KEY&lt;/code&gt;为密匙。&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
输入命令&lt;code&gt;python2 lsb.py extract lsb（123456）.png ans 123456&lt;/code&gt;&lt;br&gt;
&lt;figure style=&#34;flex-grow: 1101; flex-basis: 2642px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-key_1.png&#34; data-size=&#34;1013x92&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-key_1.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-key_1_hu845e01fd34376df822a8c18fc5b457ad_9202_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-key_1_hu845e01fd34376df822a8c18fc5b457ad_9202_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1013&#34;
				height=&#34;92&#34;
				loading=&#34;lazy&#34;
				alt=&#34;带密匙的lsb - 使用脚本后结果&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;带密匙的lsb - 使用脚本后结果&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;br&gt;
打开ans后，发现直接为flag。&lt;br&gt;
&lt;figure style=&#34;flex-grow: 588; flex-basis: 1413px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-key_2.png&#34; data-size=&#34;318x54&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-key_2.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-key_2_hu4bbb68a20cbee7ea80242685f13964e5_2829_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/png-lsb-key_2_hu4bbb68a20cbee7ea80242685f13964e5_2829_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;318&#34;
				height=&#34;54&#34;
				loading=&#34;lazy&#34;
				alt=&#34;带密匙的lsb - 打开ans文件&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;带密匙的lsb - 打开ans文件&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;bmp&#34;&gt;bmp&lt;/h3&gt;
&lt;p&gt;用&amp;quot;wbStego4.3open&amp;quot;工具对bmp或pdf等格式文件进行加密解密。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
打开工具，按照步骤来执行就可以得到文件了。&lt;br&gt;
&lt;figure style=&#34;flex-grow: 150; flex-basis: 360px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step2.png&#34; data-size=&#34;542x361&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step2.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step2_hu10c4f7b63adf91150f550a11af220433_11460_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step2_hu10c4f7b63adf91150f550a11af220433_11460_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;542&#34;
				height=&#34;361&#34;
				loading=&#34;lazy&#34;
				alt=&#34;wbStego4.3open - 步骤2 选择方式&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;wbStego4.3open - 步骤2 选择方式&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure style=&#34;flex-grow: 150; flex-basis: 360px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step3.png&#34; data-size=&#34;542x361&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step3.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step3_hu21b812eaf8809b8fd6682b12e8e31862_14823_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step3_hu21b812eaf8809b8fd6682b12e8e31862_14823_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;542&#34;
				height=&#34;361&#34;
				loading=&#34;lazy&#34;
				alt=&#34;wbStego4.3open - 步骤3 选择文件及类型&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;wbStego4.3open - 步骤3 选择文件及类型&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;br&gt;
&lt;figure style=&#34;flex-grow: 150; flex-basis: 360px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step4.png&#34; data-size=&#34;542x361&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step4.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step4_huf40d600781faba395c41bdb312c179be_10758_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step4_huf40d600781faba395c41bdb312c179be_10758_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;542&#34;
				height=&#34;361&#34;
				loading=&#34;lazy&#34;
				alt=&#34;wbStego4.3open - 步骤4 输入密匙&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;wbStego4.3open - 步骤4 输入密匙&lt;/figcaption&gt;
		
	&lt;/figure&gt; &lt;figure style=&#34;flex-grow: 150; flex-basis: 360px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step5.png&#34; data-size=&#34;542x361&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step5.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step5_hu308531206d844f161ef7b9843473e32d_10162_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-step5_hu308531206d844f161ef7b9843473e32d_10162_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;542&#34;
				height=&#34;361&#34;
				loading=&#34;lazy&#34;
				alt=&#34;wbStego4.3open - 步骤5 输入输出文件名&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;wbStego4.3open - 步骤5 输入输出文件名&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;br&gt;
&lt;figure style=&#34;flex-grow: 302; flex-basis: 725px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-ans.png&#34; data-size=&#34;420x139&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-ans.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-ans_hu0f9574336343ed36f6b6c93eae174dc5_14044_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/ctf-misc-1/pic/bmp-wbStego-ans_hu0f9574336343ed36f6b6c93eae174dc5_14044_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;420&#34;
				height=&#34;139&#34;
				loading=&#34;lazy&#34;
				alt=&#34;wbStego4.3open - 结果&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;wbStego4.3open - 结果&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;snote bug red&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; Tip: 这个软件不能直接关闭，需要用任务管理器结束orz…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h1 id=&#34;0x04-写在最后&#34;&gt;0x04 写在最后&lt;/h1&gt;
&lt;p&gt;&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 以上大部分为个人总结，由于这里也刚入门，很多地方可能存在错误。如发现错误请及时指出，谢谢！…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote link green&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 由于目前博客不支持附件上传下载，所以如果需要上述中的文件，可以联系我分享文件【联系方式在关于页面中有…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote up cyan&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 如对以上内容存在疑惑不解的地方，也可以询问我。如果我了解的话会尽力解答；不了解的话可以一起努力弄明白hhh…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;剩余部分因为时间原因没有继续讲啦_(:з」∠)_……&lt;br&gt;
看好久有时间自学一下【？……&lt;/p&gt;
&lt;p&gt;再次感谢贝塔小姐姐的详细讲解！【第一节课真的很不容易的……&lt;/p&gt;
&lt;p&gt;之前没有接触过CTF，不过了解后对其兴趣很高……&lt;br&gt;
希望经过这次涅普计划的系统学习能有很大的收获吧√……&lt;/p&gt;
&lt;p&gt;以上……&lt;/p&gt;
</description>
        </item>
        <item>
        <title>日常练习——2021/1/25……</title>
        <link>https://blog.supersassw.com/p/prac-2020-1-25/</link>
        <pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/prac-2020-1-25/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/prac-2020-1-25/Yande-199983.png" alt="Featured image of post 日常练习——2021/1/25……" /&gt;&lt;h1 id=&#34;题目链接&#34;&gt;题目链接&lt;/h1&gt;
&lt;p&gt;P4863 &lt;a class=&#34;link&#34; href=&#34;https://www.luogu.com.cn/problem/P4863&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;JerryC Loves Driving&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&#34;题目分析&#34;&gt;题目分析&lt;/h1&gt;
&lt;p&gt;对于一层求和，其实就是一层&lt;code&gt;for&lt;/code&gt;，那么两层求和就是两层&lt;code&gt;for&lt;/code&gt;，也就是二维的。&lt;br&gt;
而对于求和O(n)的优化计算方法，最基本的就是&lt;strong&gt;转换为等差数列O(1)计算&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;我们将两层求和的每一项列表观察（看是否有等差数列），得出下表：&lt;br&gt;
&lt;figure style=&#34;flex-grow: 277; flex-basis: 666px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid.png&#34; data-size=&#34;883x318&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid_hub2eadd258ab753ea9e43cfe8ff9df0dd_13616_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid_hub2eadd258ab753ea9e43cfe8ff9df0dd_13616_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;883&#34;
				height=&#34;318&#34;
				loading=&#34;lazy&#34;
				alt=&#34;求和表&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;求和表&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;图片来自于&lt;a class=&#34;link&#34; href=&#34;https://www.luogu.com.cn/blog/_post/276545&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;「Insouciant21」的题解&lt;/a&gt;。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;观察发现，对于每一列，是类似呈等差数列的形式的，&lt;br&gt;
对于第$i$列，是由$i$个$0 \sim n$的等差数列组成。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如第四列：为$4$个$0,1,2,\cdots,n$的等差数列组成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因此我们就可以O(1)计算出每一列的和，那么就只用&lt;strong&gt;按列循环依次求和&lt;/strong&gt;，O(n)的时间内求出结果。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;想到求解方法后，我们来确定求和计算范围。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;以下以$A=2, B=7$来举例。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 277; flex-basis: 666px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid_1.png&#34; data-size=&#34;883x318&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid_1.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid_1_hu3f9dbc4f0e4f512eede5c5658f0e05f1_14742_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid_1_hu3f9dbc4f0e4f512eede5c5658f0e05f1_14742_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;883&#34;
				height=&#34;318&#34;
				loading=&#34;lazy&#34;
				alt=&#34;求和表范围1&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;求和表范围1&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;对于题上给出的两个界：上界$A$和下届$B$，&lt;br&gt;
按照题中所给公式，最初始的范围，则对应图中红色框选内容。&lt;br&gt;
由于0部分不影响，所以也可以看成蓝色矩形部分。&lt;/p&gt;
&lt;p&gt;但如果直接这样进行计算，会发现会有很多要考虑的地方，或说运用等差数列时有很多边界的处理。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如图中所给例子：&lt;br&gt;
对于$2$这一列，则&lt;strong&gt;上方&lt;/strong&gt;的$1$并不完全属于$n$个等差数列中，要排除。&lt;br&gt;
对于$3$这一列，则&lt;strong&gt;下方&lt;/strong&gt;的$-2$并不完全属于$n$个等差数列中，要排除。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;于是我们可以想到对于求$f(A \sim B)$这一范围，可以&lt;strong&gt;转化为求$f(B)-f(A-1)$这两范围的差&lt;/strong&gt;。&lt;br&gt;
如图所示：&lt;br&gt;
&lt;figure style=&#34;flex-grow: 277; flex-basis: 666px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid_2.png&#34; data-size=&#34;883x318&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid_2.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid_2_hud772840a6d20fd893d609e67354e71b8_14418_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid_2_hud772840a6d20fd893d609e67354e71b8_14418_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;883&#34;
				height=&#34;318&#34;
				loading=&#34;lazy&#34;
				alt=&#34;求和表范围2&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;求和表范围2&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;则可以&lt;strong&gt;只用考虑下界&lt;/strong&gt;的不符合。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;这是一个很重要的方法&lt;/strong&gt;：&lt;br&gt;
将两个不确定的界的函数($f(x \sim y)$)，转化为两个有一个确定的界的函数之差（$f(C \sim x)-f(C \sim y)$）。（如定积分中经常运用）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;解题方法&#34;&gt;解题方法&lt;/h1&gt;
&lt;h2 id=&#34;on方法&#34;&gt;$O(n)$方法&lt;/h2&gt;
&lt;p&gt;对于每一列$i$：&lt;br&gt;
其和（的绝对值）为：$i$个$1,2,3,\cdots,n$的等差数列的和，加上剩余非等差数列的部分。&lt;/p&gt;
&lt;p&gt;每一列均为$n - 0 + 1$即$n + 1$项。&lt;/p&gt;
&lt;p&gt;等差数列部分：&lt;br&gt;
首项——$a_1 = 0$；&lt;br&gt;
末项——$a_n = (n + 1) / i - 1$；【原因是：首先项数有$n+1$项（包括0行），整除$i$，则得到等差数列的项数，那么末项$a_n = a_1 + (n-1)*d$，即为项数$-1$。&lt;br&gt;
项数——$n = (a_n - a_1) / 1 + 1$（公差为1），即为$a_n + 1$。&lt;/p&gt;
&lt;p&gt;非等差数列部分：&lt;br&gt;
每一项均为$a_n + 1$；&lt;br&gt;
前面已经计算了$cnt * i$项，所以剩余部分的项数为$n + 1 - (cnt * i)$。&lt;/p&gt;
&lt;h2 id=&#34;osqrtn方法&#34;&gt;$O(\sqrt{n})$方法&lt;/h2&gt;
&lt;p&gt;首先根据上述的规律可以发现：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;每一个数重复次数是按列递增的。
&lt;blockquote&gt;
&lt;p&gt;第$1$列是$1,2,3,\cdots,n$，每个数出现$1$次；第$2$列是$1,1,2,2,3,3,\cdots,n,n$，每个数出现$2$次。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;奇数行和偶数行的符号是一样的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;基于以上两点，我们发现：&lt;br&gt;
如果存在&lt;strong&gt;间隔的几列&lt;/strong&gt;（使符号相同，能合并处理），满足他们&lt;strong&gt;有的数字为一样&lt;/strong&gt;的（比如都只有$1,2,3$，只是出现次数不同）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如求$f(33)$中&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;例一：&lt;br&gt;
第$9$列为$0,0,\cdots,0;-1,-1,\cdots,-1;-2,-2,\cdots,-2;-3,-3,-3,-3,-3,-3,-3$（$9$个$0$，$9$个$-1$，$9$个$-2$，$7$个$-3$）&lt;br&gt;
第$11$列为$0,0,\cdots,0;-1,-1,\cdots,-1;-2,-2,\cdots,-2;-3$（$11$个$0$，$11$个$-1$，$11$个$-2$，$1$个$-3$）&lt;br&gt;
&lt;em&gt;为下图中蓝色两列。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;例二：
第$12$列为$0,0,\cdots,0;1,1,\cdots,1;2,2,\cdots,2$（$12$个$0$，$12$个$1$，$10$个$2$）&lt;br&gt;
第$14$列为$0,0,\cdots,0;1,1,\cdots,1;2,2,2,2,2,2$（$14$个$0$，$14$个$1$，$6$个$2$）&lt;br&gt;
第$16$列为$0,0,\cdots,0;1,1,\cdots,1;2,2$（$16$个$0$，$16$个$1$，$2$个$2$）&lt;br&gt;
&lt;em&gt;为下图中橙色三列。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 171; flex-basis: 410px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid_3.png&#34; data-size=&#34;1259x736&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid_3.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid_3_hu236708c32f989ae37e2abf0c84bdf7b1_61050_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/prac-2020-1-25/pic/%281.24%29sum_grid_3_hu236708c32f989ae37e2abf0c84bdf7b1_61050_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1259&#34;
				height=&#34;736&#34;
				loading=&#34;lazy&#34;
				alt=&#34;举例求和表&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;举例求和表&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么这几列的等差数列，是可以&lt;strong&gt;合并为一个更大的等差数列&lt;/strong&gt;一起求和的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;上例一中：&lt;br&gt;
第$9$列中的有$9$个$-1$、$9$个$-2$；&lt;br&gt;
第$11$列中的有$11$个$-1$、$11$个$-2$；&lt;br&gt;
于是这两列便可合并为$20$个$-1$，$20$个$-2$一起用高斯求和（等差数列求和）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但对于最后的一项数（如上例一中的$-3$），因为出现次数不一致，不能很好的直接合并，需要单独处理计算，&lt;br&gt;
所以我们只能&lt;strong&gt;合并倒数第二项用高斯求和&lt;/strong&gt;，然后对剩下的&lt;strong&gt;最后一项单独处理&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;这样就可以在计算的过程中合并几列同时计算，达到减少操作降低复杂度的效果。&lt;br&gt;
【&lt;em&gt;不过至于是否为O($\sqrt{n})$的复杂度我就没证了&lt;/em&gt;_(:з」∠)_……&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那么重点就是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;怎么分奇偶，找到哪几列出现数字相同。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;先算出&lt;strong&gt;这一列能出现的最大数&lt;/strong&gt;，然后再用$n$除以这个数，得到&lt;strong&gt;只能出现到这个数的最大列&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;比如求$f(33)$，处理第$9$列时，&lt;br&gt;
第$9$列能出现最大的数是$33/9$为$3$，但只能出现到$3$的最大列为$33/3$为第$11$列（可以配合上面给出的图来理解）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;怎么处理计算不能合并的最后一项。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;首先最后一项这个数我们知道是好多（为$n/i$），所以关键是&lt;strong&gt;求他有多少个&lt;/strong&gt;。&lt;br&gt;
由第一点发现可知，对于下一个间隔列，前面的项出现次数均多了$2$次，&lt;br&gt;
或者说最后一项出现次数依次减$2$。&lt;br&gt;
所以其实对于&lt;strong&gt;最后一项的出现次数&lt;/strong&gt;，也是个等差数列。&lt;br&gt;
找到等差数列的几个参数求和，得到有多少个。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首项：对应最后一列$i$，总项数为$n+1$个，前面项每个数均出现了$i$次，一共有$N$个数（计算方法就是等差数列求项数）。&lt;/li&gt;
&lt;li&gt;末项：对应第一列，计算方法同首项。&lt;/li&gt;
&lt;li&gt;项数：就是合并了几项。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;比如求$f(33)$，处理第$12$列时，最大列到$16$列&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;首项——第$16$列中：前面的项（$0$和$1$）均出现了$16$次，所以这一列最后一项（$2$）出现次数为$2$次。&lt;/li&gt;
&lt;li&gt;末项——第$12$列中：前面的项均出现了$12$次，所以这一列最后一项出现次数为$10$次。&lt;/li&gt;
&lt;li&gt;项数——合并了$12$、$14$、$16$列，项数为$3$.
则可求得最后一项$2$一共出现了$(2+10)*3/2=18$次。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;怎么处理计算合并后的等差数列。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;方法就同$O(n)$方法中求等差数列了，&lt;br&gt;
只是在最后一项（&lt;code&gt;an&lt;/code&gt;）和乘的次数（由乘&lt;code&gt;i&lt;/code&gt;变成了乘&lt;code&gt;cnt&lt;/code&gt;）变了一点。&lt;/p&gt;
&lt;p&gt;对于合并后的出现次数，也是个高斯求和。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;比如求$f(33)$，处理第$9$列时，最大列到$11$列&lt;br&gt;
第$9$列每一项出现次数为$9$次，&lt;br&gt;
第$11$列每一项出现次数为$11$次，&lt;br&gt;
所以一共出现$9+11 = 20$次，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;个人代码&#34;&gt;个人代码&lt;/h1&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define ALL(NAME_i, BEGIN, TO) \
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;	int NAME_i = BEGIN;        \
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;	NAME_i &amp;lt;= TO;              \
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;	NAME_i++
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define SGN (nega ? -1 : 1)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;typedef&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;LL&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;solve&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;LL&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nega&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ALL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;LL&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;a1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;									 &lt;span class=&#34;c1&#34;&gt;//首项
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;n&#34;&gt;an&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;					 &lt;span class=&#34;c1&#34;&gt;//末项
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;n&#34;&gt;cntSeq&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;an&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;						 &lt;span class=&#34;c1&#34;&gt;//项数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;an&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cntSeq&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SGN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	 &lt;span class=&#34;c1&#34;&gt;//先求等差数列的和
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cntSeq&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;an&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SGN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//再计算剩下的部分
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;nega&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;nega&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;								 &lt;span class=&#34;c1&#34;&gt;//变符号
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;n&#34;&gt;LL&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;solve_Odev&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;odd&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;LL&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxColumn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;nega&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;odd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;odd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxColumn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//注意赋值语句为maxColumn + 2，也就是合并处理完几列后，直接跳到处理完的列后面。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;c1&#34;&gt;//1. 怎么分奇偶，找到哪几列出现数字相同。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;LL&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;			 &lt;span class=&#34;c1&#34;&gt;//当前列能出现的最大数（或最后一项）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;maxColumn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;		 &lt;span class=&#34;c1&#34;&gt;//只能出现到这个数的最大列
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;odd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxColumn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//本来处理奇数列，但算出来最大列为偶数情况
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;n&#34;&gt;maxColumn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;odd&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxColumn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//本来处理偶数列，但算出来最大列为奇数情况
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;n&#34;&gt;maxColumn&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;cm&#34;&gt;/*对应于上图中，当n = 33, i = 12时：
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		maxNum    = 2
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		maxColumn = 16	【对应为 合并12~16列。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		*/&lt;/span&gt;

		&lt;span class=&#34;c1&#34;&gt;//2. 怎么处理计算不能合并的最后一项。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;minCnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxColumn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//首项——这几列中，最后一项出现最少的次数（为最后一列，用maxColumn）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;n&#34;&gt;maxCnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxNum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;			&lt;span class=&#34;c1&#34;&gt;//末项——这几列中，最后一项出现最多的次数（最当前列，用i）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;n&#34;&gt;cntColumn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxColumn&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//项数——合并了几列
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;cm&#34;&gt;/* 注意的点：
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		1. 总项数为n+1个，因为0也算！
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		2. 不为maxNum - 1，因为0也算！【前面项的项数为((maxNum-1) - 0) / 1 + 1，即maxNum
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		*/&lt;/span&gt;
		&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cntNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;maxCnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;minCnt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cntColumn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//求得关键——最后一项有多少个（高斯求和）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cntNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SGN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;cm&#34;&gt;/* 对应于上图中，当n = 33, i = 12, maxColumn = 16时：
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		minCnt    = 2		【对应为 最后一列有2项
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		maxCnt    = 10		【对应为 第一列有10项
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		cntColumn = 3		【对应为 合并了3列
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		cntNum    = 18		【对应为 最后一项由18个
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		*/&lt;/span&gt;

		&lt;span class=&#34;c1&#34;&gt;//3. 怎么处理计算合并后的等差数列。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;LL&lt;/span&gt;  &lt;span class=&#34;n&#34;&gt;a1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;			 &lt;span class=&#34;c1&#34;&gt;//首项
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;n&#34;&gt;an&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxNum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//末项
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;n&#34;&gt;cntSeq&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;an&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//项数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;cm&#34;&gt;/* 以上跟O(n)方法的几乎一样。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		区别在于当这一列完全为等差数列时（不存在不为等差数列的部分）：
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		O(n)方法计算等差数列和，会包括最后一项；
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		O(sqrt(n))方法计算等差数列和，不会包括最后一项。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		*/&lt;/span&gt;
		&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;maxColumn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cntColumn&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//合并后出现次数（高斯求和）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;an&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cntSeq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;SGN&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//（高斯求和）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;LL&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;solve_block&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;LL&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;solve_Odev&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;solve_Odev&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ans&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;LL slove_original(int A, int B)
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;//最原始的做法，但考虑的会更复杂所以未完成为错误的
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;//错误点为为考虑开始部分为非等差数列
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;{
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	LL ans = 0;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	bool nega = 1;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	for (ALL(i, 1, B))
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	{
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		int seqBgeinIndex = A + max(i - A, 0), cnt = (B - seqBgeinIndex + 1) / i, seqEndIndex = seqBgeinIndex + cnt * i - 1;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		LL a1 = max(A / i, 1), an = a1 + cnt - 1;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		ans += i * ((a1 + an) * cnt / 2) * SGN;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		ans += (B - seqEndIndex) * (an + 1) * SGN;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		nega = !nega;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	}
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;	return ans;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;}
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;c1&#34;&gt;//printf(&amp;#34;%lld\n&amp;#34;, solve(B) - solve(A - 1));
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%lld&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;solve_block&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;B&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;solve_block&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;A&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>习题——数组……</title>
        <link>https://blog.supersassw.com/p/prac-array/</link>
        <pubDate>Sat, 09 Jan 2021 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/prac-array/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/prac-array/Yande-314214.png" alt="Featured image of post 习题——数组……" /&gt;&lt;h1 id=&#34;数组课后练习题&#34;&gt;数组课后练习题&lt;/h1&gt;
&lt;h2 id=&#34;判断题&#34;&gt;判断题&lt;/h2&gt;
&lt;h3 id=&#34;第一二十八题重要&#34;&gt;第一、二、十八题（重要）&lt;/h3&gt;




&lt;div class=&#34;sc-tabs&#34;&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-1x2x18&#34; id=&#34;tabs-1x2x18-0&#34; checked=&#34;checked&#34; /&gt;
	&lt;label for=&#34;tabs-1x2x18-0&#34;&gt;第一题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 在对全部数组元素赋初值时，不可以不指定一维数组的长度。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一位数组赋初值 &lt;em&gt;【书 P121】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;个人做错了这道题！&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 错误 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;也就是说可以不指定数组长度……&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;如果&lt;strong&gt;提供了全部初始值数组&lt;/strong&gt;，也可以不指定长度，编译提供会自动帮你指定。&lt;/p&gt;
&lt;p&gt;如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;//编译系统会帮你指定为a[6]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-1x2x18&#34; id=&#34;tabs-1x2x18-1&#34;  /&gt;
	&lt;label for=&#34;tabs-1x2x18-1&#34;&gt;第二题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 在对全部二维数组元素赋初值时，可以不指定二维数组的行数。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二位数组赋初值 &lt;em&gt;【书 P125】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;个人做错了这道题！&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote success &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 正确 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;同一维数组，
如果&lt;strong&gt;提供了全部初始值数组&lt;/strong&gt;，也可以不指定&lt;strong&gt;第一维长度&lt;/strong&gt;，编译提供会自动帮你计算出长度并指定。&lt;/p&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;但注意！&lt;br&gt;
不能省略&lt;strong&gt;第二维的长度&lt;/strong&gt;。&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;sc-columns&#34;&gt;&lt;div class=&#34;sc-columns--inner&#34;&gt;&lt;div class=&#34;snote success &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;正确例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;//编译系统会帮你指定为a[3][3]
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;div class=&#34;sc-columns--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;错误例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;//编译系统无法确定长度
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-1x2x18&#34; id=&#34;tabs-1x2x18-2&#34;  /&gt;
	&lt;label for=&#34;tabs-1x2x18-2&#34;&gt;练习——第十八题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 在给全部数组元素赋初值时，可以不指定二维数组中的常量表达式，例如&lt;code&gt;int a[][] = {1,2,3,4,5,6}&lt;/code&gt;。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote up red&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 作为之前二维数组的练习题。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;个人做错了这道题！&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 错误 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;h3 id=&#34;第十题&#34;&gt;第十题&lt;/h3&gt;
&lt;div class=&#34;snote question cyan&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 定义一个一维字符数组有$50$个元素，用该一维字符数组表示一个字符串数组最多允许有$50$个字符 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;字符数组的容量 &lt;em&gt;【书 P128】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 错误 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;字符数组&lt;code&gt;char []&lt;/code&gt;，容量比定义的长度要&lt;strong&gt;少一个&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;因为字符数组还要存一个末尾的&lt;code&gt;/0&lt;/code&gt;，&lt;br&gt;
所以题上定义了$50$个元素（&lt;code&gt;char a[50]&lt;/code&gt;），但实际上只能存$49$个字符。&lt;/p&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;同理：如果一个字符串长度是$n$，&lt;br&gt;
则它占用的空间是$n+1$个。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;例子见&lt;a href=&#34;https://blog.supersassw.com/p/cpp-summary/#%E4%BA%94%E5%85%B6%E4%BB%96%E6%9D%82%E7%B1%BB&#34;&gt;考前总结中最后的第7点&lt;/a&gt;。&lt;/em&gt;&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第十一十三题&#34;&gt;第十一、十三题&lt;/h3&gt;




&lt;div class=&#34;sc-tabs&#34;&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-11x13&#34; id=&#34;tabs-11x13-0&#34; checked=&#34;checked&#34; /&gt;
	&lt;label for=&#34;tabs-11x13-0&#34;&gt;第十一题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; C++中各种数据类型的变量在定义后会被自动初始化为0。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一维数组的初始值 &lt;em&gt;【书 P121】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 错误 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;一般方式定义的数据类型，如&lt;code&gt;int a&lt;/code&gt;，&lt;code&gt;double b[10]&lt;/code&gt;，都是不会被赋初值的。&lt;/p&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 这也就是为什么我们不赋初值就使用它会报错的原因，因为里面有以前的脏数据 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;但如果加上&lt;code&gt;static&lt;/code&gt;这个修饰词，定义为&lt;strong&gt;静态变量&lt;/strong&gt;，就会被赋初值为0了。&lt;/p&gt;
&lt;p&gt;如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;//a = 0
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;static&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//b1~b5 = 0
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-11x13&#34; id=&#34;tabs-11x13-1&#34;  /&gt;
	&lt;label for=&#34;tabs-11x13-1&#34;&gt;第十三题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 静态（&lt;code&gt;static&lt;/code&gt;）数组被定义时，数组的所有元素自动获取初始值0。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态一维数组 &lt;em&gt;【书 P121】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote success &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 正确 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;同十一题，静态数组，里面所有元素自动赋初值为0。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;h3 id=&#34;第十七题&#34;&gt;第十七题&lt;/h3&gt;
&lt;div class=&#34;snote question cyan&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 在C++中数组是具有一定顺序关系的若干相同类型变量的集合体。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数组的概念 &lt;em&gt;【书 P120】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote success &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 正确 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;纯概念题，记住！&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第二十题重要&#34;&gt;第二十题（重要）&lt;/h3&gt;


&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;程序段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;s1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;program&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;是合法的使用。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;个人做错了这道题！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为一道很容易错的操作题。&lt;/strong&gt;&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一维字符数组的定义 &lt;em&gt;【书 P127】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 错误 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;请仔细阅读书上P127中「1.一维字符数组的定义」！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;里面有很多没有讲到的点，但很容易错。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;h3 id=&#34;由第二十题衍生的练习题&#34;&gt;由第二十题衍生的练习题&lt;/h3&gt;
&lt;div class=&#34;snote up red&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 作为第二十题相关的练习题。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这些都是根据书上P127中「1.一维字符数组的定义」里面的内容所出题。&lt;/p&gt;
&lt;p&gt;故没有写分析，请仔细阅读书上事例来自行分析。&lt;/p&gt;




&lt;div class=&#34;sc-tabs&#34;&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-21x22x54&#34; id=&#34;tabs-21x22x54-0&#34; checked=&#34;checked&#34; /&gt;
	&lt;label for=&#34;tabs-21x22x54-0&#34;&gt;第二十一题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;程序段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;s1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;是合法的使用。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;个人做错了这道题！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;与二十二题很容易混淆！&lt;/strong&gt;&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote success &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 正确 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-21x22x54&#34; id=&#34;tabs-21x22x54-1&#34;  /&gt;
	&lt;label for=&#34;tabs-21x22x54-1&#34;&gt;第二十二题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;程序段：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sa&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;是合法的使用。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;个人做错了这道题！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;与二十一题很容易混淆！&lt;/strong&gt;&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 错误 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;仔细看看与二十一题的区别在什么地方，&lt;br&gt;
很小的区别就造成了答案的不一样。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-21x22x54&#34; id=&#34;tabs-21x22x54-2&#34;  /&gt;
	&lt;label for=&#34;tabs-21x22x54-2&#34;&gt;第五十四题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;有如下的字符串数组定义语句：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;sc&#34;&gt;&amp;#39;p&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;o&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;g&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;m&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;\0&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;};&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;program&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下列说法正确的是（）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;、&lt;code&gt;str1&lt;/code&gt;中的数据&lt;strong&gt;可以&lt;/strong&gt;作为一个整体（字符串）参加运算。&lt;br&gt;
&lt;strong&gt;B&lt;/strong&gt;、&lt;code&gt;str2&lt;/code&gt;和&lt;code&gt;str3&lt;/code&gt;中的数据&lt;strong&gt;只能&lt;/strong&gt;作为一个整体（字符串）参加运算。&lt;br&gt;
&lt;strong&gt;C&lt;/strong&gt;、&lt;code&gt;str2&lt;/code&gt;和&lt;code&gt;str3&lt;/code&gt;中的数据&lt;strong&gt;既可以&lt;/strong&gt;以元素为单位参加运算，&lt;strong&gt;也可以&lt;/strong&gt;作为一个整体（字符串）参加运算。&lt;br&gt;
&lt;strong&gt;D&lt;/strong&gt;、&lt;code&gt;str1&lt;/code&gt;、&lt;code&gt;str2&lt;/code&gt;和&lt;code&gt;str3&lt;/code&gt;中的数据&lt;strong&gt;既可以&lt;/strong&gt;以元素为单位参加运算，&lt;strong&gt;也可以&lt;/strong&gt;作为一个整体（字符串）参加运算。&lt;/p&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;所谓作为一个整体，即是如以下操作：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;str1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;abcd&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;而以元素参加运算，即是如以下操作：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;str1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;str1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果只能以元素操作，则不能&lt;code&gt;cout &amp;lt;&amp;lt; str1&lt;/code&gt;这样作为整体操作。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;个人做错了这道题！&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二维数组的使用方法 &lt;em&gt;【书 P125】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote success &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;C&lt;/strong&gt;、&lt;code&gt;str2&lt;/code&gt;和&lt;code&gt;str3&lt;/code&gt;中的数据&lt;strong&gt;既可以&lt;/strong&gt;以元素为单位参加运算，&lt;strong&gt;也可以&lt;/strong&gt;作为一个整体（字符串）参加运算。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&#34;选择题&#34;&gt;选择题&lt;/h2&gt;
&lt;h3 id=&#34;第三十三十一题&#34;&gt;第三十、三十一题&lt;/h3&gt;




&lt;div class=&#34;sc-tabs&#34;&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-30x31&#34; id=&#34;tabs-30x31-0&#34; checked=&#34;checked&#34; /&gt;
	&lt;label for=&#34;tabs-30x31-0&#34;&gt;第三十题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;在下面的一维数组定义中，（）有语法错误。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; &lt;code&gt;int a[] = {1,2,3};&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; &lt;code&gt;int a[];&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; &lt;code&gt;int a[] = {0};&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;int a[5];&lt;/code&gt;&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一维数组的初始化 &lt;em&gt;【书 P121】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;个人做错了这道题！&lt;/p&gt;
&lt;p&gt;为一道很容易错的操作题。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;B.&lt;/strong&gt; &lt;code&gt;int a[];&lt;/code&gt; &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;、对于确定初始值的数组，可以不指定长度，是正确的。（见上面&lt;a href=&#34;#%E7%AC%AC%E4%B8%80%E4%BA%8C%E5%8D%81%E5%85%AB%E9%A2%98&#34;&gt;第一题&lt;/a&gt;）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B&lt;/strong&gt;、这种定义方式是不存在的，要么赋初值，要么指定长度。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C&lt;/strong&gt;、很容易错选的选项，这种方式其实就代表定义个长度为1的数组，然后&lt;code&gt;a[0]=0&lt;/code&gt;。是正确的。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;D&lt;/strong&gt;、基本的定义方式，是正确的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意还有一种定义类型&lt;code&gt;int a[...] = {0}&lt;/code&gt;，代表定义个&lt;code&gt;...&lt;/code&gt;长度的数组，其中&lt;strong&gt;全部赋初值为0&lt;/strong&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-30x31&#34; id=&#34;tabs-30x31-1&#34;  /&gt;
	&lt;label for=&#34;tabs-30x31-1&#34;&gt;第三十一题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;在下面的二维数组定义中，（）有语法错误。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; &lt;code&gt;int x[10][10];&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; &lt;code&gt;int x[][10] = {{1,3} ,5 ,7};&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; &lt;code&gt;int x[][];&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;int x[10][10] = {0};&lt;/code&gt;&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二维数组的初始化 &lt;em&gt;【书 P125】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;C.&lt;/strong&gt; &lt;code&gt;int x[][];&lt;/code&gt; &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;、基本的二维数组定义方式，没赋初值，是正确的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt;、这里有赋初值，所以可以不用指定行数，是正确的。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;最终数组状态为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;、错因跟上一样。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;D&lt;/strong&gt;、这里就是第三十题说得，定义一个确定长度的二维数组，然后全部赋初值为0，是正确的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&#34;第三十五题&#34;&gt;第三十五题&lt;/h3&gt;


&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;定义一个一维数组，正确的语句是（）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; &lt;code&gt;int a(10);&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; &lt;code&gt;int n = 10; int a[n]&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; &lt;code&gt;int n; cin&amp;gt;&amp;gt;n; int a[n]&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;const int n = 10; int a[n]&lt;/code&gt;&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一维数组的定义 &lt;em&gt;【书 P120】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote done &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;const int n = 10; int a[n]&lt;/code&gt; &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;首先&lt;strong&gt;A&lt;/strong&gt;选项，不知道他在干嘛，直接排除。&lt;/p&gt;
&lt;p&gt;对于&lt;strong&gt;B&lt;/strong&gt;、&lt;strong&gt;C&lt;/strong&gt;、&lt;strong&gt;D&lt;/strong&gt;选项，涉及到一维数组的定义这个知识点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt;和&lt;strong&gt;C&lt;/strong&gt;中的&lt;code&gt;n&lt;/code&gt;均是变量，故错误。&lt;br&gt;
&lt;strong&gt;D&lt;/strong&gt;中的&lt;code&gt;n&lt;/code&gt;为常量（&lt;code&gt;const&lt;/code&gt;），故正确。&lt;/p&gt;
&lt;h3 id=&#34;书上原话&#34;&gt;书上原话&lt;/h3&gt;
&lt;div class=&#34;snote quote &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 在定义数组时，数组的大小必须是常量，而不能是变量或者变量表达式。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第三十六题&#34;&gt;第三十六题&lt;/h3&gt;


&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;以下哪种说法错误？（）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; 数组中的元素在某些方面彼此相关。&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; 数组中的所有元素具有相同的下标。&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; 数组中的所有元素具有相同的数据类型。&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; 数组中的所有元素具有相同的名字。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;B.&lt;/strong&gt; 数组中的所有元素具有相同的下标。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;纯概念题，记住！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B&lt;/strong&gt;是错的很容易看出来，&lt;br&gt;
主要是&lt;strong&gt;A&lt;/strong&gt;、&lt;strong&gt;C&lt;/strong&gt;、&lt;strong&gt;D&lt;/strong&gt;是对的要记住。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第五十二题&#34;&gt;第五十二题&lt;/h3&gt;


&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;若有定义语句&lt;code&gt;int a[3][6]&lt;/code&gt;，&lt;br&gt;
按在内存中的存放顺序，&lt;code&gt;a&lt;/code&gt;数组的第$10$个元素是（）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;我出成了填空题！……&lt;/em&gt;&lt;br&gt;
&lt;em&gt;请想出正确答案！……&lt;/em&gt;&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二维数组的使用方法 &lt;em&gt;【书 P125】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote success &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;code&gt;a[1][3]&lt;/code&gt; &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;二维数组的存放方式，也是按着顺序存放的。&lt;br&gt;
并且先是按行顺序存放，一行存完了再换下一列。&lt;/p&gt;
&lt;p&gt;也就是按照&lt;code&gt;a[0][0]&lt;/code&gt;,&lt;code&gt;a[0][1]&lt;/code&gt;,&lt;code&gt;a[0][2]&lt;/code&gt;&amp;hellip;&lt;code&gt;a[0][5]&lt;/code&gt;,&lt;code&gt;a[1][0]&lt;/code&gt;,&lt;code&gt;a[1][1]&lt;/code&gt;,&amp;hellip;,&lt;code&gt;a[2][5]&lt;/code&gt;的顺序存放，&lt;/p&gt;
&lt;p&gt;所以第$10$个，就是$10 = 2 * 3 + 4$，也就是第$2$行第$4$列，为&lt;code&gt;a[1][3]&lt;/code&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第五十九题&#34;&gt;第五十九题&lt;/h3&gt;


&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;以下关于二维数组的说法中，错误的是（）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; 若在定义二维数组的同时&lt;strong&gt;给其赋初值&lt;/strong&gt;，则二维数组的&lt;strong&gt;列数可以省略&lt;/strong&gt;。&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; 二维数组的每一行相当于一个一维数组，因此二维数组可以看成是&lt;strong&gt;由一维数组构成的数组&lt;/strong&gt;。&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; 给二位数组赋值时，可以将所有元素&lt;strong&gt;写在一个&lt;code&gt;{}&lt;/code&gt;内&lt;/strong&gt;。&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; 引用二维数组时，必须包含数组名、行下标和列下标。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二维数组的各种概念 &lt;em&gt;【书 P125】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;A.&lt;/strong&gt; 若在定义二维数组的同时&lt;strong&gt;给其赋初值&lt;/strong&gt;，则二维数组的&lt;strong&gt;列数可以省略&lt;/strong&gt;。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;纯概念题，记住！&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;h2 id=&#34;未写入的题&#34;&gt;未写入的题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;第十二题——数组&lt;code&gt;[]&lt;/code&gt;里能放的东西，只有常量和常量表达式&lt;/li&gt;
&lt;li&gt;第十四题——数组不是C++基本数据类型&lt;/li&gt;
&lt;li&gt;第十六题——数组再内存中是连续存在的（包括二维数组）&lt;/li&gt;
&lt;li&gt;第十九题 &lt;strong&gt;（个人做错）&lt;/strong&gt; ——字符串处理函数（&lt;code&gt;strcpy&lt;/code&gt;、&lt;code&gt;strcmp&lt;/code&gt;等）的头文件（&lt;code&gt;&amp;lt;string.h&lt;/code&gt;或&lt;code&gt;cstring&lt;/code&gt;或&lt;code&gt;&amp;lt;iostream&amp;gt;&lt;/code&gt;），是不含&lt;code&gt;string&lt;/code&gt;类的（头文件为&lt;code&gt;&amp;lt;string&amp;gt;&lt;/code&gt;）。&lt;/li&gt;
&lt;li&gt;第三十四题：
&lt;blockquote&gt;
&lt;p&gt;字符数组（&lt;code&gt;char []&lt;/code&gt;）只能用字符串函数来处理（&lt;code&gt;strcpy&lt;/code&gt;、&lt;code&gt;strcmp&lt;/code&gt;）&lt;br&gt;
字符串（&lt;code&gt;string&lt;/code&gt;）只能用运算符号（&lt;code&gt;+&lt;/code&gt;、&lt;code&gt;==&lt;/code&gt;）来处理。&lt;br&gt;
两者有各自对应的运算方式。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>习题——指针……</title>
        <link>https://blog.supersassw.com/p/prac-point/</link>
        <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/prac-point/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/prac-point/Yande-308381.png" alt="Featured image of post 习题——指针……" /&gt;&lt;h1 id=&#34;指针课后习题&#34;&gt;指针课后习题&lt;/h1&gt;
&lt;h2 id=&#34;判断题&#34;&gt;判断题&lt;/h2&gt;
&lt;h3 id=&#34;第一题&#34;&gt;第一题&lt;/h3&gt;
&lt;div class=&#34;snote question cyan&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 从内存单元中存取数据的方法有&lt;strong&gt;直接访问方式&lt;/strong&gt;和&lt;strong&gt;间接访问方式&lt;/strong&gt;。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;内存单元的数据存取方式 &lt;em&gt;【书 P186】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote success &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 正确 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;直接访问方式：通过&lt;strong&gt;变量名&lt;/strong&gt;存取变量内容。
&lt;blockquote&gt;
&lt;p&gt;如&lt;code&gt;a = 2&lt;/code&gt;、&lt;code&gt;cout &amp;lt;&amp;lt; a&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;间接访问方式：通过 &lt;strong&gt;地址（即指针）&lt;/strong&gt; 操作。
&lt;blockquote&gt;
&lt;p&gt;如&lt;code&gt;*a = 5&lt;/code&gt;、&lt;code&gt;cout &amp;lt;&amp;lt; *a&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第二题&#34;&gt;第二题&lt;/h3&gt;
&lt;div class=&#34;snote question cyan&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 能够直接赋值给指针变量的&lt;strong&gt;整数&lt;/strong&gt;是$0$和$1$。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指针赋值 &lt;em&gt;【书 P187】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 错误 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;整数中，&lt;strong&gt;只有&lt;/strong&gt;$0$才可以赋值指针，代表空地址（&lt;code&gt;NULL&lt;/code&gt;）。&lt;/p&gt;
&lt;h3 id=&#34;书上原话&#34;&gt;书上原话&lt;/h3&gt;
&lt;div class=&#34;snote quote &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;“地址”，可以是变量的地址、数组名、函数名等，也可以是数值$0$（或&lt;code&gt;NULL&lt;/code&gt;）。&lt;br&gt;
没有任何对象会被分配到地址&lt;code&gt;0&lt;/code&gt;（或&lt;code&gt;NULL&lt;/code&gt;），因此数值$0$（或&lt;code&gt;NULL&lt;/code&gt;）是可以直接赋给指针变量的唯一整数。&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第四题&#34;&gt;第四题&lt;/h3&gt;
&lt;div class=&#34;snote question cyan&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; “变量的指针”含义是&lt;strong&gt;指该变量的地址&lt;/strong&gt;。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;个人做错了这道题！&lt;/p&gt;
&lt;p&gt;为一道很新颖的概念题。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote success &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 正确 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;纯概念题，记住！&lt;/strong&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第九题&#34;&gt;第九题&lt;/h3&gt;


&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;在操作一个一维数组时，可能会用到两个指针变量指向该数组，&lt;br&gt;
这两个指针变量之间可以&lt;strong&gt;进行关系运算&lt;/strong&gt;，其关系运算的&lt;strong&gt;结果表明&lt;/strong&gt;了这两个指针变量所指向的数组元素的&lt;strong&gt;先后关系&lt;/strong&gt;。&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;个人做错了这道题！&lt;/p&gt;
&lt;p&gt;为一道很新颖的概念题。&lt;br&gt;
【个人甚至都不知道这种方法……&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指向一维数组的指针的关系运算 &lt;em&gt;【书 P190】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote success &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 正确 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;当有两个指针指向同一个数组时，&lt;br&gt;
&lt;strong&gt;可以对这两个指针进行比较&lt;/strong&gt;（&lt;code&gt;&amp;lt;&lt;/code&gt;、&lt;code&gt;&amp;gt;&lt;/code&gt;），以反应这两个指针的位置关系。&lt;/p&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;例子&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;p&gt;假设：&lt;/p&gt;
&lt;p&gt;存在数组&lt;code&gt;int a[10]&lt;/code&gt;，&lt;br&gt;
存在两个指针&lt;code&gt;int *p1,*p2&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;这两个指针均指向数组&lt;code&gt;a&lt;/code&gt;中某个位置（如&lt;code&gt;p1=&amp;amp;a[4]&lt;/code&gt;，&lt;code&gt;p2=&amp;amp;a[8]&lt;/code&gt;）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;若&lt;code&gt;p1 &amp;lt; p2&lt;/code&gt;，则代表&lt;code&gt;p1&lt;/code&gt;所指向的数组元素，在&lt;code&gt;p2&lt;/code&gt;所指向的数组元素前面。&lt;/li&gt;
&lt;li&gt;若&lt;code&gt;p1 = p2&lt;/code&gt;，则代表&lt;code&gt;p1&lt;/code&gt;、&lt;code&gt;p2&lt;/code&gt;指向数组中同一个元素。&lt;/li&gt;
&lt;li&gt;若&lt;code&gt;p1 &amp;gt; p2&lt;/code&gt;，则代表&lt;code&gt;p1&lt;/code&gt;所指向的数组元素，在&lt;code&gt;p2&lt;/code&gt;所指向的数组元素后面。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;具体可以看书上，有图示来解释。&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第十题&#34;&gt;第十题&lt;/h3&gt;


&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;对于已经定义好的相同类型的两个指针变量，可以进行&lt;strong&gt;加法运算、减法运算和赋值运算&lt;/strong&gt;。&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;个人做错了这道题！&lt;/p&gt;
&lt;p&gt;为一道很新颖的概念题。&lt;br&gt;
【个人甚至都不知道这种方法……&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;指针间的运算 &lt;em&gt;【书上没找到对应知识点】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 错误 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;指针间存在&lt;strong&gt;三种运算&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;假设两指针&lt;code&gt;int *a,*b&lt;/code&gt;。&lt;/em&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;赋值运算（&lt;code&gt;a = b&lt;/code&gt;）&lt;br&gt;
代表最基本的赋值。&lt;/li&gt;
&lt;li&gt;关系运算（&lt;code&gt;a &amp;lt; b&lt;/code&gt;）&lt;br&gt;
代表&lt;code&gt;a&lt;/code&gt;和&lt;code&gt;b&lt;/code&gt;位置关系。【一般用于数组中，代表谁指向前面谁指向后面】&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;减法运算&lt;/strong&gt;（&lt;code&gt;a - b&lt;/code&gt;）
代表&lt;code&gt;a&lt;/code&gt;到&lt;code&gt;b&lt;/code&gt;之间的距离。【一般用于数组中，如&lt;code&gt;a = &amp;amp;arr[5]&lt;/code&gt;，&lt;code&gt;b =&amp;amp; arr[7]&lt;/code&gt;，则&lt;code&gt;a-b&lt;/code&gt;为$2$】&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;上述题错在：&lt;strong&gt;没有加法运算&lt;/strong&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第十九题&#34;&gt;第十九题&lt;/h3&gt;


&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;使用动态储存分配时，用运算符&lt;code&gt;new&lt;/code&gt;获取的内存空间，不必须用&lt;code&gt;delete&lt;/code&gt;进行释放。&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;个人做错了这道题！&lt;/p&gt;
&lt;p&gt;为一道很新颖的概念题。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;动态存储分配 &lt;em&gt;【书 P201】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 错误 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;纯概念题，记住！&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;书上原话&#34;&gt;书上原话&lt;/h3&gt;
&lt;div class=&#34;snote quote &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;用&lt;code&gt;new&lt;/code&gt;获取的内存空间，&lt;strong&gt;必须&lt;/strong&gt;用&lt;code&gt;delete&lt;/code&gt;运算进行&lt;strong&gt;释放&lt;/strong&gt;，并且对同一个内存空间&lt;strong&gt;只能执行一次&lt;/strong&gt;&lt;code&gt;delete&lt;/code&gt;。&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;【虽然个人感觉确实不用的，因为程序结束会自动帮你释放xd……&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 注意只能delete一次 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第二十二题&#34;&gt;第二十二题&lt;/h3&gt;


&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;设&lt;code&gt;int a[3][4]={1,2,3,4,5,6,7,8,9,10,11,12}, (*p)[5];&lt;/code&gt;，&lt;br&gt;
则使用&lt;code&gt;p = a&lt;/code&gt;语句是不合法的。&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;个人做错了这道题！&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;知识点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数组指针变量 &lt;em&gt;【书 P196】&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 错误 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 个人暂时也不知道原因，正在询问老师【…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;感觉是题目错了……&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h2 id=&#34;选择题&#34;&gt;选择题&lt;/h2&gt;
&lt;h3 id=&#34;第三十三三十四三十七三十八题&#34;&gt;第三十三、三十四、三十七、三十八题&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;因为这几道题考点相同，故放在一起形成对照。【区别仅在&lt;code&gt;++&lt;/code&gt;的位置】&lt;/em&gt;&lt;/p&gt;




&lt;div class=&#34;sc-tabs&#34;&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-34x35x37x38&#34; id=&#34;tabs-34x35x37x38-0&#34; checked=&#34;checked&#34; /&gt;
	&lt;label for=&#34;tabs-34x35x37x38-0&#34;&gt;第三十三题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;设有如下程序段，输出的值为（）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; $8$&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; $9$&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; $8$的地址&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; $9$的地址&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote done &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;A.&lt;/strong&gt; 8 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;这里面先是运算&lt;code&gt;*p&lt;/code&gt;，得到值$8$，&lt;br&gt;
然后就变成了&lt;code&gt;cout &amp;lt;&amp;lt; 8++ &amp;lt;&amp;lt; endl;&lt;/code&gt;，这个时候就是先返回结果再运算。&lt;/p&gt;
&lt;p&gt;也就是先输出$8$，然后再&lt;code&gt;*p = *p + 1&lt;/code&gt;变成$9$。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-34x35x37x38&#34; id=&#34;tabs-34x35x37x38-1&#34;  /&gt;
	&lt;label for=&#34;tabs-34x35x37x38-1&#34;&gt;第三十四题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;设有如下程序段，输出的值为（）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; $8$&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; $9$&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; $8$的地址&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; $9$的地址&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote done &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;B.&lt;/strong&gt; 9 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;注意这里面还是先运算&lt;code&gt;*p&lt;/code&gt;，得到值$8$，&lt;br&gt;
然后就变成了&lt;code&gt;cout &amp;lt;&amp;lt; ++8 &amp;lt;&amp;lt; endl;&lt;/code&gt;，这个时候就变成了先运算再返回结果。&lt;/p&gt;
&lt;p&gt;也就是先&lt;code&gt;*p = *p + 1&lt;/code&gt;变成$9$，然后再输出$9$。&lt;/p&gt;
&lt;p&gt;总之前两道题，都是&lt;strong&gt;先运算&lt;code&gt;*p&lt;/code&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-34x35x37x38&#34; id=&#34;tabs-34x35x37x38-2&#34;  /&gt;
	&lt;label for=&#34;tabs-34x35x37x38-2&#34;&gt;第三十七题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;设有定义语句：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;则数值不为$3$的表达式为（）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; &lt;code&gt;a[3]&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; &lt;code&gt;p[3]&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; &lt;code&gt;p += 2, *(p++)&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;p += 2, *(++p)&lt;/code&gt;&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;个人做错了这道题！&lt;/p&gt;
&lt;p&gt;为一道很容易错的操作题。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;p += 2, *(++p)&lt;/code&gt; &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;首先&lt;strong&gt;A&lt;/strong&gt;、&lt;strong&gt;B&lt;/strong&gt;选项，直接能看出&lt;code&gt;a[3]&lt;/code&gt;和&lt;code&gt;p[3]&lt;/code&gt;均为数组第四个元素，即为$3$。&lt;br&gt;
所以讨论&lt;strong&gt;C&lt;/strong&gt;、&lt;strong&gt;D&lt;/strong&gt;选项。&lt;/p&gt;
&lt;p&gt;注意这里的指针，变成了&lt;strong&gt;指向数组的指针&lt;/strong&gt;。&lt;br&gt;
所以是可以进行加法操作的，代表指向位置的移动。&lt;/p&gt;
&lt;p&gt;刚开始均有一个&lt;code&gt;p += 2&lt;/code&gt;，也就是指向了第三项&lt;code&gt;a[2]&lt;/code&gt;为$2$。&lt;br&gt;
然后这里打了括号，所以肯定先是运算括号里的东西。&lt;/p&gt;
&lt;p&gt;那么&lt;code&gt;p++&lt;/code&gt;和&lt;code&gt;++p&lt;/code&gt;的区别，也就在于是先返回值还是先加一。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于&lt;code&gt;++p&lt;/code&gt;，先运算，也就指向了&lt;code&gt;a[3]&lt;/code&gt;，再返回值。那么还是$3$。&lt;/li&gt;
&lt;li&gt;对于&lt;code&gt;p++&lt;/code&gt;，先返回值，也就是&lt;code&gt;a[2]&lt;/code&gt;，那么&lt;code&gt;a[2]&lt;/code&gt;的值就为$2$了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;故选择&lt;strong&gt;C&lt;/strong&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-34x35x37x38&#34; id=&#34;tabs-34x35x37x38-3&#34;  /&gt;
	&lt;label for=&#34;tabs-34x35x37x38-3&#34;&gt;练习——第三十八题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;设&lt;code&gt;int x[] = {1,2,3,4,5,6}, *p = x;&lt;/code&gt;&lt;br&gt;
则数值为$3$的表达式是（）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; &lt;code&gt;p += 2, *++p&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; &lt;code&gt;p += 2, *p++&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; &lt;code&gt;p += 3, *p&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;p += 2, ++*p&lt;/code&gt;&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote up red&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 作为之前三道题的汇总练习题。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote done &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;B.&lt;/strong&gt; &lt;code&gt;p += 2, *p++&lt;/code&gt; &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;没打括号的时候，&lt;code&gt;*p&lt;/code&gt;最先运算。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;中，&lt;code&gt;*&lt;/code&gt;与&lt;code&gt;p&lt;/code&gt;被&lt;code&gt;++&lt;/code&gt;隔开了，所以只能先运算&lt;code&gt;++p&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 如果换成&lt;code&gt;p += 2, *(p++)&lt;/code&gt;，也是正确答案。&lt;br&gt;不过其运算过程与&lt;strong&gt;B&lt;/strong&gt;完全不一样，运算后的结果更不一样！ &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;h3 id=&#34;第三十九四十四十九五十题&#34;&gt;第三十九、四十、四十九、五十题&lt;/h3&gt;
&lt;p&gt;&lt;em&gt;因为这几道题考点相同，故放在一起形成对照。&lt;/em&gt;&lt;/p&gt;




&lt;div class=&#34;sc-tabs&#34;&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-39x40x49x50&#34; id=&#34;tabs-39x40x49x50-0&#34; checked=&#34;checked&#34; /&gt;
	&lt;label for=&#34;tabs-39x40x49x50-0&#34;&gt;第三十九题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;设有定义语句：&lt;code&gt;int a[5], *p = a;&lt;/code&gt;，&lt;br&gt;
则下列描述错误的是（）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; 表达式&lt;code&gt;p = p + 1&lt;/code&gt;是合法的&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; 表达式&lt;code&gt;a = a + 1&lt;/code&gt;是合法的&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; 表达式&lt;code&gt;p - a&lt;/code&gt;是合法的&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; 表达式&lt;code&gt;a + 1&lt;/code&gt;是合法的&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;B.&lt;/strong&gt; 表达式&lt;code&gt;a = a + 1&lt;/code&gt;是合法的 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;需要注意到：数组名其实也是一个指针，代表这个数组的起始位置，相当于&lt;code&gt;&amp;amp;a[0]&lt;/code&gt;。&lt;br&gt;
但其是常量指针，故不可以执行赋值语句。&lt;/p&gt;
&lt;p&gt;也就是&lt;code&gt;a + 1&lt;/code&gt;是对的，代表&lt;code&gt;&amp;amp;a[0] + 1&lt;/code&gt;，&lt;br&gt;
&lt;code&gt;a = a + 1&lt;/code&gt;是错的，没法把&lt;code&gt;&amp;amp;a[0] + 1&lt;/code&gt;赋值给&lt;code&gt;&amp;amp;a[0]&lt;/code&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-39x40x49x50&#34; id=&#34;tabs-39x40x49x50-1&#34;  /&gt;
	&lt;label for=&#34;tabs-39x40x49x50-1&#34;&gt;第四十题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;有下面语句&lt;code&gt;int a[10] = {10,9,8,7,6,5,4,3,2,1}, *p = a&lt;/code&gt;，&lt;br&gt;
则数值为$2$的表达式是（）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; &lt;code&gt;a[9]&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; &lt;code&gt;*p[8]&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; &lt;code&gt;*(a+8)&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;p+8&lt;/code&gt;&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;个人做错了这道题！&lt;/p&gt;
&lt;p&gt;【虽然是我没认真看题错的_(:з」∠)_……&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote done &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;C.&lt;/strong&gt; &lt;code&gt;*(a+8)&lt;/code&gt; &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;A&lt;/strong&gt;、&lt;code&gt;a[9]&lt;/code&gt;，代表的是数组第十个元素，也就是$1$。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;B&lt;/strong&gt;、&lt;code&gt;p[8]&lt;/code&gt;的时候，已经代表的是第九个元素的&lt;strong&gt;值&lt;/strong&gt;了，所以不能再加&lt;code&gt;*&lt;/code&gt;。&lt;br&gt;
也就是说如果选项是&lt;code&gt;p[8]&lt;/code&gt;就是对的，&lt;code&gt;*p[8]&lt;/code&gt;存在语法错误。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;C&lt;/strong&gt;、&lt;code&gt;*(a+8)&lt;/code&gt;，也就相当于&lt;code&gt;a[8]&lt;/code&gt;，故为$2$，正确。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;D&lt;/strong&gt;、&lt;code&gt;p+8&lt;/code&gt;，代表的是第九个元素的&lt;strong&gt;地址&lt;/strong&gt;，不是里面的值。&lt;br&gt;
也就是说如果选项是&lt;code&gt;*(p+8)&lt;/code&gt;就是对的。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-39x40x49x50&#34; id=&#34;tabs-39x40x49x50-2&#34;  /&gt;
	&lt;label for=&#34;tabs-39x40x49x50-2&#34;&gt;第四十九题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;若有定义&lt;code&gt;int a[10], *p = a;&lt;/code&gt;，&lt;br&gt;
对数组元素错误的使用的语句是（）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; &lt;code&gt;*(a+1)&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; &lt;code&gt;*(p++)&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; &lt;code&gt;p[1]&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;*(a++)&lt;/code&gt;&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;*(a++)&lt;/code&gt; &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;跟前两道题一样，关键是多了&lt;code&gt;++&lt;/code&gt;这个自增运算符。&lt;/p&gt;
&lt;p&gt;对于&lt;strong&gt;B&lt;/strong&gt;，&lt;code&gt;p&lt;/code&gt;是个&lt;strong&gt;指针变量&lt;/strong&gt;，是可以执行自增（或说赋值）的语句的。
而对于&lt;strong&gt;D&lt;/strong&gt;，&lt;code&gt;p&lt;/code&gt;是个&lt;strong&gt;指针常量&lt;/strong&gt;，是不能执行自增（或说赋值）的语句的。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-39x40x49x50&#34; id=&#34;tabs-39x40x49x50-3&#34;  /&gt;
	&lt;label for=&#34;tabs-39x40x49x50-3&#34;&gt;练习——第五十题&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;若有定义&lt;code&gt;int a[] = {0,1,2,3,4,5,6,7,8,9}, *p = a, i;&lt;/code&gt;，&lt;br&gt;
对数组元素正确的使用的语句是（）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; &lt;code&gt;a[p]&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; &lt;code&gt;p[a]&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; &lt;code&gt;p+12&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;a[p-a]&lt;/code&gt;&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote up red&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 作为之前三道题的汇总练习题。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote done &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;a[p-a]&lt;/code&gt; &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;注意&lt;code&gt;[]&lt;/code&gt;里面，只能为&lt;strong&gt;具体的数值&lt;/strong&gt;&lt;br&gt;
也就是说&lt;strong&gt;A&lt;/strong&gt;、&lt;code&gt;a[p]&lt;/code&gt;和&lt;strong&gt;B&lt;/strong&gt;、&lt;code&gt;p[a]&lt;/code&gt;均错误，&lt;br&gt;
因为&lt;code&gt;[]&lt;/code&gt;里是地址，而不是数值。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;改为&lt;code&gt;a[*p]&lt;/code&gt;，则正确，代表&lt;code&gt;a[0]&lt;/code&gt;，&lt;br&gt;
&lt;strong&gt;B&lt;/strong&gt;改为&lt;code&gt;p[*a]&lt;/code&gt;，则正确，代表&lt;code&gt;p[0]&lt;/code&gt;（即&lt;code&gt;a[0]&lt;/code&gt;）。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;但如果数组元素换位&lt;code&gt;int a[]={-1,0,1,2,3,4,5,6,7,8}&lt;/code&gt;，&lt;br&gt;
那么即便改为&lt;code&gt;a[*p]&lt;/code&gt;也不正确，因为其代表&lt;code&gt;a[-1]&lt;/code&gt;，对数组元素使用错误。&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;C&lt;/strong&gt;是很明显的&lt;strong&gt;数组越界&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;D&lt;/strong&gt;中，前面的题（第十题）介绍过，指针间存在减法运算。&lt;br&gt;
那么这道题中&lt;code&gt;p-a&lt;/code&gt;的运算结果为$0$（因为指向同一位置&lt;code&gt;a[0]&lt;/code&gt;，之间不存在距离），&lt;br&gt;
然后&lt;code&gt;a[0]&lt;/code&gt;是正确使用。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;h3 id=&#34;第四十三题&#34;&gt;第四十三题&lt;/h3&gt;


&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;设&lt;code&gt;char str[] = &amp;quot;hello&amp;quot;, *p = str;&lt;/code&gt;，&lt;br&gt;
则&lt;code&gt;*(p+5)&lt;/code&gt;的值是（）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; 随机值&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; 字母&lt;code&gt;o&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; 字符串结束标志&lt;code&gt;\0&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; 字母&lt;code&gt;o&lt;/code&gt;内存的地址&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote done &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;C.&lt;/strong&gt; 字符串结束标志&lt;code&gt;\0&lt;/code&gt; &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;*(p+5)&lt;/code&gt;，也就是从字符串开头往后数$5$位。&lt;/p&gt;
&lt;p&gt;会发现，最后只能往后数$4$位到&lt;code&gt;o&lt;/code&gt;，&lt;br&gt;
别忘了在字符数组&lt;code&gt;char []&lt;/code&gt;中，最末尾还会有一个看不见的&lt;code&gt;\0&lt;/code&gt;这个东西，&lt;br&gt;
所以存在&lt;code&gt;*(p+5)&lt;/code&gt;，代表的就是&lt;code&gt;\0&lt;/code&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第四十六题&#34;&gt;第四十六题&lt;/h3&gt;


&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;设有定义语句&lt;code&gt;int *p[4];&lt;/code&gt;，&lt;br&gt;
则标识符&lt;code&gt;p&lt;/code&gt;是（）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; 一个指向整型变量的指针变量&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; 一个指向整型的指针数组名&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; 一个指针，它指向一个含有四个整型元素的一维数组&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; 一个非法的定义语句&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;个人做错了这道题！&lt;/p&gt;
&lt;p&gt;【虽然是我没认真看题错的_(:з」∠)_……&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote done &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;B.&lt;/strong&gt; 一个指向整型的指针数组名 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;就注意一下这种定义方式，&lt;br&gt;
其类型就是&lt;strong&gt;一个指向整型的指针数组名&lt;/strong&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第五十一题&#34;&gt;第五十一题&lt;/h3&gt;


&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;若有定义：&lt;code&gt;int a[] = {1,2,3,4,5,6,7,8,9,10}, *p = a;&lt;/code&gt;，&lt;br&gt;
则数值为$7$的表达式为（）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; &lt;code&gt;*(p+7)&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; &lt;code&gt;p[*(a+6)]&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; &lt;code&gt;p+6&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;a[*(p+5)]&lt;/code&gt;&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;个人做错了这道题！&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote done &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;a[*(p+5)]&lt;/code&gt; &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;p&gt;首先很容易判断出&lt;strong&gt;A&lt;/strong&gt;，其数值为$8$，&lt;br&gt;
&lt;strong&gt;C&lt;/strong&gt;，其没有加&lt;code&gt;*&lt;/code&gt;，故代表的是&lt;code&gt;a[6]&lt;/code&gt;的地址。只有加了&lt;code&gt;*&lt;/code&gt;，即&lt;code&gt;*(p+6)&lt;/code&gt;才数值为$7$。&lt;/p&gt;
&lt;p&gt;而&lt;strong&gt;B&lt;/strong&gt;、&lt;strong&gt;D&lt;/strong&gt;，关键要先把&lt;code&gt;[]&lt;/code&gt;内部的给运算出来，&lt;br&gt;
&lt;strong&gt;D&lt;/strong&gt;中，&lt;code&gt;*(p+5)&lt;/code&gt;的值为$6$,而&lt;code&gt;a[6]&lt;/code&gt;的值为$7$，&lt;br&gt;
所以&lt;strong&gt;D&lt;/strong&gt;的最终值为$7$，符合题意。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h3 id=&#34;第五十四题&#34;&gt;第五十四题&lt;/h3&gt;


&lt;div class=&#34;snote question cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;若有定义：&lt;code&gt;int a[3][4]&lt;/code&gt;，&lt;br&gt;
能正确表示数组&lt;code&gt;a&lt;/code&gt;中元素地址的是（）。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;A.&lt;/strong&gt; &lt;code&gt;*(a[1]+4)&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;B.&lt;/strong&gt; &lt;code&gt;*(*(a+3)+1)&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;C.&lt;/strong&gt; &lt;code&gt;*(a[1]+2)*&lt;/code&gt;&lt;br&gt;
&lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;*(*(a+1)+1)&lt;/code&gt;&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;


&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;个人做错了这道题！&lt;/p&gt;
&lt;p&gt;为一道很混淆的操作题。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;答案与分析&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote done &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; &lt;strong&gt;D.&lt;/strong&gt; &lt;code&gt;*(*(a+1)+1)&lt;/code&gt; &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;分析&#34;&gt;分析&lt;/h2&gt;
&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 个人暂时也不知道原因，正在询问老师【…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;觉得&lt;strong&gt;C&lt;/strong&gt;好像也是对的……&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h2 id=&#34;没写入的题&#34;&gt;没写入的题&lt;/h2&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 以下题均为比较新的概念题，但个人没有写入，还是推荐去看一下记一下。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;第六题——常量是否能赋给指针&lt;/li&gt;
&lt;li&gt;第七题——数组名代表&lt;strong&gt;数组首地址&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;第四十五题——&lt;code&gt;int *point = new int(4)&lt;/code&gt;，这段代码的执行顺序&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>心理学导论——名词解释……</title>
        <link>https://blog.supersassw.com/p/intro-psychology-ne/</link>
        <pubDate>Fri, 08 Jan 2021 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/intro-psychology-ne/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/intro-psychology-ne/67450790_p0.png" alt="Featured image of post 心理学导论——名词解释……" /&gt;&lt;p&gt;以下为个人对教材中每章课后练习所出现的名字解释题进行的总结。&lt;br&gt;
&lt;em&gt;教材为：心理学导论（第三版）——人民教育出版社 （黄希庭 郑涌 著）&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 由于老师跳过了第二章，并且教学进度被缩短的原因，对第二章以及第五章后部分名字解释未整理。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 带“心理学大辞典”的定义表示该定义是从「心理学大辞典」中查阅得来。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 斜体表示该名词未在课后练习中出现，但个人总结出来了，仅供参考。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;第一章-绪论&#34;&gt;第一章 绪论&lt;/h1&gt;
&lt;h2 id=&#34;第一节-心理学的性质&#34;&gt;第一节 心理学的性质&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;心理学：心理学是一门研究&lt;strong&gt;心理现象&lt;/strong&gt;的&lt;strong&gt;事实、机制、规律、和本性&lt;/strong&gt;的实证科学。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;一个体心理现象概览&#34;&gt;一、个体心理现象概览&lt;/h3&gt;
&lt;p&gt;从个体心理的&lt;strong&gt;动态—稳态维度&lt;/strong&gt;区分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;心理倾向：&lt;strong&gt;心理活动&lt;/strong&gt;在&lt;strong&gt;特定时间&lt;/strong&gt;里的&lt;strong&gt;指向状态&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;心理过程：&lt;strong&gt;心理活动&lt;/strong&gt;在&lt;strong&gt;一定时间&lt;/strong&gt;内&lt;strong&gt;发生、发展&lt;/strong&gt;的过程。
&lt;ul&gt;
&lt;li&gt;认&lt;strong&gt;知&lt;/strong&gt;过程：个体&lt;strong&gt;获取知识和运用知识&lt;/strong&gt;的心智活动。&lt;em&gt;（人&lt;strong&gt;以感知、记忆、思维等形式&lt;/strong&gt;反映&lt;strong&gt;客观事物的性质和联系&lt;/strong&gt;的过程——心理学大辞典）&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;情&lt;/strong&gt;绪过程：&lt;strong&gt;产生心理现象&lt;/strong&gt;的历程。&lt;em&gt;（人对&lt;strong&gt;客观事物的某种态度&lt;/strong&gt;的体验——心理学大辞典）&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;意&lt;/strong&gt;志过程：力图&lt;strong&gt;达到有目的、有计划地改造世界&lt;/strong&gt;的心理过程。&lt;em&gt;（人有意识地克服各种困难以&lt;strong&gt;达到一定目&lt;/strong&gt;的的过程——心理学大辞典）&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;心理特征：&lt;strong&gt;一个人心里活动&lt;/strong&gt;中经常表现出来的&lt;strong&gt;稳定特点&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;三心理学的科学性&#34;&gt;三、心理学的科学性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;可复制性&lt;/em&gt;：一项科学研究的结果是能够按照原创者所提供的研究方法&lt;strong&gt;精确加以重复验证&lt;/strong&gt;的。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;可证伪性&lt;/em&gt;：在表述一个科学理论时，必须遵循从该理论所推导出&lt;strong&gt;各种预测有可能被证伪&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;系统性&lt;/em&gt;：心理学的科学知识是通过&lt;strong&gt;系统的实证研究&lt;/strong&gt;而获得的。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第二节-心理学的方法&#34;&gt;第二节 心理学的方法&lt;/h2&gt;
&lt;h3 id=&#34;一心理学研究的基本原则&#34;&gt;一、心理学研究的基本原则&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;可公开检验原则&lt;/em&gt;：科学发展是&lt;strong&gt;可以由任何人重验&lt;/strong&gt;、批评、否定或继续发展的。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;主客观资料科学整合原则&lt;/em&gt;：对人的心理研究中必须考虑把&lt;strong&gt;所有收集到的客观资料与主观资料科学地整合起来&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;人文关怀原则&lt;/em&gt;：心理学研究者在科学研究中应&lt;strong&gt;遵守心理学家的职业道德&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;操作性定义：以&lt;strong&gt;可观察、可测量的操作&lt;/strong&gt;给一个概念下定义。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;二心理学研究的基本变量&#34;&gt;二、心理学研究的基本变量&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;刺激变量（S）：能够&lt;strong&gt;引起机体反应&lt;/strong&gt;的刺激特征。&lt;/li&gt;
&lt;li&gt;机体变量（O）：个体&lt;strong&gt;自身特征&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;反应变量（R）：刺激&lt;strong&gt;引起在行为上发生变化&lt;/strong&gt;的反应种类和特征。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;三心理学研究的基本方法&#34;&gt;三、心理学研究的基本方法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;实验法：在&lt;strong&gt;控制的条件下系统地操纵某种变量的变化&lt;/strong&gt;，来&lt;strong&gt;研究该变量的变化对其他变量产生的影响&lt;/strong&gt;。&lt;em&gt;（心理学大辞典 P1131）&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;自变量：研究者选定并&lt;strong&gt;在试验中操纵、掌握，以影响被试行为的因素&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;因变量：&lt;strong&gt;被试的反应&lt;/strong&gt;，即研究者想要预测的行为。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;控制变量&lt;/em&gt;：除了自变量会对因变量影响之外，所有其他因素都应保持恒定或加以控制。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;无关变量&lt;/em&gt;：与实验目的无关的变量。&lt;/li&gt;
&lt;li&gt;实验组：专门&lt;strong&gt;接受实验处理&lt;/strong&gt;的一组被试。&lt;em&gt;（心理学大辞典 P1135）&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;控制组&amp;lt;对照组&amp;gt;：&lt;strong&gt;不受实验处理&lt;/strong&gt;的被试组。&lt;em&gt;（心理学大辞典 P700）&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;准实验法：在实验研究的设计上或情景控制上&lt;strong&gt;不具备实验法的一个或两个基本条件&lt;/strong&gt;的研究方法。&lt;/li&gt;
&lt;li&gt;问卷法：用&lt;strong&gt;问卷提问题的方式&lt;/strong&gt;，要求被调查者就某个或某些问题问答自己的想法。
&lt;ul&gt;
&lt;li&gt;相关系数：用来&lt;strong&gt;度量&lt;/strong&gt;两个或几个&lt;strong&gt;变量之间相互联系的性质和程度&lt;/strong&gt;的指标。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;演绎法：&lt;strong&gt;从理论或假设出发得出结论来验证&lt;/strong&gt;其对心理现象或行为变化的&lt;strong&gt;预测和解释力&lt;/strong&gt;的论证方法。&lt;/li&gt;
&lt;li&gt;质性研究法：对&lt;strong&gt;特定的心理现象、行为、团体互动&lt;/strong&gt;进行深入系统的&lt;strong&gt;观察、资料收集、分析理解&lt;/strong&gt;，从而对所研究的心理现象或行为特征及其发展脉络&lt;strong&gt;提供具体、系统的描述&lt;/strong&gt;。
&lt;ul&gt;
&lt;li&gt;归纳法：&lt;strong&gt;由繁到简、由特殊情形推论出普遍规则&lt;/strong&gt;的过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第三节-心理学的历史&#34;&gt;第三节 心理学的历史&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;构造主义&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;机能主义&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;行为主义&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;格式塔心理学&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;精神分析&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;人本主义心理学&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第四节-当代心理学的特点&#34;&gt;第四节 当代心理学的特点&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;生物学取向&lt;/em&gt;：着重从生物、生理、遗传基因的角度研究心理与行为。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;行为取向&lt;/em&gt;：着重研究个体的行为是怎样受到环境和经验影响的。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;认知取向&lt;/em&gt;：主张用信息加工观点来研究人类心理过程和结构。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;社会文化取向&lt;/em&gt;：着重研究社会文化怎样影响个体的心理与行为。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;心理动力学取向&lt;/em&gt;：着重研究个体心理与行为的动力因素。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;第三章-心里的生物基础&#34;&gt;第三章 心里的生物基础&lt;/h1&gt;
&lt;h2 id=&#34;第一节-神经系统与神经元&#34;&gt;第一节 神经系统与神经元&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;神经系统：由巨量&lt;strong&gt;神经细胞形成的神经组织与结构&lt;/strong&gt;的总称。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;一中枢神经系统的结构和机能&#34;&gt;一、中枢神经系统的结构和机能&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;中枢神经系统：是人体神经系统的&lt;strong&gt;主要部分&lt;/strong&gt;，包括&lt;strong&gt;脑和脊髓&lt;/strong&gt;&lt;br&gt;
功能：&lt;strong&gt;传递、储存和加工信息，产生各种心理活动，支配与控制人的全部行为&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;二周围神经系统的结构和机能&#34;&gt;二、周围神经系统的结构和机能&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;周围神经系统：从&lt;strong&gt;中枢神经系统发出&lt;/strong&gt;，&lt;strong&gt;导向人体各部分&lt;/strong&gt;，可分为躯体神经系统和自主神经系统&lt;br&gt;
功能：与身体&lt;strong&gt;各部分的联络&lt;/strong&gt;工作，起&lt;strong&gt;传入和传出信息&lt;/strong&gt;的作用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;三神经元的结构和机能&#34;&gt;三、神经元的结构和机能&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;神经元：是&lt;strong&gt;神经系统结构和功能的基本单位&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;全或无定律：当刺激强度&lt;strong&gt;未达到&lt;/strong&gt;某一&lt;strong&gt;阈值&lt;/strong&gt;限时，&lt;strong&gt;神经冲动不会发生&lt;/strong&gt;；而当刺激强度&lt;strong&gt;达到该值&lt;/strong&gt;时，神经冲动&lt;strong&gt;发生并能瞬时达到最大强度&lt;/strong&gt;，此后刺激强度即使再继续加强或减弱，已诱发的冲动强度也不再发生变化。&lt;/li&gt;
&lt;li&gt;突触：相邻神经元&lt;strong&gt;其间的空隙&lt;/strong&gt;。（&lt;strong&gt;神经元之间或神经元与效应器细胞之间传递信息的结构&lt;/strong&gt;——心理学大辞典 P1264）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第三节-脑机制的研究方法&#34;&gt;第三节 脑机制的研究方法&lt;/h2&gt;
&lt;h3 id=&#34;三脑电图及事件相关电位&#34;&gt;三、脑电图及事件相关电位&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;脑电图：在头皮表面记录到的&lt;strong&gt;自发节律性电活动&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;事件相关电位：通过平均叠加技术从头颅表面&lt;strong&gt;记录大脑诱发电位&lt;/strong&gt;，来反映大脑高级心理活动过程中&lt;strong&gt;大脑的神经电生理改变&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;五脑成像技术&#34;&gt;五、脑成像技术&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;功能性磁共振成像：&lt;strong&gt;功能更强&lt;/strong&gt;的磁共振成像（磁共振成像：运用磁场原理来产生体内活动的图像），甚至可以使&lt;strong&gt;大脑的活动可视化&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;专栏3-2&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;裂脑：&lt;strong&gt;切断大脑两半球之间的连结&lt;/strong&gt;以研究人与动物的一种技术。（心理学大辞典 P758）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第四节-内分泌系统&#34;&gt;第四节 内分泌系统&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;内分泌系统：机体内&lt;strong&gt;对行为起重要调节作用&lt;/strong&gt;的一个系统，由全身不同部位的&lt;strong&gt;多种内分泌腺体和组织细胞&lt;/strong&gt;组成。&lt;/li&gt;
&lt;li&gt;激素：&lt;strong&gt;内分泌腺所分泌&lt;/strong&gt;的物质。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第五节-遗传对行为的影响&#34;&gt;第五节 遗传对行为的影响&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;遗传：亲子之间以及子代个体之间&lt;strong&gt;性状存在的相似性&lt;/strong&gt;，表明&lt;strong&gt;性状可以从亲代传递给子代&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;基因型：个体的&lt;strong&gt;整个遗传禀赋&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;表现型：在&lt;strong&gt;特定的环境中&lt;/strong&gt;具有&lt;strong&gt;一定基因型&lt;/strong&gt;的个体&lt;strong&gt;遗传得以实现的程度&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;选择性繁殖：对&lt;strong&gt;动物特性遗传&lt;/strong&gt;的一种研究方法。&lt;/li&gt;
&lt;li&gt;双生子研究：一种研究方法，用于探讨遗传和环境因素对个体心理和行为发展的影响或作用。（心理学大辞典 P1175）&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;第四章-心理的环境基础&#34;&gt;第四章 心理的环境基础&lt;/h1&gt;
&lt;h2 id=&#34;第一节-环境的内容&#34;&gt;第一节 环境的内容&lt;/h2&gt;
&lt;h3 id=&#34;一什么是环境&#34;&gt;一、什么是环境&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;环境：&lt;strong&gt;与有机体发生联系&lt;/strong&gt;的外部世界。&lt;/li&gt;
&lt;li&gt;自然环境：环绕&lt;strong&gt;人们周围的各种自然因素&lt;/strong&gt;的总和。&lt;/li&gt;
&lt;li&gt;社会环境：人类&lt;strong&gt;生存及活动范围内&lt;/strong&gt;的&lt;strong&gt;社会物质、精神条件&lt;/strong&gt;的总和。&lt;/li&gt;
&lt;li&gt;物理环境：&lt;strong&gt;除包括自然环境诸因素&lt;/strong&gt;外，还包括&lt;strong&gt;人为的物理环境&lt;/strong&gt;因素。&lt;/li&gt;
&lt;li&gt;心理环境：&lt;strong&gt;人与人，人与物相互作用&lt;/strong&gt;时所形成的环境。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;情景&lt;/em&gt;：指一定场合下能被个体感知到的那一部分环境。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;三心理学家关于环境的理论&#34;&gt;三、心理学家关于环境的理论&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;地理环境：显示的环境。&lt;/li&gt;
&lt;li&gt;行为环境：个人意想中的环境。&lt;/li&gt;
&lt;li&gt;生态系统理论：心理学发展环境理论，认为环境是由&lt;strong&gt;微系统、中系统、外系统、大系统&lt;/strong&gt;四个由近及远的子系统组成的一个有层次序列的系统。（心理学大辞典 P1112）&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第二节-自然环境&#34;&gt;第二节 自然环境&lt;/h2&gt;
&lt;h3 id=&#34;一空气质量&#34;&gt;一、空气质量&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;空气污染综合征：受到长期的空气污染导致的症状，出现头疼、疲劳、失眠、消沉等症状。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;二噪声&#34;&gt;二、噪声&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;噪声：一种非周期性的、无组织的、不定型的&lt;strong&gt;听觉刺激&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;三社会密度与拥挤&#34;&gt;三、社会密度与拥挤&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;社会密度：一个&lt;strong&gt;给定的空间&lt;/strong&gt;里所&lt;strong&gt;拥有的人数&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;拥挤：一种&lt;strong&gt;感到空间不够大&lt;/strong&gt;的主观感受。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第三节-社会环境&#34;&gt;第三节 社会环境&lt;/h2&gt;
&lt;h3 id=&#34;一文化传统&#34;&gt;一、文化传统&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;文化：有广义、狭义之分。
&lt;ul&gt;
&lt;li&gt;狭义的文化：&lt;strong&gt;观念形态的文化&lt;/strong&gt;，仅限于意识形态。&lt;/li&gt;
&lt;li&gt;广义的文化：&lt;strong&gt;人类社会的全部遗产&lt;/strong&gt;，囊括社会生活的全部领域。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;亚文化：在社会的某一群体中形成一种既包括&lt;strong&gt;民族的一些主文化特征&lt;/strong&gt;，也包括&lt;strong&gt;某些独特的文化特征&lt;/strong&gt;的生活方式的这种群体文化。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第四节-社会影响&#34;&gt;第四节 社会影响&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;社会影响：运用&lt;strong&gt;个人或团体的社会力量在特定的方向上改变他人的观念和行为&lt;/strong&gt;的过程。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;一从众与服从&#34;&gt;一、从众与服从&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;从众：&lt;strong&gt;个人的观念和行为&lt;/strong&gt;由于&lt;strong&gt;群体直接或隐含的引导或压力&lt;/strong&gt;而&lt;strong&gt;与多数人保持一致&lt;/strong&gt;的倾向。&lt;/li&gt;
&lt;li&gt;服从：个体在&lt;strong&gt;他人的直接命令下而做出某种行为&lt;/strong&gt;的倾向。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;专栏4-3&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;角色&amp;lt;社会角色&amp;gt;：期望与个人的、训练个人的并鼓励他在一定社会情况中去完成某种权利、义务和责任的任何行为模式。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;第五章-毕生心理发展&#34;&gt;第五章 毕生心理发展&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;毕生发展：人类个体&lt;strong&gt;从受精卵开始&lt;/strong&gt;，逐渐&lt;strong&gt;发育&lt;/strong&gt;、&lt;strong&gt;成熟&lt;/strong&gt;直至&lt;strong&gt;死亡&lt;/strong&gt;，整个&lt;strong&gt;生命全程&lt;/strong&gt;的与年龄有关的那些&lt;strong&gt;变化过程&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第一节-心理发展的基本观点&#34;&gt;第一节 心理发展的基本观点&lt;/h2&gt;
&lt;h3 id=&#34;一遗传与环境的交互作用&#34;&gt;一、遗传与环境的交互作用&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;反应的交互作用：&lt;strong&gt;面对环境刺激&lt;/strong&gt;，&lt;strong&gt;不同遗传基因&lt;/strong&gt;的个体会以&lt;strong&gt;不同的方式&lt;/strong&gt;来对其&lt;strong&gt;做出反应&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;唤起的交互作用：&lt;strong&gt;个体的行为特征&lt;/strong&gt;会招致&lt;strong&gt;人们对其的不同反应&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;超前的交互作用：个体主动&lt;strong&gt;选择和创造他们所喜欢的环境&lt;/strong&gt;，这些&lt;strong&gt;环境反过来又进一步作用于个体&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;二发展的连续性与变化性&#34;&gt;二、发展的连续性与变化性&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;发展的连续性&lt;/em&gt;：个体特征不因年龄增长而发生改变。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;转折点&lt;/em&gt;：个体在发展过程中在几种途径中做出选择，从而导致个体生活环境的根本性变化。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;三发展中的个别差异&#34;&gt;三、发展中的个别差异&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;年龄特征&lt;/em&gt;：人类生理心理发展在各年龄阶段中大多数个体所表现出来的共同特征。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;个别差异&lt;/em&gt;：受遗传基因与环境的不同影响，不同个体之间在身心特征上各不相同的现象。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;四心理发展的研究设计&#34;&gt;四、心理发展的研究设计&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;横断研究：在同一时间内或较短时间内对某一个年龄或某几个年龄层次的个体或个体群组的发展水平进行观测与研究，并加以比较的一种研究设计。&lt;/li&gt;
&lt;li&gt;纵向研究：对某一特定个体或某一组特定的个体随着其年龄的增长在其发展的不同阶段系统地进行反复观测，从而取得连续性的发展资料。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第二节-孕期与婴儿期&#34;&gt;第二节 孕期与婴儿期&lt;/h2&gt;
&lt;h3 id=&#34;二婴儿期的发展&#34;&gt;二、婴儿期的发展&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;依恋：婴儿&lt;strong&gt;依附于养育者&lt;/strong&gt;的一种&lt;strong&gt;社会情绪性联系&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;第三节-幼儿期与儿童期&#34;&gt;第三节 幼儿期与儿童期&lt;/h2&gt;
&lt;h3 id=&#34;一认知发展&#34;&gt;一、认知发展&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;图式&lt;/em&gt;：&lt;strong&gt;个体灌注经验的心理模具&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;同化：个体用&lt;strong&gt;现有的图式&lt;/strong&gt;去&lt;strong&gt;理解事物&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;顺应：使图式&lt;strong&gt;适应新经历的特殊性&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;感觉运动阶段：0~2岁，指婴儿只能&lt;strong&gt;通过“这里”与“现在”来理解&lt;/strong&gt;这个世界，只有那些&lt;strong&gt;能感觉和接触到的东西&lt;/strong&gt;才是真实的。&lt;/li&gt;
&lt;li&gt;前运算阶段：2~7岁，这一阶段儿童依靠的更多是&lt;strong&gt;感觉&lt;/strong&gt;而不是逻辑。同时还表现为，总是&lt;strong&gt;从自己的观点看世界&lt;/strong&gt;，不能从别人的观点直觉事务，称为自我中心主义。&lt;/li&gt;
&lt;li&gt;具体运算阶段：7~11岁，儿童能&lt;strong&gt;依据具体事例进行推理思考&lt;/strong&gt;，不会只依据表面现象，而是更有逻辑地进行思考，有了&lt;strong&gt;守恒&lt;/strong&gt;的观念。&lt;/li&gt;
&lt;li&gt;形式运算阶段：11岁以上，儿童能运用抽象的、符合形式&lt;strong&gt;逻辑的推理方式&lt;/strong&gt;去思考问题。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Table Of Content测试……</title>
        <link>https://blog.supersassw.com/p/test-toc/</link>
        <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/test-toc/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/test-toc/66488487_p0.png" alt="Featured image of post Table Of Content测试……" /&gt;&lt;h1 id=&#34;文章目录&#34;&gt;文章目录&lt;/h1&gt;
&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 发现锚点在个人简介(About)页面不生效，待修正…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;在左侧侧边栏增加了显示文章目录（Table Of Content）的功能……&lt;/p&gt;
&lt;h2 id=&#34;测试&#34;&gt;测试&lt;/h2&gt;
&lt;h3 id=&#34;这是h3&#34;&gt;这是h3……&lt;/h3&gt;
&lt;h3 id=&#34;这是另一个h3&#34;&gt;这是另一个h3……&lt;/h3&gt;
&lt;h4 id=&#34;h4以下默认是不会显示的qwqqq&#34;&gt;h4以下默认是不会显示的qwqqq……&lt;/h4&gt;
&lt;p&gt;很短的内容……&lt;/p&gt;
&lt;p&gt;没了！……&lt;/p&gt;
&lt;h3 id=&#34;另外的h31&#34;&gt;另外的h3【1】……&lt;/h3&gt;
&lt;h3 id=&#34;另外的h32&#34;&gt;另外的h3【2】……&lt;/h3&gt;
&lt;h3 id=&#34;另外的h33&#34;&gt;另外的h3【3】……&lt;/h3&gt;
&lt;h3 id=&#34;另外的h34&#34;&gt;另外的h3【4】……&lt;/h3&gt;
&lt;h3 id=&#34;另外的h35&#34;&gt;另外的h3【5】……&lt;/h3&gt;
&lt;p&gt;这里分隔一下……&lt;/p&gt;
&lt;p&gt;很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;br&gt;
很多换行……&lt;/p&gt;
&lt;h3 id=&#34;另外的h36&#34;&gt;另外的h3【6】……&lt;/h3&gt;
&lt;h3 id=&#34;另外的h37&#34;&gt;另外的h3【7】……&lt;/h3&gt;
&lt;h3 id=&#34;另外的h38&#34;&gt;另外的h3【8】……&lt;/h3&gt;
&lt;h3 id=&#34;另外的很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长h3&#34;&gt;另外的很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长很长h3【⑨】……&lt;/h3&gt;
&lt;p&gt;长内容！……&lt;br&gt;
长内容！……&lt;br&gt;
长内容！……&lt;br&gt;
长内容！……&lt;br&gt;
长内容！……&lt;br&gt;
长内容！……&lt;br&gt;
超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级超级长内容！……&lt;br&gt;
长内容！……&lt;br&gt;
长内容！……&lt;br&gt;
长内容！……&lt;br&gt;
长内容！……&lt;br&gt;
长内容！……&lt;br&gt;
长内容！……&lt;/p&gt;
&lt;h2 id=&#34;测试h2&#34;&gt;测试h2……&lt;/h2&gt;
&lt;hr&gt;
&lt;h2 id=&#34;参考文章或主题&#34;&gt;参考文章或主题&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/wangchucheng/hugo-eureka&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;hugo主题——Eureka&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;js借鉴于这个主题，然后个人加以修改实现的……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/amdd9582/article/details/87738821&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;js实现滚动条自动滚动（scrollTop）&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;主要是依此了解了scrollTop的用法……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/zhenfei-jiang/p/9115619.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;如何用js自己实现Animate运动函数&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;有关滚动动画的实现js来源处（极其感谢wuwuwu……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>移植Shortcode测试……</title>
        <link>https://blog.supersassw.com/p/test-shortcode-extend/</link>
        <pubDate>Thu, 07 Jan 2021 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/test-shortcode-extend/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/test-shortcode-extend/Yande-312231.png" alt="Featured image of post 移植Shortcode测试……" /&gt;&lt;h1 id=&#34;扩展shortcode&#34;&gt;扩展Shortcode&lt;/h1&gt;
&lt;div class=&#34;snote link green&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 以下Shortcode均来自Hugo的&lt;a href=&#34;https://github.com/alex-shpak/hugo-book&#34;&gt;Hugo Book&lt;/a&gt;主题…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;一columns&#34;&gt;一、columns&lt;/h2&gt;
&lt;p&gt;分栏显示内容……&lt;/p&gt;
&lt;h3 id=&#34;使用方法&#34;&gt;使用方法&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;columns&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;

&lt;span class=&#34;nf&#34;&gt;Content_1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;With&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Markdown&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;

&lt;span class=&#34;o&#34;&gt;&amp;lt;---&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;nx&#34;&gt;Content_2&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;columns&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;使用例&#34;&gt;使用例&lt;/h3&gt;
&lt;div class=&#34;sc-columns&#34;&gt;&lt;div class=&#34;sc-columns--inner&#34;&gt;&lt;h1 id=&#34;左侧栏&#34;&gt;左侧栏&lt;/h1&gt;
&lt;p&gt;OI的发生，到底需要如何做到，不OI的发生，又会如何产生。 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 塞涅卡在不经意间这样说过，真正的人生，只有在经过艰难卓绝的斗争之后才能实现。这启发了我， OI因何而发生?我们一般认为，抓住了问题的关键，其他一切则会迎刃而解。 既然如此， 了解清楚OI到底是一种怎么样的存在，是解决一切问题的关键。 既然如何， 现在，解决OI的问题，是非常非常重要的。 所以， 问题的关键究竟为何? 经过上述讨论就我个人来说，OI对我的意义，不能不说非常重大。 所谓OI，关键是OI需要如何写。 一般来讲，我们都必须务必慎重的考虑考虑。 OI的发生，到底需要如何做到，不OI的发生，又会如何产生。 既然如何， 那么， 既然如何， 我们不得不面对一个非常尴尬的事实，那就是， 歌德曾经说过，没有人事先了解自己到底有多大的力量，直到他试过以后才知道。我希望诸位也能好好地体会这句话。&lt;/div&gt;&lt;div class=&#34;sc-columns--inner&#34;&gt;&lt;h1 id=&#34;中间栏&#34;&gt;中间栏&lt;/h1&gt;
&lt;p&gt;俾斯麦曾经说过，对于不屈不挠的人来说，没有失败这回事。带着这句话，我们还要更加慎重的审视这个问题： 要想清楚，OI，到底是一种怎么样的存在。 每个人都不得不面对这些问题。 在面对这种问题时， 培根曾经说过，要知道对好事的称颂过于夸大，也会招来人们的反感轻蔑和嫉妒。我希望诸位也能好好地体会这句话。 生活中，若OI出现了，我们就不得不考虑它出现了的事实。 就我个人来说，OI对我的意义，不能不说非常重大。 既然如何， 塞涅卡在不经意间这样说过，生命如同寓言，其价值不在与长短，而在与内容。我希望诸位也能好好地体会这句话。&lt;/div&gt;&lt;div class=&#34;sc-columns--inner&#34;&gt;&lt;h1 id=&#34;右侧栏&#34;&gt;右侧栏&lt;/h1&gt;
&lt;p&gt;所谓OI，关键是OI需要如何写。 所谓OI，关键是OI需要如何写。 那么， 既然如何， OI，到底应该如何实现。 带着这些问题，我们来审视一下OI。 我们不得不面对一个非常尴尬的事实，那就是， 所谓OI，关键是OI需要如何写。&lt;/div&gt;&lt;div class=&#34;sc-columns--inner&#34;&gt;&lt;h1 id=&#34;偷偷摸摸栏&#34;&gt;偷偷摸摸栏？……&lt;/h1&gt;
&lt;p&gt;测试……&lt;/div&gt;&lt;/div&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 中间的文本尽量不要太长，不然会占用很大竖直空间…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;二details&#34;&gt;二、details&lt;/h2&gt;
&lt;p&gt;内容折叠栏……&lt;/p&gt;
&lt;p&gt;使用的为HTML的&lt;code&gt;details&lt;/code&gt;标签……&lt;/p&gt;
&lt;h3 id=&#34;使用方法-1&#34;&gt;使用方法&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;details&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;Title&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;content&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;details&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;open为可选项，加入open代表默认打开……&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;另一种方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;details&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Title&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;open&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;kc&#34;&gt;true&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;content&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;details&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;使用例-1&#34;&gt;使用例&lt;/h3&gt;
&lt;div class=&#34;sc-columns&#34;&gt;&lt;div class=&#34;sc-columns--inner&#34;&gt;&lt;h2 id=&#34;源码&#34;&gt;源码&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;details&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;折叠内容……&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;这里面是折叠内容&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;……&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;details&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;sc-columns--inner&#34;&gt;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;折叠内容……&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;这里面是折叠内容……&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&#34;嵌套测试&#34;&gt;嵌套测试&lt;/h3&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;不要点开看！……&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;h1 id=&#34;不要看&#34;&gt;不要看！……&lt;/h1&gt;
&lt;p&gt;都说了不要点开啦qwqqq快关上！！……&lt;br&gt;
都说了不要点开啦qwqqq快关上！！……&lt;br&gt;
都说了不要点开啦qwqqq快关上！！……&lt;br&gt;
都说了不要点开啦qwqqq快关上！！……&lt;br&gt;
都说了不要点开啦qwqqq快关上！！……&lt;/p&gt;
&lt;h2 id=&#34;真的不要看啦&#34;&gt;真的不要看啦【【……&lt;/h2&gt;
&lt;p&gt;再这么看人家超害羞的(*/ω＼*)……&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;诶诶还不关上嘛！……&lt;/p&gt;
&lt;p&gt;真拿你没办法，那就给你看看我多年的代码实力吧！【x……&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#inculde(iosteam)
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;qwq&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;mian&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;诶诶不喜欢嘛？……&lt;/p&gt;
&lt;p&gt;那那来看看&lt;strong&gt;世界第一可爱的童田明治&lt;/strong&gt;吧！……&lt;/p&gt;
&lt;details class=&#34;sc-details&#34; open&gt;
	&lt;summary&gt;&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;bilibili-player&#34;style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
	&lt;iframe loading=&#34;lazy&#34; src=&#34;https://player.bilibili.com/player.html?bvid=BV1S4411B7Rj&amp;high_quality=1&amp;page=1&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;Bilibili Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;がぶがぶ……&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;11歳の、5歳です！……&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 内嵌的时候请不要使用&lt;code&gt;&amp;gt; {{&amp;lt; details &amp;gt;}}&lt;/code&gt;（引用加上details），否则会造成错误与样式混乱，暂时还未修复…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 样式更改参考自&lt;a href=&#34;https://www.zhangxinxu.com/wordpress/2018/01/html5-details-summary-no-js-ux/&#34;&gt;借助HTML5 details,summary无JS实现各种交互效果&lt;/a&gt;…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;三tabs&#34;&gt;三、tabs&lt;/h2&gt;
&lt;p&gt;分标签显示……&lt;/p&gt;
&lt;h3 id=&#34;使用方法-2&#34;&gt;使用方法&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tabs&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;uniqueID&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tabs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tab&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Content_1&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tabs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tab&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tabs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tab&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Content_2&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tabs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tab&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;tabs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tab&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;Content_3&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tabs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tab&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;tabs&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;uniqueID&lt;/code&gt;为一个独一无二的ID……&lt;/p&gt;
&lt;h3 id=&#34;使用例-2&#34;&gt;使用例&lt;/h3&gt;
&lt;div class=&#34;sc-columns&#34;&gt;&lt;div class=&#34;sc-columns--inner&#34;&gt;&lt;h2 id=&#34;源码&#34;&gt;源码&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-tpl&#34; data-lang=&#34;tpl&#34;&gt;&lt;span class=&#34;cp&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;tabs&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;tabs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;tab&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;第一标签页&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;## 天才麻将少女
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;打麻将真开心啊……
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;tabs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;tab&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;tabs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;tab&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;第二标签页&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;## 兽娘动物园
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;是会每天没事干不务正业的Friends呢【指自己……
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;tabs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;tab&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;tabs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;tab&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;第三标签页&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;## 魔法少女小圆
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;身体好轻，怀着这么幸福的感觉战斗还是第一次，已经没什么好怕的了，因为我不再是孤单一人了！……
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;tabs&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;tab&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;na&#34;&gt;tabs&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;}}&lt;/span&gt;&lt;span class=&#34;x&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;sc-columns--inner&#34;&gt;&lt;h2 id=&#34;效果&#34;&gt;效果&lt;/h2&gt;
&lt;div class=&#34;sc-tabs&#34;&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-1&#34; id=&#34;tabs-1-0&#34; checked=&#34;checked&#34; /&gt;
	&lt;label for=&#34;tabs-1-0&#34;&gt;第一标签页&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;h2 id=&#34;天才麻将少女&#34;&gt;天才麻将少女&lt;/h2&gt;
&lt;p&gt;打麻将真开心啊……&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-1&#34; id=&#34;tabs-1-1&#34;  /&gt;
	&lt;label for=&#34;tabs-1-1&#34;&gt;第二标签页&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;h2 id=&#34;兽娘动物园&#34;&gt;兽娘动物园&lt;/h2&gt;
&lt;p&gt;是会每天没事干不务正业的Friends呢【指自己……&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-1&#34; id=&#34;tabs-1-2&#34;  /&gt;
	&lt;label for=&#34;tabs-1-2&#34;&gt;第三标签页&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;h2 id=&#34;魔法少女小圆&#34;&gt;魔法少女小圆&lt;/h2&gt;
&lt;p&gt;身体好轻，怀着这么幸福的感觉战斗还是第一次，已经没什么好怕的了，因为我不再是孤单一人了！……&lt;/div&gt;&lt;/div&gt;
&lt;/div&gt;&lt;/div&gt;
</description>
        </item>
        <item>
        <title>考前公式速记……</title>
        <link>https://blog.supersassw.com/p/am-formula/</link>
        <pubDate>Mon, 04 Jan 2021 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/am-formula/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/am-formula/76524292_p0.jpg" alt="Featured image of post 考前公式速记……" /&gt;&lt;h1 id=&#34;定积分&#34;&gt;定积分&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;$\int_0^{\frac{\pi}{2}} f(\sin x)\mathrm{d}x = \int_0^{\frac{\pi}{2}} f(\cos x) \mathrm{d}x$&lt;/li&gt;
&lt;li&gt;$\int_0^\pi xf(\sin x)\mathrm{d}x = \frac{\pi}{2}\int_0^\pi f(\sin x) \mathrm{d}x$
&lt;blockquote&gt;
&lt;p&gt;e.g.&lt;br&gt;
$\int_0^\pi \frac{x\sin x}{1+cos^2x} \mathrm{d}x = \frac{\pi}{2}\int_0^\pi \frac{\sin x}{2-sin^2x} \mathrm{d}x$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;Walls公式：&lt;br&gt;
$I_n=\int_0^\frac{\pi}{2}\sin^nx\mathrm{d}x\=\begin{cases}\frac{n-1}{n}\cdot\frac{n-3}{n-2}\cdot\ \cdots\ \cdot \frac{3}{4}\cdot\frac{1}{2}\cdot\frac{\pi}{2}\quad (\text{n is even}) \\frac{n-1}{n}\cdot\frac{n-3}{n-2}\cdot\ \cdots\ \cdot \frac{4}{5}\cdot\frac{2}{3}\quad (\text{n is odd, n&amp;gt;1})\end{cases}$
&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; LaTex显示好像有误，待修复 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>数组……</title>
        <link>https://blog.supersassw.com/p/cpp-array/</link>
        <pubDate>Sat, 26 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/cpp-array/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/cpp-array/72693520_p0.jpg" alt="Featured image of post 数组……" /&gt;&lt;h1 id=&#34;数组&#34;&gt;数组&lt;/h1&gt;
&lt;h2 id=&#34;一什么是数组&#34;&gt;一、什么是数组&lt;/h2&gt;
&lt;h3 id=&#34;1与数学的联系数列&#34;&gt;1、与数学的联系——数列&lt;/h3&gt;
&lt;p&gt;关于数组，你可以就把他当作数学上的“数列”，用来存一系列的数。&lt;/p&gt;


&lt;div class=&#34;snote quote &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;数学上的一个数列$a_i$：&lt;/p&gt;
&lt;p&gt;当$i=1$时，代表的是这个数列的第一个数$a_1$，当$i=3$时，代表的是这个数列的第三个数$a_3$……&lt;br&gt;
同时，这个数列可以叫数列$a_i$，也可以叫$b_i、{nico}_i$……&lt;br&gt;
可以用$i$来表示第几项（$a_i$），也可以用$j$来表示第几项（$a_j$）……&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;2与数学的不同&#34;&gt;2、与数学的不同&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;数学上的数列是从第一项开始的，也就是$a_1$代表的就是$a$这个数列的第一项。&lt;br&gt;
然而编程里的数组，却是从&lt;strong&gt;第零项&lt;/strong&gt;开始的，也就是&lt;code&gt;a[1]&lt;/code&gt;代表的是&lt;code&gt;a&lt;/code&gt;这个数组里第二项，&lt;strong&gt;&lt;code&gt;a[0]&lt;/code&gt;才是第一项&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;数学上的数列，我们不需要提前告诉这个数列中会有多少项。&lt;br&gt;
然而编程里的数组，我们需要&lt;strong&gt;提前告诉&lt;/strong&gt;他这个数组里会&lt;strong&gt;有多少项&lt;/strong&gt;，也就是&lt;code&gt;int a[100]&lt;/code&gt;的&lt;code&gt;100&lt;/code&gt;的意思，代表可能会存100项。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3编程中的数组&#34;&gt;3、编程中的数组&lt;/h3&gt;
&lt;p&gt;那么类比到我们编程里：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;这个$a_i$的$a$，就是程序里的这个数组的名字，专业名称叫“&lt;strong&gt;变量名&lt;/strong&gt;”。&lt;/li&gt;
&lt;li&gt;这个$a_i$的$i$，就是程序里的这个数组的第几项，专业名称叫“&lt;strong&gt;下标&lt;/strong&gt;”。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;比如&lt;code&gt;arr[5]&lt;/code&gt;代表的就是&lt;code&gt;arr&lt;/code&gt;这个数组里的&lt;strong&gt;第6项&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;二数组的声明&#34;&gt;二、数组的声明&lt;/h2&gt;
&lt;p&gt;申明部分，也就是定义。如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;int&lt;/code&gt;——代表的是这个数组的类型：即这个数组存的是一系列int类型的数。&lt;br&gt;
&lt;code&gt;arr&lt;/code&gt;——代表的是这个数组的变量名，之后用这个数组就是&lt;code&gt;arr[2]&lt;/code&gt;、&lt;code&gt;arr[i]&lt;/code&gt;之类的形式。&lt;br&gt;
&lt;code&gt;[100]&lt;/code&gt;——代表的是这个数组的大小，也就是可能会存多少项。&lt;/p&gt;
&lt;/blockquote&gt;


&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;对于数组大小的声明，&lt;strong&gt;必须为常量或者常量表达式&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;snote success &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;正确的例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//字面常量（常数）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//字面常量的表达式
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//符号常量
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//符号常量的表达式
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;错误的例子：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//len为变量，错误
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//len+5为变量相关的表达式，错误
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;三数组的运用&#34;&gt;三、数组的运用&lt;/h2&gt;
&lt;h3 id=&#34;1对一个数组某个具体元素的运用&#34;&gt;1、对一个数组某个具体元素的运用&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;最简单的运用，我们直接把一个常数&lt;code&gt;100&lt;/code&gt;存到&lt;code&gt;arr&lt;/code&gt;数组里的&lt;strong&gt;第三项&lt;/strong&gt;里：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;要把一个变量&lt;code&gt;val&lt;/code&gt;存到&lt;code&gt;arr&lt;/code&gt;数组里的&lt;strong&gt;第一项&lt;/strong&gt;里：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;要输出数组&lt;code&gt;arr&lt;/code&gt;中的&lt;strong&gt;第二项&lt;/strong&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2对一个数组多个元素的运用&#34;&gt;2、对一个数组多个元素的运用&lt;/h3&gt;
&lt;p&gt;很多时候我们不止运用其中的某一个具体的数。&lt;br&gt;
比如我们要向这个数组&lt;strong&gt;读入10个数&lt;/strong&gt;，然后&lt;strong&gt;输出这10个数&lt;/strong&gt;，这就涉及了多个元素的操作。&lt;/p&gt;
&lt;p&gt;我们再类比数列，假如我们要对数列$a_i$的第一项到第十项求和：&lt;br&gt;
用的是不是$\sum_{i=1}^{10}a_i$这个公式，&lt;br&gt;
用个$i$来代表第几项，然后$i=1\sim10$，把$a_i$累加起来。&lt;/p&gt;
&lt;p&gt;类比到编程，同样用个&lt;code&gt;i&lt;/code&gt;来代表第几项，然后&lt;code&gt;i=0~9&lt;/code&gt;，把&lt;code&gt;arr[i]&lt;/code&gt;累加起来存到&lt;code&gt;sum&lt;/code&gt;里。&lt;br&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 仍要注意到第一项是从0开始，所以是0~9！ &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;对数组前十项求和&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;其中这里的涉及到&lt;strong&gt;从头到尾&lt;/strong&gt;加起来的操作，&lt;br&gt;
我们把对一个数组&lt;strong&gt;从头到尾&lt;/strong&gt;进行某些操作叫做“&lt;strong&gt;遍历&lt;/strong&gt;”。&lt;br&gt;
以后会提到的概念注意一下。&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;那么类推一下，要向数组里读入$10$个数&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;读入十个数到数组前十项&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;然后再输出&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;输出数组中前十项&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;总代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;请输入十个数：&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;你刚才输入的十个数为：&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;arr[&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;] = &amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;总和为：&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;效果为：
&lt;figure style=&#34;flex-grow: 109; flex-basis: 263px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/cpp-array/1.png&#34; data-size=&#34;247x225&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/cpp-array/1.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/cpp-array/1_huf1159adaf2dbb221f29c607566aac3c5_5229_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/cpp-array/1_huf1159adaf2dbb221f29c607566aac3c5_5229_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;247&#34;
				height=&#34;225&#34;
				loading=&#34;lazy&#34;
				alt=&#34;上述代码效果&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;上述代码效果&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;如果为先输入一个数&lt;code&gt;n&lt;/code&gt;，然后读入&lt;code&gt;n&lt;/code&gt;个数，只需要改下循环条件即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;读入n个数到数组&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//注意读n个数是(i=0;i&amp;lt;=n-1)，就像之前读10个数是(i=0;i&amp;lt;=9)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//也可以写成 for (int i = 0; i &amp;lt; n; i++)，不过最好选择一种格式以后就这样写，不然可能会晕
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;其余输出什么的同理。&lt;/p&gt;
&lt;h3 id=&#34;3对多个数组的运用&#34;&gt;3、对多个数组的运用&lt;/h3&gt;
&lt;p&gt;很多时候我们可能要从&lt;code&gt;a&lt;/code&gt;数组拿出一些数放到&lt;code&gt;b&lt;/code&gt;数组里，这个时候下标可能就会很疑惑。&lt;/p&gt;
&lt;p&gt;比如我们可能会把&lt;code&gt;arr&lt;/code&gt;数组里十个数放到&lt;code&gt;b&lt;/code&gt;数组对应位置里。&lt;br&gt;
这个时候数学表示就是$b_i=arr_i(i=1\sim10)$&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;把&lt;code&gt;arr&lt;/code&gt;数组十个数放到&lt;code&gt;b&lt;/code&gt;数组里&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;但不一定每次都是刚好把&lt;code&gt;arr&lt;/code&gt;的第i项放到&lt;code&gt;b&lt;/code&gt;的第i项，也可能是比如：&lt;br&gt;
从&lt;code&gt;arr&lt;/code&gt;的第五项开始，取5项（即&lt;code&gt;a[4] ~ a[8]&lt;/code&gt;，放到&lt;code&gt;b&lt;/code&gt;的第十项后面（即(&lt;code&gt;b[9] ~ b[13]&lt;/code&gt;)。&lt;br&gt;
要记住数组的下标&lt;strong&gt;不只是用&lt;code&gt;i&lt;/code&gt;来表示&lt;/strong&gt;，也可以用其他变量来表示。&lt;/p&gt;
&lt;p&gt;因此我们可以定义两个变量&lt;code&gt;j&lt;/code&gt;和&lt;code&gt;k&lt;/code&gt;，来分别表示两个数组&lt;code&gt;arr&lt;/code&gt;和&lt;code&gt;b&lt;/code&gt;的下标。&lt;/p&gt;
&lt;p&gt;刚开始令&lt;code&gt;j = 4&lt;/code&gt;，&lt;code&gt;k = 9&lt;/code&gt;&lt;br&gt;
开始取第一项放进&lt;code&gt;b&lt;/code&gt;时，也就是&lt;code&gt;b[9] = arr[4]&lt;/code&gt;，这个时候就是&lt;code&gt;b[k] = arr[j]&lt;/code&gt;。&lt;br&gt;
然后取第二项放进&lt;code&gt;b&lt;/code&gt;时，也就是&lt;code&gt;b[10] = arr[5]&lt;/code&gt;，&lt;br&gt;
因此我们就可以在放完一项后，让&lt;code&gt;k = k + 1&lt;/code&gt;和&lt;code&gt;j = j + 1&lt;/code&gt;，&lt;br&gt;
这个时候的&lt;code&gt;b[k] = arr[j]&lt;/code&gt;，是不是就代表&lt;code&gt;b[10] = arr[5]&lt;/code&gt;了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;从&lt;code&gt;arr&lt;/code&gt;的第五项开始，取5项，放到&lt;code&gt;b&lt;/code&gt;的第十项后面。&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;k&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;				&lt;span class=&#34;c1&#34;&gt;//分别代表arr数组和b数组的下标
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;		&lt;span class=&#34;c1&#34;&gt;//做5次循环，代表取5项
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;k&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;这里是&lt;strong&gt;比较难但很重要的点&lt;/strong&gt;，如果分析也看不懂，可以手动模拟一下：&lt;br&gt;
自己按照程序一行一行执行，在本子上画两行表格，一行代表&lt;code&gt;arr&lt;/code&gt;数组，一行代表&lt;code&gt;b&lt;/code&gt;数组；&lt;code&gt;j=4&lt;/code&gt;时就用个箭头指向&lt;code&gt;arr[4]&lt;/code&gt;，j++则移动箭头指向&lt;code&gt;arr[5]&lt;/code&gt;……&lt;br&gt;
如果理解了，那数组差不多也都理解了。&lt;/p&gt;
&lt;h2 id=&#34;四例题讲解&#34;&gt;四、例题讲解&lt;/h2&gt;
&lt;p&gt;选择“实验8”的第1题。&lt;/p&gt;
&lt;h3 id=&#34;1题目要求&#34;&gt;1、题目要求&lt;/h3&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 133; flex-basis: 321px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/cpp-array/2.png&#34; data-size=&#34;619x462&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/cpp-array/2.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/cpp-array/2_hue42fa8fac7d53e6d034df985be34302b_68736_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/cpp-array/2_hue42fa8fac7d53e6d034df985be34302b_68736_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;619&#34;
				height=&#34;462&#34;
				loading=&#34;lazy&#34;
				alt=&#34;实验8第一题&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;实验8第一题&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&#34;2数组的定义分析&#34;&gt;2、数组的定义分析&lt;/h3&gt;
&lt;p&gt;因为要输入的是实数（小数），所以要用&lt;code&gt;double&lt;/code&gt;或&lt;code&gt;float&lt;/code&gt;类型。&lt;/p&gt;
&lt;p&gt;然后有15个数，但注意到要把计算后的平均值存到&lt;code&gt;a&lt;/code&gt;数组最后的&lt;code&gt;a[15]&lt;/code&gt;里，即实际上为16个数，长度为16。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;故定义数组：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;3数组刚开始的原样读入原样输出和求平均值&#34;&gt;3、数组刚开始的原样读入、原样输出和求平均值&lt;/h3&gt;
&lt;p&gt;如果认真看了之前的“数组的运用”，这里应该问题不大。&lt;br&gt;
多的点就是要每行五个输出，并且域宽为10。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;			&lt;span class=&#34;c1&#34;&gt;//求和变量注意清零
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;//读入部分
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//i=0~14，读入十五个数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;		&lt;span class=&#34;c1&#34;&gt;//读入a[i]
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//顺便对a[i]的所有项求和，方便后面求平均值
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;//求平均值部分
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;		&lt;span class=&#34;c1&#34;&gt;//求的总和除以个数，也就算的是平均值，放到题上要求的a[15]里
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;//输出部分
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;c1&#34;&gt;//这里用如果(i+1)%5==0则换行，也就是i=5,10,15,...的时候换行，达成了每五个换行的效果
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//这个可以记下来，如果是每7个换行，就写 if (i%7 == 0) cout&amp;lt;&amp;lt;endl;
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;setw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//输出a[i]，setw为设置域宽
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;4调整a数组以满足题目条件形式输出&#34;&gt;4、调整a数组，以满足题目条件形式输出&lt;/h3&gt;
&lt;p&gt;因为我们要调整&lt;code&gt;a&lt;/code&gt;数组里的数，最终输出&lt;code&gt;a&lt;/code&gt;数组。&lt;br&gt;
所以可以先把&lt;code&gt;a&lt;/code&gt;数组里的所有数存到&lt;code&gt;b&lt;/code&gt;数组里，然后再“遍历”&lt;code&gt;b&lt;/code&gt;数组，判断某一个数&lt;code&gt;b[i]&lt;/code&gt;跟平均值的关系，如果大于则放到&lt;code&gt;a&lt;/code&gt;数组前面，小于则放到后面。&lt;/p&gt;
&lt;p&gt;首先先来写怎么把&lt;code&gt;a&lt;/code&gt;数组里的所有数存到&lt;code&gt;b&lt;/code&gt;数组里，前面已经写过了这里直接写代码。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//把a数组放到b数组里
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;p&gt;接下来就是难点了，判断出关系后，怎么样才能把&lt;code&gt;b[i]&lt;/code&gt;放到&lt;code&gt;a&lt;/code&gt;数组前面或者后面。&lt;br&gt;
之前说过的，下标不一定只能用&lt;code&gt;i&lt;/code&gt;，也可以定义新变量来表示下标。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;于是我们可以定义两个变量&lt;code&gt;begin&lt;/code&gt;和&lt;code&gt;end&lt;/code&gt;，分别代表&lt;code&gt;a&lt;/code&gt;数组前面和后面的下标。&lt;br&gt;
刚开始&lt;code&gt;begin = 0, end = 14&lt;/code&gt;，分别代表最开始的前面的下标和后面的下标。&lt;br&gt;
&lt;figure style=&#34;flex-grow: 212; flex-basis: 510px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/cpp-array/3.png&#34; data-size=&#34;668x314&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/cpp-array/3.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/cpp-array/3_hu7a85c322ed85aa76ff251f4d68905a47_5608_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/cpp-array/3_hu7a85c322ed85aa76ff251f4d68905a47_5608_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;668&#34;
				height=&#34;314&#34;
				loading=&#34;lazy&#34;
				alt=&#34;way_1&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;way_1&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;br&gt;
&lt;em&gt;【注意&lt;code&gt;a[15]&lt;/code&gt;为平均值】&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;然后遍历&lt;code&gt;b&lt;/code&gt;数组，假如第一个数&lt;code&gt;b[i]&lt;/code&gt;（$i=1$）为$3$，小于平均值&lt;code&gt;a[15]&lt;/code&gt;则该放到后面，也就是&lt;code&gt;a[end]&lt;/code&gt;。&lt;br&gt;
先让&lt;code&gt;a[end]=b[i]&lt;/code&gt;，&lt;br&gt;
&lt;figure style=&#34;flex-grow: 213; flex-basis: 512px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/cpp-array/4.png&#34; data-size=&#34;673x315&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/cpp-array/4.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/cpp-array/4_hucbfe42feb76f4854d7cf827238259a26_5746_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/cpp-array/4_hucbfe42feb76f4854d7cf827238259a26_5746_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;673&#34;
				height=&#34;315&#34;
				loading=&#34;lazy&#34;
				alt=&#34;way_2&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;way_2&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;然后再让&lt;code&gt;end = end - 1&lt;/code&gt;，&lt;br&gt;
&lt;figure style=&#34;flex-grow: 223; flex-basis: 537px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/cpp-array/5.png&#34; data-size=&#34;645x288&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/cpp-array/5.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/cpp-array/5_hu2b60ae33d41ff7d46fac7da4b1d2ddf9_5531_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/cpp-array/5_hu2b60ae33d41ff7d46fac7da4b1d2ddf9_5531_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;645&#34;
				height=&#34;288&#34;
				loading=&#34;lazy&#34;
				alt=&#34;way_3&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;way_3&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;这样，当再次找到下个小于平均值的数时，则会放到当前的最后面处；&lt;br&gt;
找到下个大于平均值的数时，则会放到当前的最前面处。&lt;br&gt;
如图：
&lt;figure style=&#34;flex-grow: 215; flex-basis: 517px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/cpp-array/6.png&#34; data-size=&#34;684x317&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/cpp-array/6.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/cpp-array/6_hu01fe1d94b21e0162da7b5bf213406e9c_5871_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/cpp-array/6_hu01fe1d94b21e0162da7b5bf213406e9c_5871_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;684&#34;
				height=&#34;317&#34;
				loading=&#34;lazy&#34;
				alt=&#34;way_4&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;way_4&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;代码：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;调整后的数据为:&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//把a数组放到b数组里
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//遍历b数组，跟平均数比较，放回a数组
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//跟平均数比较
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
  	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  		&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
  		&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

  &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//输出a数组
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;  &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
  	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
  		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
  	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;setw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;5总代码&#34;&gt;5、总代码&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iomanip&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;0.0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;请输入15个实型数：&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//读入
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;		 &lt;span class=&#34;c1&#34;&gt;//求平均值
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//原样输出
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//【这里加了个i!=0的条件，防止最开始就换行
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;setw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;
		 &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;调整后的数据为:&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//把a数组放到b数组里
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;end&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//遍历b数组，跟平均数比较，放回a数组
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;16&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//输出a数组【注意这里是遍历输出整个a数组，即a[15]这个存的平均值也要输出，所以变成了(i = 0; i &amp;lt;16; i++)
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;setw&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;这里只讲的老师的第一种方法，更好理解一些。对于第二种方法可以自行尝试，跟这个大致相同，不懂也可以自己在草稿纸上模拟一下。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;五其他提示&#34;&gt;五、其他提示&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;数组的范围可以开大，但不能开小。&lt;br&gt;
意思就是尽管最多可能只有10个整数，你可以定义为&lt;code&gt;int a[100]&lt;/code&gt;，但不可以&lt;code&gt;int a[9]&lt;/code&gt;。&lt;br&gt;
&lt;strong&gt;推荐&lt;/strong&gt;是比最多个数开稍微大一点，这样又可以偷懒想要开几个，又可以防止越界错误【本来只定义了15个，你访问了&lt;code&gt;a[20]&lt;/code&gt;】。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;因为编程里数组第一项是从&lt;code&gt;a[0]&lt;/code&gt;开始的，比较反人类x……&lt;br&gt;
所以如果想按照数学习惯，完全可以从&lt;code&gt;a[1]&lt;/code&gt;开始存数。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;比如读入15个数，原来可能写成&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样就是存在&lt;code&gt;a[0]~a[14]&lt;/code&gt;里。&lt;/p&gt;
&lt;p&gt;你也可以写成符合我们习惯的&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;15&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这样就是存在&lt;code&gt;a[1]~a[15]&lt;/code&gt;里。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不过选择好一种自己喜欢的就这么写，不要一会从$0\sim14$一会又$1\sim15$，不然会很混乱。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;没了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有关排序的算法可能是常考点，各位可以自己去背一下。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;以上。&lt;/strong&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>考点总结……</title>
        <link>https://blog.supersassw.com/p/cpp-summary/</link>
        <pubDate>Sat, 26 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/cpp-summary/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/cpp-summary/58541644_p0.png" alt="Featured image of post 考点总结……" /&gt;&lt;h1 id=&#34;一注意的点&#34;&gt;一、注意的点&lt;/h1&gt;
&lt;h2 id=&#34;1用作为累加累乘的变量的注意事项&#34;&gt;1、用作为“累加、累乘”的变量的注意事项&lt;/h2&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;例子——累加、累乘的变量&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;sum1 = sum1 + a;&lt;/code&gt;——作为累加求和。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;sum2 = sum2 * a;&lt;/code&gt;——作为累乘求和。&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;是否定义时&lt;strong&gt;赋初值？&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;int sum1 = 0;&lt;/code&gt;——累加变量&lt;strong&gt;赋初值为0&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int sum2 = 1;&lt;/code&gt;——累乘变量&lt;strong&gt;赋初值为1&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在&lt;strong&gt;循环里反复使用&lt;/strong&gt;，要注意可能要将累加变量&lt;strong&gt;清零&lt;/strong&gt;，累乘变量&lt;strong&gt;赋一&lt;/strong&gt;。&lt;/p&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;例题&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;snote message cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;题目：&lt;br&gt;
统计3组数据的和，其中每组数据会有n个数。&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;部分代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//赋初值为0
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//循环3组数据
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;请输入第&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;组数据有多少个数：&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;请输入n个数：&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//读入并统计这组数据里n个数的和
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;这组数据和为：&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;sum&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//关键语句：这里即要注意每读完一组数据要清零！否则会带着上次计算的结果算下一组
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;加了&lt;code&gt;sum = 0;&lt;/code&gt;这句清零语句：&lt;br&gt;
&lt;img src=&#34;1.png&#34; alt=&#34;正确答案&#34;&gt;&lt;/li&gt;
&lt;li&gt;未加&lt;code&gt;sum = 0;&lt;/code&gt;这句清零语句：&lt;br&gt;
&lt;img src=&#34;2.png&#34; alt=&#34;错误答案&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;2有关函数的讲解和注意事项&#34;&gt;2、有关函数的讲解和注意事项&lt;/h2&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;函数的三个要点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我要给他什么东西？（给几个东西、这些东西是什么类型）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;我想要这个函数干嘛、完成什么事&lt;/strong&gt;？&lt;/li&gt;
&lt;li&gt;他要给我返回个什么东西？（只能返回一个值，否则不叫函数）&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;一般要求写函数，都是基于这三点分析：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;根据1和3两点来确定怎么&lt;strong&gt;声明&lt;/strong&gt;函数。&lt;/li&gt;
&lt;li&gt;根据2这点来确定怎么&lt;strong&gt;实现&lt;/strong&gt;函数。&lt;/li&gt;
&lt;/ul&gt;




&lt;div class=&#34;sc-tabs&#34;&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-1&#34; id=&#34;tabs-1-0&#34; checked=&#34;checked&#34; /&gt;
	&lt;label for=&#34;tabs-1-0&#34;&gt;例题一&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote message cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;题目：要求写一个函数，用来返回两个整数的最大值。&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;分析与实现&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;p&gt;分析如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我应该给这个函数两个&lt;code&gt;int&lt;/code&gt;类型的数据。&lt;/li&gt;
&lt;li&gt;这个函数应该找到&lt;strong&gt;这两个数谁最大&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;这个函数应该返回给我这两个数的最大值，也是&lt;code&gt;int&lt;/code&gt;类型的数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;故声明部分为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;实现部分为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用部分为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;两个数的最大值为：&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-1&#34; id=&#34;tabs-1-1&#34;  /&gt;
	&lt;label for=&#34;tabs-1-1&#34;&gt;例题二&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;snote message cyan &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;题目：要求写一个函数，用来确认某个数是否在某个数组&lt;code&gt;a[10]&lt;/code&gt;里（为double类型数组）。&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;分析与实现&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;p&gt;分析如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我应该给这个函数一个我要找的数，这个数为&lt;code&gt;double&lt;/code&gt;类型；还要给我要找的数组，这个为数组的&lt;code&gt;double*&lt;/code&gt;指针类型。&lt;/li&gt;
&lt;li&gt;这个函数判断这个数是否存在于&lt;code&gt;a&lt;/code&gt;这个数组。&lt;/li&gt;
&lt;li&gt;这个函数应该返回给我这个数&lt;strong&gt;是否&lt;/strong&gt;存在于&lt;code&gt;a&lt;/code&gt;数组，是个&lt;code&gt;bool&lt;/code&gt;类型的数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;故声明部分为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if_inside&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;实现部分为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if_inside&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//如果与数组中某个数相等，代表找到，返回true
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//遍历完数组都没找到，代表真的没有，返回false
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;使用部分为：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;if_inside&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;double&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;if_inside&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//判断n是否在a数组内
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;n这个数在a数组内&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;n这个数不在a数组内&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&#34;函数的注意事项&#34;&gt;函数的注意事项&lt;/h3&gt;


&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;如果把函数实现写在&lt;code&gt;int main()&lt;/code&gt;之前，便不用在&lt;code&gt;main&lt;/code&gt;里&lt;strong&gt;声明函数&lt;/strong&gt;了。【见书P86 第二个黑色方框】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;函数一旦&lt;code&gt;return&lt;/code&gt;后，便&lt;strong&gt;不会再执行之后的语句&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;不同函数（包括&lt;code&gt;main&lt;/code&gt;这个“主函数”）里面的变量&lt;strong&gt;不能互相调用&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;即假如&lt;code&gt;main()&lt;/code&gt;里有个&lt;code&gt;int a&lt;/code&gt;，则不能在子函数&lt;code&gt;fx()&lt;/code&gt;中用&lt;code&gt;a = 1&lt;/code&gt;这样。&lt;br&gt;
如果&lt;code&gt;main()&lt;/code&gt;里有个&lt;code&gt;int a&lt;/code&gt;，子函数&lt;code&gt;fx()&lt;/code&gt;里也有个&lt;code&gt;int a&lt;/code&gt;：则&lt;code&gt;main&lt;/code&gt;里只能用&lt;code&gt;main&lt;/code&gt;里的&lt;code&gt;a&lt;/code&gt;，&lt;code&gt;fx&lt;/code&gt;里只能用&lt;code&gt;fx&lt;/code&gt;里的&lt;code&gt;a&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;这个其实就是局部变量的原因，函数里的变量为局部变量，只能在这个函数里用。&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;二需要记住的模板&#34;&gt;二、需要记住的模板&lt;/h1&gt;
&lt;h2 id=&#34;1生成随机数&#34;&gt;1、生成随机数&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;必须写上的代码&lt;/strong&gt;（提供随机种子）&lt;/p&gt;
&lt;p&gt;直接写在&lt;code&gt;int main()&lt;/code&gt;后面的第一句话就好。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;srand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;NULL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;

    &lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用方法&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;要取得$(a,b)$的随机整数，使用&lt;code&gt;( rand() % (b-a+1) ) + a + 1&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;要取得$[a,b)$的随机整数，使用&lt;code&gt;( rand() % (b-a) ) + a&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;要取得$[a,b]$的随机整数，使用&lt;code&gt;( rand() % (b-a+1) ) + a&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;要取得$(a,b]$的随机整数，使用&lt;code&gt;( rand() % (b-a) ) + a + 1&lt;/code&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;例子——随机生成1到100内的整数（含1和100）&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;p&gt;代码：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者直接写成：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;/li&gt;
&lt;/ol&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;记忆方法：&lt;/p&gt;
&lt;p&gt;想象$rand()$是能返回完全任意的数。&lt;br&gt;
当你对这个任意的数$\mod 100$（对100取余数）后，那么余数范围只能是$0\sim99$。&lt;br&gt;
再加个$1$，范围变成了$1 \sim 100$。&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;2最大公约数gcd和最小公倍数lcm的计算&#34;&gt;2、最大公约数（GCD）和最小公倍数（LCM）的计算&lt;/h2&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 这个比较重要，也很难背。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;直接背代码。&lt;/p&gt;
&lt;h3 id=&#34;老师给的版本&#34;&gt;老师给的版本&lt;/h3&gt;




&lt;div class=&#34;sc-tabs&#34;&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-2&#34; id=&#34;tabs-2-0&#34; checked=&#34;checked&#34; /&gt;
	&lt;label for=&#34;tabs-2-0&#34;&gt;最大公约数（GCD）&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;GCD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//求a和b的最大公约数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//保证a是两数中较小的数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;c&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//这个过程背住orz……
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//最后的a值为求得的结果
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;input type=&#34;radio&#34; class=&#34;sc-tabs--toggle&#34; name=&#34;tabs-2&#34; id=&#34;tabs-2-1&#34;  /&gt;
	&lt;label for=&#34;tabs-2-1&#34;&gt;最小公倍数（LCM）&lt;/label&gt;
	&lt;div class=&#34;sc-tabs--content&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;LCM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//求a和b的最小公倍数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GCD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里用函数的形式来写，以后求解可可以直接用这个函数。如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;和&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;的最大公约数为：&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GCD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;endl&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;和&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;的最小公约数为：&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;LCM&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;不用函数的话，就把那里面的东西直接写到&lt;code&gt;main()&lt;/code&gt;里就行。&lt;/p&gt;
&lt;h3 id=&#34;更好记的版本&#34;&gt;更好记的版本&lt;/h3&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 利用递归思想求最大公约数，可以极大简化代码。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;可以尝试理解下这个代码，能很好的&lt;strong&gt;锻炼递归思想&lt;/strong&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;GCD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;GCD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//意思是如果b不为0，则a=b,b=b%a辗转相除；否则就返回a
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;或者采用这个递推的思想，极其好记！&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;GCD&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;^=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;【但原理就不要求掌握了，其中的&lt;code&gt;^=&lt;/code&gt;是位运算……&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;3判断某数是否为质数&#34;&gt;3、判断某数是否为质数&lt;/h2&gt;
&lt;p&gt;直接背代码。&lt;/p&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 代码里有几个要注意的点。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;if_Prime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;c1&#34;&gt;//！特别注意！：当num=1的时候很可能之后会判断失误，故需要“打补丁”：当num=1的时候直接返回false
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//刚开始假设是素数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//！注意！：这里是(2~num-1)，而不是(2~num)，很容易在这里写错
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;//找到能被(2~num-1)之中的数除尽，证明不是素数，设置flag并退出循环
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;false&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;break&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flag&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//如果循环完都没有被除尽，证明是素数，会返回true；否则会返回flase
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里用函数的形式来写，以后判断就可以直接用这个函数。如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;if_Prime&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;是素数&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;cout&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;不是素数&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4对数组的排序&#34;&gt;4、对数组的排序&lt;/h2&gt;
&lt;p&gt;就两种排序方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;冒泡排序&lt;/li&gt;
&lt;li&gt;选择排序&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;两种方法仅存在写法上的区别，建议自己选择一种自己背得到的记住。&lt;br&gt;
而且写法的差别并不大，仅是&lt;code&gt;for&lt;/code&gt;循环范围的区别。&lt;/p&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 很可能会考到写法【个人感觉【…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;&lt;em&gt;【模板见老师的PPT，如果没记的话可以问我……&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;5二分查找折半查找&#34;&gt;5、二分查找（折半查找）&lt;/h2&gt;
&lt;p&gt;有可能要考，考的话会专门指出“请用二分查找来找出&amp;hellip;”。&lt;br&gt;
不然的话就可以用“从头到尾遍历数组”来找。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;【模板见老师的PPT，如果没记的话可以问我……&lt;/em&gt;&lt;/p&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 使用二分查找，需要先让数组有序，如果是无序的数组先要排序。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;三常用头文件及函数&#34;&gt;三、常用头文件及函数&lt;/h1&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;...&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;#include&amp;lt;iostream&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最基本&lt;/strong&gt;的库。&lt;br&gt;
&lt;code&gt;cin&lt;/code&gt;、&lt;code&gt;cout&lt;/code&gt;等基本指令都需要这个库，写程序直接写上即可。&lt;br&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;记忆方法&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;ul&gt;
&lt;li&gt;io ————&amp;gt; input&amp;amp;output 输入输出&lt;/li&gt;
&lt;li&gt;stream ————&amp;gt; stream n.流&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;即“输入输出流”。&lt;/div&gt;
&lt;/details&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;#include&amp;lt;ctime&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用&lt;strong&gt;随机生成&lt;/strong&gt;时要用到的库。&lt;br&gt;
即生成种子时用的&lt;code&gt;time()&lt;/code&gt;需要这个库。
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;记忆方法&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;ul&gt;
&lt;li&gt;c ————&amp;gt; 值c++&lt;/li&gt;
&lt;li&gt;time ————&amp;gt; time n.时间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;即用来管时间的库。（随机函数需要用时间来作为种子，这样才能保证随机生成不重复）&lt;/div&gt;
&lt;/details&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;#include&amp;lt;iomanip&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;控制&lt;strong&gt;输出格式&lt;/strong&gt;要用到的库。&lt;br&gt;
&lt;code&gt;setw(...)&lt;/code&gt;、&lt;code&gt;fixed()&lt;/code&gt;、&lt;code&gt;precision(...)&lt;/code&gt;（基本为这三个）需要用到这个库。
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;记忆方法&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;ul&gt;
&lt;li&gt;io ————&amp;gt; input&amp;amp;output&lt;/li&gt;
&lt;li&gt;manip ————&amp;gt; manipulator n.操控器 的前五个字母&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;即“输入输出控制器”。&lt;/div&gt;
&lt;/details&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;#include&amp;lt;string&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;使用c++的&lt;strong&gt;字符串&lt;/strong&gt;要用到的库。&lt;br&gt;
对字符串大致使用不了解的看书P132-134。（会点很基础的输入输出就行，不用太了解）&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;【库这些东西多写了没坏处，可以写之前就把这些库都写上，之后复制粘贴就行xd……&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;四常见非编译问题和错误弹窗解释&#34;&gt;四、常见非编译问题和错误弹窗解释&lt;/h1&gt;
&lt;h2 id=&#34;1未赋初值类&#34;&gt;1、未赋初值类&lt;/h2&gt;
&lt;p&gt;弹窗显示如图：&lt;br&gt;
&lt;figure style=&#34;flex-grow: 141; flex-basis: 339px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/cpp-summary/err1.png&#34; data-size=&#34;924x654&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/cpp-summary/err1.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/cpp-summary/err1_huf8fb917e0a7681950fbec7ad55164427_26350_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/cpp-summary/err1_huf8fb917e0a7681950fbec7ad55164427_26350_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;924&#34;
				height=&#34;654&#34;
				loading=&#34;lazy&#34;
				alt=&#34;错误类型1&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;错误类型1&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中文意思：“val”（橙色圈出）这个变量没被初始化（赋初值）就在使用。&lt;/li&gt;
&lt;li&gt;出现原因：一般出现在累加变量&lt;strong&gt;未赋初值为0&lt;/strong&gt;，就在用&lt;code&gt;sum=sum+a&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;解决方法：找到变量名为引号里的变量，在使用其前赋相应初值。&lt;/li&gt;
&lt;/ul&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;错例&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;p&gt;&lt;img src=&#34;err1_p.png&#34; alt=&#34;错误1-例&#34;&gt;&lt;/p&gt;
&lt;p&gt;红色划线为对&lt;code&gt;val&lt;/code&gt;的使用处，橙色划线为&lt;code&gt;val&lt;/code&gt;的定义处。&lt;br&gt;
很明显看到&lt;code&gt;val&lt;/code&gt;在使用前未被赋初值。&lt;br&gt;
故在使用前赋个初值（这里为累加变量，所以赋初值为0），即：&lt;code&gt;val = 0&lt;/code&gt;。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;h2 id=&#34;2数组越界类&#34;&gt;2、数组越界类&lt;/h2&gt;
&lt;p&gt;弹窗显示如图：&lt;br&gt;
&lt;figure style=&#34;flex-grow: 131; flex-basis: 316px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/cpp-summary/err2.png&#34; data-size=&#34;862x654&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/cpp-summary/err2.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/cpp-summary/err2_huec0459009573e6433701548224e353f5_26727_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/cpp-summary/err2_huec0459009573e6433701548224e353f5_26727_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;862&#34;
				height=&#34;654&#34;
				loading=&#34;lazy&#34;
				alt=&#34;错误类型2&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;错误类型2&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中文意思：变量“a”周围的栈被破坏。【理解不到没关系看下面_(:з」∠)_……&lt;/li&gt;
&lt;li&gt;出现原因：出现在对数组元素的访问中，访问的下标超过数组最大个数。&lt;/li&gt;
&lt;li&gt;解决方法：找到变量名为引号里的数组的声明部分，将其空间开大点。&lt;/li&gt;
&lt;/ul&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;错例&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;p&gt;&lt;img src=&#34;err2_p.png&#34; alt=&#34;错误2-例&#34;&gt;&lt;/p&gt;
&lt;p&gt;橙色划线定义个数组空间为$10$，即只能用&lt;code&gt;a[0]~a[9]&lt;/code&gt;。&lt;br&gt;
但在红色划线里，却用了&lt;code&gt;a[10]&lt;/code&gt;，明显超出了最大范围，即越界了，所以会出现此错。&lt;br&gt;
故在定义部分&lt;code&gt;int a[10]&lt;/code&gt;，把它空间开大点变成&lt;code&gt;int a[11]&lt;/code&gt;即可。&lt;/p&gt;
&lt;/div&gt;
&lt;/details&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 这也是数组中很常见的误区和错误需要注意！ &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h2 id=&#34;3死循环类&#34;&gt;3、死循环类&lt;/h2&gt;
&lt;p&gt;这类错误不会报错，但会感觉程序怪怪的……&lt;/p&gt;
&lt;p&gt;比如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一直黑屏，没有任何反应。&lt;br&gt;
（如果不确定是不是电脑卡了的原因，可在&lt;code&gt;int main()&lt;/code&gt;最开始加一句&lt;code&gt;cout&amp;lt;&amp;lt;&amp;quot;test&amp;quot;&lt;/code&gt;来判断：如果输出了&lt;code&gt;test&lt;/code&gt;，则证明不是程序卡了。）&lt;/li&gt;
&lt;li&gt;明明只想读入几个数，却发现一直在读入。&lt;/li&gt;
&lt;li&gt;明明只想输出几个数，却发现一直在输出。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这几类便是说明你的程序陷入了“死循环”。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如下程序：&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 110; flex-basis: 264px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/cpp-summary/err3_p.png&#34; data-size=&#34;568x516&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/cpp-summary/err3_p.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/cpp-summary/err3_p_hu6a5dc7d31485f9a38ef924fef4ee604d_21208_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/cpp-summary/err3_p_hu6a5dc7d31485f9a38ef924fef4ee604d_21208_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;568&#34;
				height=&#34;516&#34;
				loading=&#34;lazy&#34;
				alt=&#34;错误3-例&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;错误3-例&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;本意是只读入五个数，输出这五个数的和。&lt;/p&gt;
&lt;p&gt;运行时：&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 186; flex-basis: 447px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/cpp-summary/err3.png&#34; data-size=&#34;1958x1050&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/cpp-summary/err3.png&#34;
				srcset=&#34;https://blog.supersassw.com/p/cpp-summary/err3_hucf7cef33e400ed250ae0e2c855c83bc8_44910_480x0_resize_box_2.png 480w, https://blog.supersassw.com/p/cpp-summary/err3_hucf7cef33e400ed250ae0e2c855c83bc8_44910_1024x0_resize_box_2.png 1024w&#34;
				width=&#34;1958&#34;
				height=&#34;1050&#34;
				loading=&#34;lazy&#34;
				alt=&#34;错误3-运行界面&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;错误3-运行界面&lt;/figcaption&gt;
		
	&lt;/figure&gt;
发现一直在读入。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;出现原因：
&lt;ol&gt;
&lt;li&gt;循环变量没有改变。
&lt;blockquote&gt;
&lt;p&gt;如忘了&lt;code&gt;i++&lt;/code&gt;、&lt;code&gt;i--&lt;/code&gt;、&lt;code&gt;i=i+2&lt;/code&gt;等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;循环条件不可能中止。
&lt;blockquote&gt;
&lt;p&gt;如&lt;code&gt;for (i = 1; i &amp;gt;= 0; i++)&lt;/code&gt;，$i\geq 0$会一直成立。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;循环里不小心改变了循环变量。
&lt;blockquote&gt;
&lt;p&gt;如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;每次循环&lt;code&gt;i&lt;/code&gt;又会变为0，则会一直循环造成死循环。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;还可能有其他各种原因，反正问题都出在循环里，&lt;strong&gt;仔细检查下自己写的循环部分&lt;/strong&gt;。&lt;/p&gt;
&lt;h1 id=&#34;五其他杂类&#34;&gt;五、其他杂类&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;有关&lt;code&gt;i++&lt;/code&gt;和&lt;code&gt;++i&lt;/code&gt;的区别，不懂看书P45。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;有关条件运算符&lt;code&gt;... ? ... : ...&lt;/code&gt;的用法（不一定会用，但是要看得懂），不懂看书P45。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;强制类型转换&lt;code&gt;(int)4.8&lt;/code&gt;、&lt;code&gt;(double)1&lt;/code&gt;是否还记得？不记得看书P50。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对&lt;code&gt;const&lt;/code&gt;（符号常量）这个东西是否还记得？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如&lt;code&gt;const double PI = 3.1415926&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;不记得看书P31。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确定&lt;strong&gt;是否掌握&lt;code&gt;setw&lt;/code&gt;、&lt;code&gt;precision&lt;/code&gt;等&lt;/strong&gt;控制输出格式的用法，不会看书P34-P35。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对字符数组&lt;code&gt;char a[100]&lt;/code&gt;，了解这是什么即可（c里面的字符串），不必掌握。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;字符串最后会有个看不见的&lt;code&gt;\000&lt;/code&gt;这个空字符：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如字符串&lt;code&gt;&amp;quot;MinatoAqua&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;长度为$10$。&lt;/li&gt;
&lt;li&gt;存储时存放$11$个字符串。&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一定注意&lt;code&gt;{}&lt;/code&gt;的匹配！
特别牢记你的&lt;strong&gt;这个&lt;code&gt;if&lt;/code&gt;或&lt;code&gt;for&lt;/code&gt;要管哪几句话&lt;/strong&gt;，就把哪几句话打上&lt;code&gt;{}&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;强烈建议把程序写的&lt;strong&gt;规范一点&lt;/strong&gt;&lt;/p&gt;


&lt;div class=&#34;snote guide blue &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;ol&gt;
&lt;li&gt;一句话（用&lt;code&gt;;&lt;/code&gt;结尾的）就是一行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{&lt;/code&gt;和&lt;code&gt;}&lt;/code&gt;单独占一行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;{&lt;/code&gt;之后的语句空两格（或者按“Tab”这个键）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;}&lt;/code&gt;之后（包含这一行）的语句往前删两个空格（用的“Tab”的删一次就可以）&lt;/li&gt;
&lt;li&gt;具体样式就是以上我写的那种样子。&lt;/li&gt;
&lt;/ol&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;这样不只是好看，更能让你的整体思路保持清晰，不然很容易犯&lt;code&gt;{}&lt;/code&gt;不匹配的问题！&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;要知道你每写一句话是在干嘛，这句话我写出来是什么目的。【有点抽象，不过确实很需要知道自己的目的，怎么实现这个目的，等熟练后这个自然也就会很清楚了orz……&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;以上，&lt;br&gt;
祝武运昌隆！……&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Timeline测试……</title>
        <link>https://blog.supersassw.com/p/test-timeline/</link>
        <pubDate>Thu, 24 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/test-timeline/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/test-timeline/pixiv61107110.jpg" alt="Featured image of post Timeline测试……" /&gt;&lt;h1 id=&#34;timeline&#34;&gt;Timeline……&lt;/h1&gt;
&lt;p&gt;时间线标签的移植测试……&lt;/p&gt;
&lt;h2 id=&#34;测试&#34;&gt;测试&lt;/h2&gt;
&lt;div class=&#34;timeline&#34;&gt;
	
		&lt;p class=&#34;p h2&#34;&gt;总历程……&lt;/p&gt;
	
	



&lt;div class=&#34;timenode&#34;&gt;
	&lt;div class=&#34;meta&#34;&gt;
		&lt;p&gt;2020-12-24 19:00&lt;div class=&#34;title&#34;&gt;提出构想……&lt;/div&gt;&lt;/p&gt;
	&lt;/div&gt;
	&lt;div class=&#34;body&#34;&gt;
		&lt;p&gt;这个时间线好好看啊，我也要实现！……&lt;/p&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 这里面还能套娃哦x…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;

	&lt;/div&gt;
&lt;/div&gt;



&lt;div class=&#34;timenode&#34;&gt;
	&lt;div class=&#34;meta&#34;&gt;
		&lt;p&gt;2020-12-25&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.bilibili.com&#34;&gt;这里想要测试下所以这里的标题要非常非常非常的长这样才能测试是否全平台适配……&lt;/a&gt;&lt;/p&gt;
	&lt;/div&gt;
	&lt;div class=&#34;body&#34;&gt;
		&lt;p&gt;到了明天【？……&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input checked=&#34;&#34; disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 感觉实现了……&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里面用Markdown写！……&lt;br&gt;
然后这里也要非常非常非常非常非常非非常非常非常非常非常非常常非常非常非常非常非常非常的长……&lt;/p&gt;

	&lt;/div&gt;
&lt;/div&gt;



&lt;div class=&#34;timenode&#34;&gt;
	&lt;div class=&#34;meta&#34;&gt;
		&lt;p&gt;2020-12-25 233:33:33&lt;/p&gt;
	&lt;/div&gt;
	&lt;div class=&#34;body&#34;&gt;
		&lt;p&gt;&lt;em&gt;time其实内容随意（没有检测直接原样输出），填个不是时间的也可以……&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;最后一个测试了！……&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;来个公式：
&lt;blockquote&gt;
&lt;p&gt;$$[{2{x^T}(t)x(t - \tau ) = {x^T}(t){Q^{ - \frac{1}{2}}}x(t - \tau ) \le \frac{1}{\alpha }{x^T}(t)Px(t) + \alpha {x^T}(t - \tau )x(t - \tau )}]$$
我也不知道这是啥_(:з」∠)_……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;来个代码：
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;freopen&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;ans.out&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;r&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;qwq&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;

	&lt;/div&gt;
&lt;/div&gt;



&lt;div class=&#34;timenode&#34;&gt;
	&lt;div class=&#34;meta&#34;&gt;
		&lt;p&gt;2020-12-24 20:28&lt;div class=&#34;title&#34;&gt;正式实现并适配……&lt;/div&gt;&lt;/p&gt;
	&lt;/div&gt;
	&lt;div class=&#34;body&#34;&gt;
		&lt;p&gt;实现了！……&lt;/p&gt;
&lt;p&gt;也不知道会不会出问题，反正能跑就行.jpg……&lt;/p&gt;
&lt;p&gt;改后的样式配上这个主题感觉还是很好看的√……&lt;/p&gt;
&lt;p&gt;不过markdown里看着好乱啊也没办法的&#39;_&amp;gt;&#39;……&lt;/p&gt;
&lt;p&gt;好累orz……&lt;/p&gt;

	&lt;/div&gt;
&lt;/div&gt;


&lt;/div&gt;
&lt;h2 id=&#34;实现方法&#34;&gt;实现方法&lt;/h2&gt;
&lt;p&gt;又又又又又是Shortcode！……&lt;/p&gt;
&lt;p&gt;换行输入模式……&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;timeline&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;


&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;timeline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;内容&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;......&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;timeline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;timeline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;time&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;title&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;url&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;nx&#34;&gt;内容&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;......&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;timeline&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;


&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;timeline&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;外层：&lt;br&gt;
&lt;code&gt;name&lt;/code&gt;（可选项）：为这条时间线的标题……&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;内层：&lt;br&gt;
&lt;code&gt;time&lt;/code&gt;（必填项）：节点时间……&lt;br&gt;
&lt;code&gt;title&lt;/code&gt;（可选项）：节点名称……&lt;br&gt;
&lt;code&gt;url&lt;/code&gt;（可选项）：节点链接（外部链接要加&lt;code&gt;https://&lt;/code&gt;）……&lt;br&gt;
&lt;code&gt;new&lt;/code&gt;（可选项）：如果填了&lt;code&gt;url&lt;/code&gt;，将new设为&lt;code&gt;1&lt;/code&gt;可以在新窗口打开标签……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/blockquote&gt;
&lt;hr&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;想法还是来自于：&lt;br&gt;
小康博客 —— &lt;a href=&#34;https://www.antmoe.com/posts/a811d614/index.html#volantis%E4%B8%BB%E9%A2%98%E7%9A%84link%E6%A0%87%E7%AD%BE%E4%B8%8E%E6%97%B6%E9%97%B4%E7%BA%BF%E6%A0%87%E7%AD%BE&#34;&gt;Hexo博客之butterfly主题优雅魔改系列（持续更新）&lt;/a&gt;&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;个人在其基础上修改了CSS以适配此主题……&lt;br&gt;
并以Shortcode的形式完成对Hugo的移植……&lt;/p&gt;
</description>
        </item>
        <item>
        <title>NoteBlock测试……</title>
        <link>https://blog.supersassw.com/p/test-note/</link>
        <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/test-note/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/test-note/Yande-713907.jpg" alt="Featured image of post NoteBlock测试……" /&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 发现note嵌套中还是会出现格式混乱的问题，待修复…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;details class=&#34;sc-details&#34; &gt;
	&lt;summary&gt;错误例子&lt;/summary&gt;
	&lt;div class=&#34;sc-details--inner&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;note&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;info&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;

&lt;span class=&#34;mf&#34;&gt;1.&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;测试&lt;/span&gt;
   &lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;snote&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;error&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;这里有问题……&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;note&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;/details&gt;
&lt;hr&gt;
&lt;h1 id=&#34;note测试&#34;&gt;Note测试……&lt;/h1&gt;
&lt;p&gt;对Hexo中&lt;a class=&#34;link&#34; href=&#34;https://volantis.js.org/v2/tag-plugins/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Volantis主题的note&lt;/a&gt;移植测试……&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;NoteBlock 是 Blockquote 的增强版，在左边显示图标，并且可以自定颜色。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;长note&#34;&gt;长Note&lt;/h2&gt;
&lt;p&gt;适用于需要换行输入的note……&lt;/p&gt;
&lt;blockquote&gt;


&lt;div class=&#34;snote guide blue &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;很长很长的note！……&lt;br&gt;
还可以换行！……&lt;/p&gt;
&lt;p&gt;因为内容是Markdown格式……&lt;br&gt;
&lt;a href=&#34;http://game.granbluefantasy.jp/&#34;&gt;里面干什么都可以_(:з」∠)_……&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这句话是一句很长的话我用来测试他能否在不同移动端上也能正常显示我希望他真的能正常显示不然我又要去改scss了呜呜呜x但是现在这个长度还不够我还要再加长点嗯现在应该够了让我们看看效果吧！……&lt;/p&gt;
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;为了能使长note内嵌，暂时将goldmark里的&lt;code&gt;unsafe&lt;/code&gt;调为了&lt;code&gt;true&lt;/code&gt;（能内嵌HTML），日后再改进……&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;note&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;guide&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;theme&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;blue&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;note&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;


&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;注意：&lt;br&gt;
如果要在引用内容（&lt;code&gt;&amp;gt;&lt;/code&gt;）中使用，&lt;br&gt;
则只能在开头写一个&lt;code&gt;&amp;gt;&lt;/code&gt;，其内容和结束部分都不要打&lt;code&gt;&amp;gt;&lt;/code&gt;……&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2 id=&#34;短note&#34;&gt;短Note&lt;/h2&gt;
&lt;p&gt;适用于很短的一句话的note……&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;不带颜色的……&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;snote success &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 成功（success）…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;snote&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;success&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;带颜色的……&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;snote link blue&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 背景是SuperSASS蓝（blue）的链接图示（link）…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;snote&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;...&amp;#34;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;blue&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 图标问题已修复…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;测试：
&lt;div class=&#34;snote up &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; Test——up…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;snote paperclip yellow&#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; Test——paperclip in yellow…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;参数&#34;&gt;参数&lt;/h1&gt;
&lt;h2 id=&#34;图标&#34;&gt;图标&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;带颜色的：&lt;code&gt;quote&lt;/code&gt;, &lt;code&gt;info&lt;/code&gt;, &lt;code&gt;warning&lt;/code&gt;, &lt;code&gt;done/success&lt;/code&gt;, &lt;code&gt;error/danger&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;不带颜色的：&lt;code&gt;radiation&lt;/code&gt;, &lt;code&gt;bug&lt;/code&gt;, &lt;code&gt;idea&lt;/code&gt;, &lt;code&gt;link&lt;/code&gt;, &lt;code&gt;paperclip&lt;/code&gt;, &lt;code&gt;todo&lt;/code&gt;, &lt;code&gt;message&lt;/code&gt;, &lt;code&gt;guide&lt;/code&gt;, &lt;code&gt;download&lt;/code&gt;, &lt;code&gt;up&lt;/code&gt;, &lt;code&gt;undo&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;颜色&#34;&gt;颜色&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;clear&lt;/code&gt;, &lt;code&gt;light&lt;/code&gt;, &lt;code&gt;gray&lt;/code&gt;, &lt;code&gt;red&lt;/code&gt;, &lt;code&gt;yellow&lt;/code&gt;, &lt;code&gt;green&lt;/code&gt;, &lt;code&gt;cyan&lt;/code&gt;, &lt;code&gt;blue&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;想法来自于：&lt;br&gt;
小康博客 —— &lt;a href=&#34;https://www.antmoe.com/posts/a811d614/index.html#volantis%E4%B8%BB%E9%A2%98%E7%9A%84note%E6%A0%87%E7%AD%BE&#34;&gt;Hexo博客之butterfly主题优雅魔改系列（持续更新）&lt;/a&gt;&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;使用了其CSS后，用基于Hugo的Shortcode实现，并更改部分CSS使得匹配该主题……&lt;br&gt;
更多note也可以参见该页面……&lt;/p&gt;
&lt;p&gt;同时滚动条样式也参考了这位dalao然后自己改的【感恩……&lt;/p&gt;
</description>
        </item>
        <item>
        <title>并查集……</title>
        <link>https://blog.supersassw.com/p/union-find/</link>
        <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/union-find/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/union-find/60855211_p0.jpg" alt="Featured image of post 并查集……" /&gt;&lt;h1 id=&#34;测试&#34;&gt;测试&lt;/h1&gt;
&lt;p&gt;啥都没有……&lt;/p&gt;
&lt;h2 id=&#34;源码&#34;&gt;源码&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;并查集算法
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;用father数组记录每个节点的父节点，数据结构类似于树
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;关键操作：合并、查询
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;详细介绍: https://zhuanlan.zhihu.com/p/93647900
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;//P3958 奶酪: https://www.luogu.com.cn/problem/P3958
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define N 1005
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kr&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;quickRead&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;9&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;-&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;9&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;sc&#34;&gt;&amp;#39;0&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;getchar&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;f&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;typeUnionFind&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;father&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rank&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//这里rank作用是记录节点深度（真实为深度-1），采用了按秩合并的优化
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    按秩合并指将深度小的合并到深度大的树上，这样可以减少查询次数。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    这里按秩合并与路径压缩一起使用时，rank可能会因路径压缩操作而变得不准确。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    因此这里rank只是相对的判断标准，并不一定绝对会将深度小的合并到深度大的
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    */&lt;/span&gt;

    &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;father&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;father&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;?&lt;/span&gt; &lt;span class=&#34;nl&#34;&gt;node&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;father&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;father&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]));&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//这里使用了路径压缩优化
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
    &lt;span class=&#34;kr&#34;&gt;inline&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;merge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;father1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;father2&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rank&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;father1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rank&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;father2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;father&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;father1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;father2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;rank&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;father1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rank&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;father2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;father&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;father2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;father1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;father1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;father2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;father&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;father1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;father2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;rank&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;father2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//如果深度一样且父节点不一样（不为一棵树），合并后新树深度会加一
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UnionFind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;typeHole&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hole&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;ifIntersect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;typeHole&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hole1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;typeHole&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hole2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hole1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hole2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hole1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hole2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hole1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hole2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hole1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hole2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hole1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hole2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hole1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hole2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%lld&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;T&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d%lld%lld&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;UnionFind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;init&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;UnionFind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;father&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1001&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1001&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UnionFind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;father&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1002&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1002&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//这里用特殊的两个节点，1001代表底，1002代表顶。如果father[1001]==father[1002]则证明连通。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UnionFind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%lld%lld%lld&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hole&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hole&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;y&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hole&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hole&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;UnionFind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;merge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1001&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hole&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;z&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;UnionFind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;merge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1002&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UnionFind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UnionFind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;num&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ifIntersect&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;hole&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;hole&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
                    &lt;span class=&#34;n&#34;&gt;UnionFind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;merge&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;UnionFind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1001&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;UnionFind&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1002&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;Yes&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;No&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;WA 1st:
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;没考虑到只有一个洞以及贯穿的情况……
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;修改:
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;1. merge(i,1001) ---&amp;gt; mergr(1001,i)
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    实际上完全没必要，因为无论前并后还是后并前，最终都是父节点合并……
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;2. if (hole.z&amp;lt;=r) ... else if (hole.z&amp;gt;=h-r) ...; ---&amp;gt; if ...; if ...;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    当时想着要么是底部相交要么是顶部相交，导致用了个else if，没考虑到直接贯穿的情况……
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;WA 2nd:
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;long long！！！！……
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;*/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>线段树……</title>
        <link>https://blog.supersassw.com/p/segment-tree/</link>
        <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/segment-tree/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/segment-tree/67957130_p0.png" alt="Featured image of post 线段树……" /&gt;&lt;h1 id=&#34;简介&#34;&gt;简介&lt;/h1&gt;
&lt;p&gt;是一种用来维护 &lt;strong&gt;区间信息&lt;/strong&gt; 的数据结构。&lt;/p&gt;
&lt;p&gt;可以实现的操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单点、区间修改&lt;/li&gt;
&lt;li&gt;区间查询（区间求和、最大值、最小值）&lt;/li&gt;
&lt;li&gt;等等&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;描述&#34;&gt;描述&lt;/h1&gt;
&lt;p&gt;线段树会将一个非点区间（即长度大于$1$）利用&lt;strong&gt;递归&lt;/strong&gt;的思想，&lt;strong&gt;二分&lt;/strong&gt;为两个子区间来进行操作。&lt;br&gt;
这样就会将一个线段划分转化成一个树形结构。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;./Picture/seg-description.png&#34; alt=&#34;线段树描述&#34;  /&gt;&lt;br&gt;
其中：紫色的&lt;code&gt;a[]&lt;/code&gt;是原数组，红色的&lt;code&gt;d[]&lt;/code&gt;是线段树：存储的区间的和，黄色范围代表管辖区间。&lt;/p&gt;
&lt;p&gt;每个节点会存储并维护其所管辖的区间的当前信息。（如上图存的就是区间的和）&lt;br&gt;
可根据题目要求，确定自己所需存储维护的信息。&lt;/p&gt;
&lt;h1 id=&#34;实现方法&#34;&gt;实现方法&lt;/h1&gt;
&lt;h2 id=&#34;提前的宏定义&#34;&gt;提前的宏定义&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#define NOW_Node node[index]		&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//代表当前节点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define NOW_LSon node[index].sonL	&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//代表当前节点左儿子下标
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define NOW_RSon node[index].sonR	&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//代表当前节点右儿子下标
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x00-建树&#34;&gt;0x00 建树&lt;/h2&gt;
&lt;h3 id=&#34;基本认识&#34;&gt;基本认识&lt;/h3&gt;
&lt;p&gt;根据上图可发现几个要点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;每一个节点&lt;code&gt;i&lt;/code&gt;的左儿子下标是&lt;code&gt;2i&lt;/code&gt;，右儿子下标是&lt;code&gt;2i+1&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;记：&lt;code&gt;i&lt;/code&gt;管辖的区间为$[s,t]$。&lt;br&gt;
令：$mid=\frac{s+t}{2}$。&lt;br&gt;
则左儿子&lt;code&gt;2i&lt;/code&gt;管辖区间为$[s,mid]$，右儿子&lt;code&gt;2i+1&lt;/code&gt;管辖区间为$[mid+1,t]$。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;实现方法-1&#34;&gt;实现方法&lt;/h3&gt;
&lt;p&gt;之前已经介绍了递归的思想，那么只需要确定递归边界。&lt;br&gt;
由上图很容易看出，递归边界就是当长度为$1$的点。&lt;/p&gt;
&lt;p&gt;记：当前点为&lt;code&gt;node[index]&lt;/code&gt;，代表区间为$[l,r]$。原数组为&lt;code&gt;arr[]&lt;/code&gt;&lt;br&gt;
当$l=r$的时候，说明到达递归边界，这个时候的值直接为对应区间的值。&lt;br&gt;
也就是&lt;code&gt;node[index] = arr[r]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;因为二分的操作使得递归的深度不会大于$log(n)$，故完全可以采用递归的方式简化代码，不用担心递归的栈溢出等缺点。&lt;/p&gt;
&lt;h3 id=&#34;储存方法&#34;&gt;储存方法&lt;/h3&gt;
&lt;h4 id=&#34;方法1&#34;&gt;方法1、&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;typeNode&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//val代表储存的值，L、R分别代表区间左、右端点，mid代表区间中点，len代表区间长度
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;直接用左儿子下标为&lt;code&gt;2i&lt;/code&gt;，右儿子下标为&lt;code&gt;2i+1&lt;/code&gt;转递。&lt;br&gt;
函数为&lt;code&gt;build(int index, int l, int r)&lt;/code&gt;，建左儿子用则为&lt;code&gt;build(2*i, l, r)&lt;/code&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;空间范围：&lt;strong&gt;反正直接把长度设置为$4n$。&lt;/strong&gt;&lt;br&gt;
因为该线段树深度为$\lceil log(n) \rceil$，又因为为完全二叉树，总节点个数为$2^{\lceil log(n) \rceil +1}-1$。但建树的时候最后一层不一定从左往右建，也可能很右边会有一个，所以要预留出所有的最后一层的节点位置，即开$4N$。&lt;br&gt;
具体分析见&lt;a class=&#34;link&#34; href=&#34;https://zhuanlan.zhihu.com/p/65943900&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;关于线段树的数组到底是开2N还是4N&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;方法2&#34;&gt;方法2、&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;typeNode&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sonL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sonR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//多了个sonL和sonR，代表左儿子的index和右儿子的index
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;build()&lt;/code&gt;的时候需要多一个计数器变量&lt;code&gt;cnt&lt;/code&gt;，记录总过有多少节点。&lt;br&gt;
函数为&lt;code&gt;build(int &amp;amp;index, int l, int r)&lt;/code&gt;。其中传引用会在伪代码中解释。&lt;br&gt;
这里多存了个左儿子和右儿子的下标，使得可以保证从按顺序建，不会出现空间浪费，于是可以开$2N$。&lt;br&gt;
相较于方法2空间消耗会少一点。&lt;/p&gt;
&lt;p&gt;以下采用“方法2”的方式来储存。&lt;/p&gt;
&lt;h3 id=&#34;伪代码&#34;&gt;伪代码&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;typeSegment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//记录node节点的数量，便可实现按顺序建树
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;typeNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sonL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sonR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//对区间[L,R]建立节点，下标为index
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;cm&#34;&gt;/*引用index的原因：
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		这里因为引用index，在递归时会直接把seg[index].son_赋值为某儿子的index。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		*/&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//节点基本信息
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//为递归边界，直接为对应区间的值
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_LSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
			&lt;span class=&#34;c1&#34;&gt;//划分建立左区间，注意这里传的index是sed[index].lson
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_RSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
			&lt;span class=&#34;c1&#34;&gt;//划分建立右区间
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_LSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_RSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;c1&#34;&gt;//计算该区间信息
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Segment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//直接用个总结构体，便于模板化。//其实就是个个人癖好orz……
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x01-区间查询&#34;&gt;0x01 区间查询&lt;/h2&gt;
&lt;p&gt;对区间进行值的条件查询，如对区间$[L,R]$求总和，求区间最值等操作。&lt;/p&gt;
&lt;h3 id=&#34;实现方法-2&#34;&gt;实现方法&lt;/h3&gt;
&lt;p&gt;将要查询的区间，拆成几个在&lt;strong&gt;其范围里的节点&lt;/strong&gt;的区间进行求解计算。（类似于分块思想）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果当前区间&lt;strong&gt;完全在查询区间的范围里&lt;/strong&gt;，则直接返回这个区间的值。&lt;/li&gt;
&lt;li&gt;如果不是，则分别查询左右区间计算最终值。
&lt;ul&gt;
&lt;li&gt;如果&lt;strong&gt;查询区间的左端点&lt;/strong&gt;小于等于&lt;strong&gt;当前区间中点&lt;/strong&gt;，则查询范围会存在于左儿子区间里，要查询左儿子。&lt;/li&gt;
&lt;li&gt;如果&lt;strong&gt;查询区间的右端点&lt;/strong&gt;大于&lt;strong&gt;当前区间中点&lt;/strong&gt;，则查询范围会存在于右儿子区间里，要查询右儿子。
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 注意：这里为大于！因为中点是算在左区间里的！…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;【直接给代码吧ヾ(•ω•`)o……&lt;/p&gt;
&lt;h3 id=&#34;伪代码-1&#34;&gt;伪代码&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q_L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q_R&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;c1&#34;&gt;//当前区间直接在查询区间里，直接返回值
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//【我查了，一句返回了，有什么好说的……
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	
	&lt;span class=&#34;c1&#34;&gt;//↓ 不完全包含于查询区间里，就要查询两子区间的值计算
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmpAns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q_L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmpAns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_LSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;c1&#34;&gt;//如果要查询区间左端点，比当前区间的中点还大，证明左儿子区间完全不在
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q_R&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmpAns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_RSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//为&amp;gt;，不是&amp;gt;=
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmpAns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;0x02-区间修改&#34;&gt;0x02 区间修改&lt;/h2&gt;
&lt;p&gt;对区间进行值的修改，如区间$[L,R]$加上或乘上一个数。&lt;/p&gt;
&lt;h3 id=&#34;最初实现方法&#34;&gt;(最初)实现方法&lt;/h3&gt;
&lt;p&gt;跟查询的方法一样，找到对应区间后直接修改值。&lt;/p&gt;
&lt;p&gt;但注意，如果不是长度为1的区间，值的修改要&lt;strong&gt;乘上对应修改区间的长度&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;比如对$[1,2]$这个区间加上$2$。&lt;/p&gt;
&lt;p&gt;$[1,1]$和$[2,2]$这两个子区间会加$2$。&lt;br&gt;
但$[1,2]$则个大的区间应该加的就是$4$。&lt;/p&gt;
&lt;p&gt;同理，$[1,4]$这个大区间就该加$8$了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;缺点分析&#34;&gt;缺点分析&lt;/h3&gt;
&lt;p&gt;【诶我说停停，先别着急写啊，不要啪的一下就写起来了很快啊……&lt;/p&gt;
&lt;p&gt;如果碰上这样的情况：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;对区间$[1,10000]$加上$10000$次$233$。&lt;/li&gt;
&lt;li&gt;查询区间$[23333,23333]$的值。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;怎么样，有没有觉得自己被耍了！&lt;/p&gt;
&lt;p&gt;所以如果当老实人，他让我们修改区间，我们就老老实实修改区间，可是要吃大亏的。【指TLE……&lt;/p&gt;
&lt;h3 id=&#34;改进方法&#34;&gt;改进方法&lt;/h3&gt;
&lt;p&gt;所以他耍我们，我们也耍一下他xd。&lt;/p&gt;
&lt;p&gt;不是让我们对区间修改吗，我们就先偷下懒：不老老实实地全部修改完，&lt;strong&gt;只做个记号&lt;/strong&gt;在那。&lt;br&gt;
等到他让我们&lt;strong&gt;真正查询&lt;/strong&gt;这个区间的时候，我们也才&lt;strong&gt;真正的去修改&lt;/strong&gt;，并返回查询值。【并且注意lazy清零！……&lt;/p&gt;
&lt;p&gt;这便是&lt;code&gt;lazy&lt;/code&gt;懒标记的由来。&lt;/p&gt;
&lt;p&gt;但我们该怎么偷懒呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如果当前区间&lt;strong&gt;完全在修改区间的范围里&lt;/strong&gt;，我们便可以按分析的那样，先把修改的值加到&lt;code&gt;lazy&lt;/code&gt;里。等之后有需要再去真正地修改，即“下放lazy”。&lt;/li&gt;
&lt;li&gt;如果不是，这里就需要注意，我们再直接加到lazy标记的话，有些明明不该修改的区间就会被修改。所以这里的懒就偷不得，就要真正的修改当前节点的值，并尝试修改子节点。（但如果儿子可以偷懒，就让儿子去偷懒）
&lt;ul&gt;
&lt;li&gt;如果&lt;strong&gt;修改区间的左端点&lt;/strong&gt;大于&lt;strong&gt;当前区间中点&lt;/strong&gt;，则不会修改左儿子区间。&lt;/li&gt;
&lt;li&gt;如果&lt;strong&gt;修改区间的右端点&lt;/strong&gt;小于等于&lt;strong&gt;当前区间中点&lt;/strong&gt;，则不会修改右儿子区间。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;伪代码-2&#34;&gt;伪代码&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;区间修改：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;typeNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lazy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//这里多定义个lazy，用来存偷懒没修改的值
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;modify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lazy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//当前区间完全在范围里，直接偷懒
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	
		&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		这里是修改所包含区间的值
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		如要修改[4,9]，当前节点区间是(1,6)	//这里为了区分用的小括号，实际上包含端点
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		则只会修改[4,6)，也就是val += (6 - 4 + 1) * 2
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;		*/&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;modify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_LSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_R&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;modify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_RSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;有lazy的区间查询：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;typeNode&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;

	&lt;span class=&#34;p&#34;&gt;...&lt;/span&gt;

	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;pushdown&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;typeSegment&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Segment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//下放也不用太彻底，能摸一层是一层xd……
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lazy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sonL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Segment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sonL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lazy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;c1&#34;&gt;//存在子节点才下放【不然我这种结构就会无限下放_(:з」∠)_……
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sonR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Segment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sonR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lazy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;lazy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//！lazy注意清零！
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lazy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pushdown&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//注意查询的时候，只要有懒标记就必下放【别人都来查岗了你还摸鱼.jpg……
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q_L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;		&lt;span class=&#34;c1&#34;&gt;//以下跟普通的查询操作一样
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmpAns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q_L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmpAns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_LSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q_R&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmpAns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_RSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmpAns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Tip: 我这里的偷懒是直接连本身都先不修改，而在下放的时候才修改；其他人有些可能会先修改自身。算是个小优化，注意区分一下……&lt;/p&gt;
&lt;h1 id=&#34;最终代码&#34;&gt;最终代码&lt;/h1&gt;
&lt;p&gt;洛谷P3372 &lt;a class=&#34;link&#34; href=&#34;https://www.luogu.com.cn/problem/P3372&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【模板】线段树 1&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define N 100000
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;
&lt;span class=&#34;cp&#34;&gt;#define NOW_Node node[index]	  &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//代表当前节点
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define NOW_LSon node[index].sonL &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//代表当前节点左儿子下标
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#define NOW_RSon node[index].sonR &lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//代表当前节点右儿子下标
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;typeSegment&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//记录node节点的数量，便可实现按顺序建树
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;typeNode&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sonL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sonR&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lazy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

		&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;pushdown&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;typeSegment&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Segment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//下放也不用太彻底，左右儿子仍加到lazy里。【能摸一层是一层xd……
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lazy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sonL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
				&lt;span class=&#34;n&#34;&gt;Segment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sonL&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lazy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//存在子节点才下放【不然我这种结构就会无限下放
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sonR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
				&lt;span class=&#34;n&#34;&gt;Segment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;sonR&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;lazy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;lazy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//lazy注意清零。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//对区间[l,r]建立节点，下标为index
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;index&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cnt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;c1&#34;&gt;//引用原因：
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;c1&#34;&gt;//这里因为引用index的原因，在递归时会直接把seg[index].lson赋值为左儿子的index。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;len&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;c1&#34;&gt;//节点基本信息
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//为递归边界，直接为对应区间的值
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_LSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
			&lt;span class=&#34;c1&#34;&gt;//划分建立左区间，注意这里传的index是sed[index].lson
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_RSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
			&lt;span class=&#34;c1&#34;&gt;//划分建立右区间
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_LSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_RSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;c1&#34;&gt;//计算该区间信息
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;kt&#34;&gt;void&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;modify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lazy&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//当前区间完全在范围里，直接偷懒。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
			&lt;span class=&#34;cm&#34;&gt;/*
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;			这里是修改所包含区间的值
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;			如要修改[4,9]，当前节点区间是(1,6)	//这里为了区分用的小括号，实际上包含端点
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;			则只会修改[4,6)，也就是val += (6 - 4 + 1) * 2
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;			*/&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
				&lt;span class=&#34;n&#34;&gt;modify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_LSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m_R&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
				&lt;span class=&#34;n&#34;&gt;modify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_RSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m_val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

	&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;index&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lazy&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//注意查询的时候，只要有懒标记就必下放【别人都来查岗了你还摸鱼.jpg……
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;			&lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;pushdown&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;this&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q_L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;R&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;val&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;c1&#34;&gt;//当前区间直接在查询区间里，直接返回值//【我查了，一句返回了，有什么好说的……
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
		&lt;span class=&#34;c1&#34;&gt;//↓ 不完全包含于查询区间里，就要查询两子区间的值计算
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmpAns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q_L&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;tmpAns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_LSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;c1&#34;&gt;//如果要查询区间左端点，比当前区间的中点还大，证明左儿子区间完全不在
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;q_R&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;NOW_Node&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;tmpAns&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;NOW_RSon&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q_L&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;q_R&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmpAns&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Segment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//直接用个大的结构体，便于模板化。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;cin&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%lld&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;arr&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;Segment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;build&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;c1&#34;&gt;//Segment.test(1);
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;m&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;w&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d%d%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;Segment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;modify&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
			&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%lld&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Segment&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;query&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;l&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;r&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;));&lt;/span&gt;
		&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
        </item>
        <item>
        <title>音乐播放器测试……</title>
        <link>https://blog.supersassw.com/p/test-player/</link>
        <pubDate>Sat, 19 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/test-player/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/test-player/84038692_p0.jpg" alt="Featured image of post 音乐播放器测试……" /&gt;&lt;h1 id=&#34;音乐播放器&#34;&gt;音乐播放器&lt;/h1&gt;
&lt;p&gt;采用的APlayer的外链播放器……&lt;/p&gt;
&lt;p&gt;默认会显示在文章顶部……&lt;/p&gt;
&lt;p&gt;如需用吸底模式，请在第一个参数输入&lt;code&gt;-fixed: 1&lt;/code&gt;……&lt;/p&gt;
&lt;p&gt;当然要放我最喜欢的怪力熊的歌啦！……&lt;br&gt;
【虽然网易云上没有原曲qwq……不过这两首也超好听的！……&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Shortcode测试……</title>
        <link>https://blog.supersassw.com/p/test-shortcode/</link>
        <pubDate>Fri, 18 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/test-shortcode/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/test-shortcode/78356827_p0.jpg" alt="Featured image of post Shortcode测试……" /&gt;&lt;h1 id=&#34;shortcode&#34;&gt;Shortcode&lt;/h1&gt;
&lt;p&gt;Hugo的Shortcode的测试……&lt;/p&gt;
&lt;p&gt;新增了Bilibili的链接……&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;不知道是什么的原文x：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hugo ships with several &lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/content-management/shortcodes/#use-hugo-s-built-in-shortcodes&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Built-in Shortcodes&lt;/a&gt; for rich content, along with a &lt;a class=&#34;link&#34; href=&#34;https://gohugo.io/about/hugo-and-gdpr/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Privacy Config&lt;/a&gt; and a set of Simple Shortcodes that enable static and no-JS versions of various social media embeds.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;详解&#34;&gt;详解&lt;/h2&gt;
&lt;p&gt;使用方法类似于&lt;code&gt;Hexo&lt;/code&gt;当中的&lt;a class=&#34;link&#34; href=&#34;https://hexo.bootcss.com/docs/tag-plugins.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;标签插件（Tag Plugins）&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有两种Shortcode的使用方法……&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;内嵌Shortcode&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;kd&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;content&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Shortcode块&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-py&#34; data-lang=&#34;py&#34;&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt; 
&lt;span class=&#34;n&#34;&gt;content&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; \&lt;span class=&#34;nb&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;对于内容的解析也有两种方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;内容解析为HTML&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;内容解析为Markdown&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;...&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;em&gt;一般这个不常用，个人自写的所有Shotrcode都是基于&lt;code&gt;&amp;lt;&amp;gt;&lt;/code&gt;来处理的……&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;功能测试&#34;&gt;功能测试&lt;/h2&gt;
&lt;h2 id=&#34;youtube-privacy-enhanced-shortcode&#34;&gt;YouTube Privacy Enhanced Shortcode&lt;/h2&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe loading=&#34;lazy&#34; src=&#34;https://www.youtube.com/embed/u7L-grhaV5I&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;需要科学上网才能查看……&lt;/em&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;bilibili-simple-shortcode&#34;&gt;Bilibili Simple Shortcode&lt;/h2&gt;
&lt;div class=&#34;bilibili-player&#34;style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
	&lt;iframe loading=&#34;lazy&#34; src=&#34;https://player.bilibili.com/player.html?bvid=BV1754y1R7Nd&amp;high_quality=1&amp;page=1&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;Bilibili Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;p&#34;&gt;{{&amp;lt;&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;bilibili&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;BV1754y1R7Nd&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;&amp;gt;}}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;默认为BV号。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可选参数：
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;av = &amp;quot;...&amp;quot;&lt;/code&gt;：使用av号。&lt;br&gt;
使用例：&lt;code&gt;{{&amp;lt; bilibli av=&amp;quot;10492&amp;quot; &amp;gt;}}&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hq = *&lt;/code&gt;：画质。0为低画质，1为高画质。（默认值为1）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;p = *&lt;/code&gt;：视频选集。（默认值为1）
&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 如果使用参数，则使用方式只能为&lt;code&gt;{{&amp;lt; bilibili bv=... p=1 hq=1 &amp;gt;}}&lt;/code&gt; &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>页面测试……</title>
        <link>https://blog.supersassw.com/p/test-chinese/</link>
        <pubDate>Fri, 18 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/test-chinese/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/test-chinese/Yande-331204.png" alt="Featured image of post 页面测试……" /&gt;&lt;h2 id=&#34;正文测试&#34;&gt;正文测试&lt;/h2&gt;
&lt;p&gt;而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。&lt;/p&gt;
&lt;p&gt;奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。&lt;/p&gt;
&lt;h2 id=&#34;引用&#34;&gt;引用&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;思念是最暖的忧伤像一双翅膀&lt;br&gt;
让我停不了飞不远在过往游荡&lt;br&gt;
不告而别的你 就算为了我着想&lt;br&gt;
这么沉痛的呵护 我怎么能翱翔&lt;/p&gt;
&lt;p&gt;&lt;em&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=3aypp_YlBzI&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;最暖的憂傷 - 田馥甄&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;图片&#34;&gt;图片&lt;/h2&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 66; flex-basis: 160px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/test-chinese/florian-klauer-nptLmg6jqDo-unsplash.jpg&#34; data-size=&#34;667x1000&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/test-chinese/florian-klauer-nptLmg6jqDo-unsplash.jpg&#34;
				srcset=&#34;https://blog.supersassw.com/p/test-chinese/florian-klauer-nptLmg6jqDo-unsplash_hu595aaf3b3dbbb41af5aed8d3958cc9f9_13854_480x0_resize_q75_box.jpg 480w, https://blog.supersassw.com/p/test-chinese/florian-klauer-nptLmg6jqDo-unsplash_hu595aaf3b3dbbb41af5aed8d3958cc9f9_13854_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;667&#34;
				height=&#34;1000&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Photo by Florian Klauer on Unsplash&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Photo by Florian Klauer on Unsplash&lt;/figcaption&gt;
		
	&lt;/figure&gt;  &lt;figure style=&#34;flex-grow: 149; flex-basis: 359px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/test-chinese/luca-bravo-alS7ewQ41M8-unsplash.jpg&#34; data-size=&#34;1000x667&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/test-chinese/luca-bravo-alS7ewQ41M8-unsplash.jpg&#34;
				srcset=&#34;https://blog.supersassw.com/p/test-chinese/luca-bravo-alS7ewQ41M8-unsplash_hu0a3f1163de68d0b9471979ebf0ecf11e_32400_480x0_resize_q75_box.jpg 480w, https://blog.supersassw.com/p/test-chinese/luca-bravo-alS7ewQ41M8-unsplash_hu0a3f1163de68d0b9471979ebf0ecf11e_32400_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;1000&#34;
				height=&#34;667&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Photo by Luca Bravo on Unsplash&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Photo by Luca Bravo on Unsplash&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;figure style=&#34;flex-grow: 133; flex-basis: 320px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash.jpg&#34; data-size=&#34;1000x750&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash.jpg&#34;
				srcset=&#34;https://blog.supersassw.com/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_480x0_resize_q75_box.jpg 480w, https://blog.supersassw.com/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu45a5e3ad5e058da6a00650ed8fd40bea_15530_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;1000&#34;
				height=&#34;750&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Photo by Helena Hertz on Unsplash&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Photo by Helena Hertz on Unsplash&lt;/figcaption&gt;
		
	&lt;/figure&gt;  &lt;figure style=&#34;flex-grow: 66; flex-basis: 160px&#34;&gt;
		&lt;a href=&#34;https://blog.supersassw.com/p/test-chinese/hudai-gayiran-3Od_VKcDEAA-unsplash.jpg&#34; data-size=&#34;667x1000&#34;&gt;&lt;img src=&#34;https://blog.supersassw.com/p/test-chinese/hudai-gayiran-3Od_VKcDEAA-unsplash.jpg&#34;
				srcset=&#34;https://blog.supersassw.com/p/test-chinese/hudai-gayiran-3Od_VKcDEAA-unsplash_hub241c2a9c7a2caf7e16a2a5bbc7141ff_18711_480x0_resize_q75_box.jpg 480w, https://blog.supersassw.com/p/test-chinese/hudai-gayiran-3Od_VKcDEAA-unsplash_hub241c2a9c7a2caf7e16a2a5bbc7141ff_18711_1024x0_resize_q75_box.jpg 1024w&#34;
				width=&#34;667&#34;
				height=&#34;1000&#34;
				loading=&#34;lazy&#34;
				alt=&#34;Photo by Hudai Gayiran on Unsplash&#34;&gt;
		&lt;/a&gt;
		
		&lt;figcaption&gt;Photo by Hudai Gayiran on Unsplash&lt;/figcaption&gt;
		
	&lt;/figure&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;![&lt;span class=&#34;nt&#34;&gt;Photo by Florian Klauer on Unsplash&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;florian-klauer-nptLmg6jqDo-unsplash.jpg&lt;/span&gt;)  ![&lt;span class=&#34;nt&#34;&gt;Photo by Luca Bravo on Unsplash&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;luca-bravo-alS7ewQ41M8-unsplash.jpg&lt;/span&gt;) 

![&lt;span class=&#34;nt&#34;&gt;Photo by Helena Hertz on Unsplash&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;helena-hertz-wWZzXlDpMog-unsplash.jpg&lt;/span&gt;)  ![&lt;span class=&#34;nt&#34;&gt;Photo by Hudai Gayiran on Unsplash&lt;/span&gt;](&lt;span class=&#34;na&#34;&gt;hudai-gayiran-3Od_VKcDEAA-unsplash.jpg&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;相册语法来自 &lt;a class=&#34;link&#34; href=&#34;https://typlog.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Typlog&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>邻项比较排序……</title>
        <link>https://blog.supersassw.com/p/neighbor-sort/</link>
        <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/neighbor-sort/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/neighbor-sort/71111285_p0.png" alt="Featured image of post 邻项比较排序……" /&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 以下为之前的笔记直接放过来的，部分样式会有错误（如KaTeX没有渲染等）…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;邻项比较排序&#34;&gt;邻项比较排序&lt;/h1&gt;
&lt;h2 id=&#34;定义&#34;&gt;定义&lt;/h2&gt;
&lt;p&gt;本来的排序型贪心，我们需要&lt;strong&gt;任意两个项都满足决策条件&lt;/strong&gt;。&lt;br&gt;
但我们发现，如果数列每对&lt;strong&gt;相邻两项都满足决策条件&lt;/strong&gt;，根据&lt;strong&gt;不等式的传递性&lt;/strong&gt;，那么也就可以推出任意两项满足决策条件。&lt;/p&gt;
&lt;p&gt;于是我们分析决策条件时，就不用分析任意两项，可以就分析邻项然后推出决策条件。&lt;/p&gt;
&lt;p&gt;【主要用于如果决策条件复合了其他数据（比如：结果计算为$\sum_{i=1}^na_i$，复合之前的数列），这样分析可以减少分析难度】&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;典型例题：&lt;br&gt;
P1080 &lt;a class=&#34;link&#34; href=&#34;https://www.luogu.com.cn/problem/P1080&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;国王游戏&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;可以见到这题便有一个「排在&lt;strong&gt;该大臣前面的&lt;/strong&gt;所有人的左手上的数的乘积」这句话，&lt;br&gt;
如果我们分析任意两项的话，还要考虑两者中间的数据。&lt;/p&gt;
&lt;p&gt;所以我们可以指通过分析相邻两项，然后通过传递性，推及任意两项都满足。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;【其实用任意两项分析也完全可以，而且分析也不难_(:з」∠)_……&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么实现的关键就是&lt;strong&gt;找到最终的决策方案&lt;/strong&gt;（序列满足的条件），然后根据这个决策&lt;code&gt;sort&lt;/code&gt;就行了_(:з」∠)_……&lt;br&gt;
【但是会有注意点后面会讲到……&lt;/p&gt;
&lt;h2 id=&#34;题目解决方法&#34;&gt;题目解决方法&lt;/h2&gt;
&lt;h3 id=&#34;引例&#34;&gt;引例&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;以下以此例题为例具体讲解：&lt;br&gt;
SWJTU OJ——10.31 A &lt;a class=&#34;link&#34; href=&#34;https://oj.swjtu.edu.cn/contest/23/problem/A&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;排队&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;题目与国王游戏类似，用邻项交换排序的思想来找&lt;strong&gt;决策条件&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;1找出每种状态的ans选邻项代入&#34;&gt;1、找出每种状态的&lt;code&gt;ans&lt;/code&gt;，选邻项代入&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;题目描述：&lt;br&gt;
也就是说，请重新给班尼特排队，要求是最大化$\min_{i=1}^n{-h_i+\sum_{j=1}^i v_j}$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么每种状态的&lt;code&gt;ans&lt;/code&gt;$=\min_{i=1}^nw_i$。&lt;/p&gt;
&lt;p&gt;既然要求$\min_{i=1}^n{w_i}$，所以我们就比较邻项的$w_i,w_j$，比较其两项的$\min(w_i,w_j)$，选择最大&lt;code&gt;ans&lt;/code&gt;的状态。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;为什么我们这样排序，能使&lt;code&gt;ans&lt;/code&gt;$=\min_{i=1}^nw_i$取得最小？
&lt;blockquote&gt;
&lt;p&gt;就相当于把比较时候的最小值看成短板，每次比较一次选最高的那个，就会把短板提上去一点，这样最后得到的就是最高的短板，也就是最大的$\min$……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2假设相邻位置写出两种状态的ans&#34;&gt;2、假设相邻位置，写出两种状态的&lt;code&gt;ans&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;我们首先要把每个位置的&lt;strong&gt;收益表达式&lt;/strong&gt;写出来：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;题目描述：治疗第$i$个班尼特的收益$w_i$等于前面治疗的所有班尼特的$v$之和减去$h_i$。
$$
w_i=\sum_{j=1}^iv_j-h_i
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么我们&lt;strong&gt;假设两个相邻位置&lt;/strong&gt;$i,j$。其中$i$在$j$前，即$i=j-1$。【必须先假设一个在另一个前后，否则不可能$i$在$j$前满足，$j$在$i$前也满足】&lt;br&gt;
记：两者之前的$\sum v$为$sum$。【将一些求$w$要用到的比如$\sum$记为其他符号表示，可以简化式子】&lt;/p&gt;
&lt;p&gt;然后分别讨论$i$在$j$前和$j$在$i$前的情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;原本状态：$i$在$j$前&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$$
\begin{matrix}
h &amp;amp; v \&lt;br&gt;
\vdots &amp;amp; \vdots(sum) \&lt;br&gt;
h_i &amp;amp; v_i \&lt;br&gt;
h_j &amp;amp; v_j \&lt;br&gt;
\vdots &amp;amp; \vdots \&lt;br&gt;
\end{matrix}
$$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对$i$的收益：$w_{i1}=sum+v_i-h_i$&lt;br&gt;
对$j$的收益：$w_{j1}=sum+v_i+v_j-h_j$&lt;br&gt;
此状态的&lt;code&gt;ans&lt;/code&gt;=$\min(w_{i1},w_{j1})$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果交换：$j$在$i$前&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$
\begin{matrix}
h &amp;amp; v \&lt;br&gt;
\vdots &amp;amp; \vdots(sum) \&lt;br&gt;
h_j &amp;amp; v_j \&lt;br&gt;
h_i &amp;amp; v_i \&lt;br&gt;
\vdots &amp;amp; \vdots \&lt;br&gt;
\end{matrix}
$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;对$i$的收益：$w_{i2}=sum+v_j+v_i-h_i$，&lt;br&gt;
对$j$的收益：$w_{j2}=sum+v_j-h_j$&lt;br&gt;
此状态的&lt;code&gt;ans&lt;/code&gt;=$\min(w_{i2},w_{j2})$&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3根据题意写出排序条件并化简得到最终决策方案&#34;&gt;3、根据题意写出排序条件并化简，得到最终决策方案&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;题目描述：芭芭拉想让治疗每个班尼特收益的最小值最大。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;题意要求使&lt;strong&gt;最小收益最大化&lt;/strong&gt;，&lt;br&gt;
则&lt;strong&gt;最初排序条件&lt;/strong&gt;为：$\min(w_{i1},w_{j1})\ge\min(w_{j2},w_{i2})$&lt;br&gt;
【或者说**交换条件**为：$\text{if} \quad (\min(w_{i1},w_{j1})&amp;lt;\min(w_{j2},w_{i2})) \quad \text{swap}(i,j)$】&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;*其他例子：国王游戏中，是使&lt;strong&gt;最大收益最小化&lt;/strong&gt;。则排序条件为：$\max(w_{i1},w_{j1})\le\max(w_{i2},w_{j2})$*&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后对这个决策条件&lt;strong&gt;化简&lt;/strong&gt;，使得能直接表达出来。&lt;br&gt;
【所谓不能直接表达的，便是条件中含有如$\sum$之类的运算。而我们不可能用循环专门去求，只能通过化简把他消掉】&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;化简方法：&lt;/p&gt;
&lt;p&gt;下列所提到的化简方法参考&lt;a class=&#34;link&#34; href=&#34;../../../Part%209%20Others/%e5%90%abmax%e3%80%81min%e7%9a%84%e4%b8%8d%e7%ad%89%e5%bc%8f.md&#34; &gt;含max、min的不等式&lt;/a&gt;。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;利用“&lt;strong&gt;完全展开法则&lt;/strong&gt;”，观察是否含有&lt;strong&gt;恒成立或恒不成立&lt;/strong&gt;。&lt;br&gt;
【或者直接观察题目中$w_{i1},w_{j1},w_{j2},w_{i2}$间的关系，找出恒成立或恒不成立，然后利用“**消元法则**”】&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;利用排序规则下特殊的“&lt;strong&gt;相同无关原则&lt;/strong&gt;”，结合“&lt;strong&gt;取反性&lt;/strong&gt;、&lt;strong&gt;结合性&lt;/strong&gt;”等性质，化简并得到最终的最简决策&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;则本题中：&lt;br&gt;
展开为$\text{if} \quad ((w_{i1}&amp;lt;w_{i2} &amp;amp; w_{i1}&amp;lt;w_{j2}) | (w_{j1}&amp;lt;w_{i2} &amp;amp; w_{j1}&amp;lt;w_{j2})) \quad \text{swap}$。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;发现$w_{i1}&amp;lt;w_{i2}$恒成立：
&lt;blockquote&gt;
&lt;p&gt;$\sout{sum+v_i-h_i} \quad?\quad \sout{sum}+v_j\sout{+v_i-h_i}$&lt;br&gt;
$\implies 0&amp;lt;v_j$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;发现$w_{j1}&amp;lt;w_{j2}$恒不成立：
&lt;blockquote&gt;
&lt;p&gt;$\sout{sum}+v_i\sout{+v_j-h_j} \quad?\quad \sout{sum+v_j-h_j}$&lt;br&gt;
$\implies v_i&amp;gt;0$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;故原式可简化为：&lt;br&gt;
$\text{if} \quad (w_{i1}&amp;lt;w_{j2}) \quad \text{swap}$&lt;br&gt;
$\implies \text{if} \quad (v_i-h_i &amp;lt; v_j-h_j) \quad \text{swap}$&lt;br&gt;
这便是化简后的**决策条件**。&lt;/p&gt;
&lt;hr&gt;


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;注意的点：&lt;/p&gt;
&lt;p&gt;不一定要化到最简，只要能在代码里直接表达就行。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;本题中原始条件经过部分化简：&lt;br&gt;
&lt;img src=&#34;./pic/raw_case.png&#34; alt=&#34;raw_case&#34;&gt;&lt;br&gt;
运行结果：&lt;br&gt;
&lt;img src=&#34;./pic/raw_result.png&#34; alt=&#34;raw_result&#34;&gt;&lt;/p&gt;
&lt;p&gt;而完全化简后为：&lt;br&gt;
&lt;img src=&#34;./pic/process_case.png&#34; alt=&#34;process_case&#34;&gt;&lt;br&gt;
运行结果：&lt;br&gt;
&lt;img src=&#34;./pic/process_result.png&#34; alt=&#34;process_result&#34;&gt;&lt;/p&gt;
&lt;p&gt;可见差异并不大，所以说只要能化简到能表达的地步就可以。&lt;br&gt;
当然如果能化到最简更好，肯定还是比带&lt;code&gt;min&lt;/code&gt;的条件快的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&#34;4自定义结构体重载运算符使用sort遍历寻答案&#34;&gt;4、自定义结构体，重载&lt;code&gt;&amp;lt;&lt;/code&gt;运算符，使用&lt;code&gt;sort&lt;/code&gt;，遍历寻答案&lt;/h3&gt;
&lt;p&gt;这一步就不多说了，重载的时候按自己分析到的最终最简决策重载就行。&lt;/p&gt;


&lt;div class=&#34;snote warning &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;p&gt;&lt;strong&gt;但重点是&lt;/strong&gt;：&lt;/p&gt;
&lt;p&gt;这样排序出来后&lt;strong&gt;只是最优状态&lt;/strong&gt;，&lt;br&gt;
至于&lt;strong&gt;最终答案&lt;code&gt;ans&lt;/code&gt;要从头到尾遍历寻找&lt;/strong&gt;，即不一定是第一个为最终答案。&lt;br&gt;
可能后面计算结果不是递增或递减，则最终答案不是第一个。【具体题目具体分析】&lt;/p&gt;
&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;hr&gt;
&lt;h2 id=&#34;标程代码&#34;&gt;标程代码&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;bits/stdc++.h&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;N&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;100010&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Data&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;operator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Data&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;h&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;t&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//以推出的最终最简决策重载&amp;lt;运算符
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;N&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;scanf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d%d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

	&lt;span class=&#34;n&#34;&gt;sort&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//就一个sort
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;
	&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mf&#34;&gt;1e9&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;v&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
		&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;tmp&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;d&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;].&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;h&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//从头到尾遍历，res记录最终答案
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
	&lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;%d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;res&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
	&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;使用注意事项&#34;&gt;使用注意事项&lt;/h1&gt;
&lt;p&gt;注意之前我们定义中存在一个推论：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果数列每对相邻两项都满足决策条件，&lt;strong&gt;根据不等式的传递性&lt;/strong&gt;，那么也就可以推出任意两项满足决策条件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以假如我们所推的某个决策条件，&lt;strong&gt;不满足不等式的传递性&lt;/strong&gt;，那么用这个方法就&lt;strong&gt;会造成错误&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;而这种必须要满足不等性的传递性，有个专门术语叫做“&lt;strong&gt;严格弱序&lt;/strong&gt;”。&lt;/p&gt;
&lt;h2 id=&#34;先前知识严格弱序&#34;&gt;先前知识——严格弱序&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;$X \not&amp;lt; X$（比较条件非自反性）&lt;br&gt;
意思是：$X$与$X$本身，不满足比较条件。
&lt;ul&gt;
&lt;li&gt;反例：比较条件是$a_i \ge a_j$。&lt;br&gt;
那么$X(a_i) \ge X(a_i)$满足比较条件，为$X &amp;lt; X$，故不是严格弱序。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;若$X &amp;lt; Y$，则$Y \not&amp;lt; X$（比较条件非对称性）&lt;br&gt;
意思是：$X$和$Y$比较若满足比较条件，则$Y$和$X$比较不会满足条件。
&lt;ul&gt;
&lt;li&gt;反例：比较条件是$a_i \ge a_j$。&lt;br&gt;
那么若$a_i=a_j$，$X(a_i) \ge Y(a_j)$满足条件，&lt;br&gt;
但$Y(a_j) \ge X(a_i)$也满足条件，故不是严格弱序。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;若$X &amp;lt; Y,Y &amp;lt; Z$，则$X &amp;lt; Z$（比较条件不等&lt;strong&gt;传递性&lt;/strong&gt;）&lt;br&gt;
意思是：$X$和$Y$满足比较条件，$Y$和$Z$满足比较条件，则$X$和$Y$满足比较条件。
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;反例：比较条件是$\min(a_i,b_j) \le \min(a_j,b_i)$。&lt;br&gt;
那么对于下组数据：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;$a$&lt;/th&gt;
&lt;th&gt;$b$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$i$&lt;/td&gt;
&lt;td&gt;$2$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$j$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$k$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;td&gt;$2$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;$X(\min(a_i,b_j)=1)&amp;lt;Y(\min(a_j,b_i)=1)$&lt;br&gt;
$Y(\min(a_j,b_k)=1)&amp;lt;Z(\min(a_k,b_j)=1)$&lt;br&gt;
但$X(\min(a_i,b_k)=2) \not&amp;lt; Z(\min(a_k,b_i)=1)$，故不是严格弱序。
【再次提示这里的$&amp;lt;$并不代表小于，而是代表符合比较条件的意思。】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;若$X=Y,Y=Z$，则$X=Z$（比较条件相等&lt;strong&gt;传递性&lt;/strong&gt;）&lt;br&gt;
意思同上。&lt;br&gt;
&lt;em&gt;在“ouuan”dalao的讲解种写的是$x\not&amp;lt;y,y\not&amp;lt;x,y\not&amp;lt;z,z\not&amp;lt;y$（不可比性的传递性）。我改成这样更好理解。&lt;/em&gt;&lt;br&gt;
&lt;em&gt;不过注意判断相等的方法是$x\not&amp;lt;y,y\not&amp;lt;x$这么判断的。&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;反例见下引例的「错误分析」&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;这里的$X$、$Y$、$Z$代表的是取某下标$i$、$j$后的&lt;strong&gt;决策条件的一侧元素&lt;/strong&gt;。并不一定是某一具体数据。&lt;/li&gt;
&lt;li&gt;这里的$&amp;lt;$并不代表小于的意思，而是代表&lt;strong&gt;满足比较条件&lt;/strong&gt;，那么$\not&amp;lt;$则代表不满足比较条件。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;引例-1&#34;&gt;引例&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;P2123 &lt;a class=&#34;link&#34; href=&#34;https://www.luogu.com.cn/problem/P2123&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;皇后游戏&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;按照之前的方法尝试解决&#34;&gt;按照之前的方法尝试解决&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;找出每种状态的&lt;code&gt;ans&lt;/code&gt;，选邻项代入&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;题目描述：&lt;br&gt;
她想请你来重新安排一下队伍的顺序，使得获得奖金最多的大臣，所获奖金数目尽可能的少。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可知每种状态的&lt;code&gt;ans&lt;/code&gt;$=\max_{i=1}^nw_i$。&lt;/p&gt;
&lt;p&gt;那么比较邻项$i,j$，就是$max(w_i,w_j)$。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;假设相邻位置，写出两种状态的ans&lt;/p&gt;
&lt;p&gt;首先先写收益表达式：&lt;br&gt;
$$
w_i=\max(w_{i-1},\sum_{j=1}^ia_j)+b_i
$$
【第一位的收益可以合并到这个表达式里，令$w_0=0$就可以了。】&lt;/p&gt;
&lt;p&gt;假设相邻位置$i,j$。其中$i$在$j$前，即$i=j-1$。&lt;br&gt;
记：之前的$\sum a$为$sum$，前一项的$c_{i-1}$为$pre_w$。&lt;/p&gt;
&lt;p&gt;会发现，由于$a,b&amp;gt;0$，整个收益表达式中又没出现会使收益变少的运算，故&lt;strong&gt;收益单增&lt;/strong&gt;。&lt;br&gt;
即在&lt;strong&gt;后面的&lt;/strong&gt;大臣的收益&lt;strong&gt;一定大于&lt;/strong&gt;在&lt;strong&gt;前面的&lt;/strong&gt;。&lt;br&gt;
$i$在$j$前时，则$w_j$一定大于$w_i$，所以$\max(w_i,w_j)=w_j$，可以拆开一层$\max$。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;原本状态：$i$在$j$前&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$
\begin{matrix}
a &amp;amp; b &amp;amp; c \&lt;br&gt;
\vdots(sum) &amp;amp; \vdots &amp;amp; \vdots(pre_w) \&lt;br&gt;
a_i &amp;amp; b_i &amp;amp; w_{i1} \&lt;br&gt;
a_j &amp;amp; b_j &amp;amp; w_{j1} \&lt;br&gt;
\vdots &amp;amp; \vdots &amp;amp; \vdots \&lt;br&gt;
\end{matrix}
$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;$w_{i1}=\max(pre_w,sum+a_i)+b_i$&lt;br&gt;
$w_{j1}=\max(w_{i1},sum+a_i+a_j)+b_j$&lt;br&gt;
此状态的&lt;code&gt;ans&lt;/code&gt;=$\max(w_{i1},w_{j1})=w_{j1}$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;如果交换：$j$在$i$前&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$
\begin{matrix}
a &amp;amp; b &amp;amp; c \&lt;br&gt;
\vdots(sum) &amp;amp; \vdots &amp;amp; \vdots(pre_w) \&lt;br&gt;
a_j &amp;amp; b_j &amp;amp; w_{j2} \&lt;br&gt;
a_i &amp;amp; b_i &amp;amp; w_{i2} \&lt;br&gt;
\vdots &amp;amp; \vdots &amp;amp; \vdots \&lt;br&gt;
\end{matrix}
$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;$w_{i2}=\max(w_{j2},sum+a_j+a_i)+b_i$&lt;br&gt;
$w_{j2}=\max(pre_w,sum+a_j)+b_j$&lt;br&gt;
此状态的&lt;code&gt;ans&lt;/code&gt;=$\max(w_{i2},w_{j2})=w_{i2}$&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;根据题意写出排序条件并化简，得到最终决策方案&lt;/p&gt;
&lt;p&gt;题意要求使&lt;strong&gt;最大收益最小化&lt;/strong&gt;，&lt;br&gt;
则&lt;strong&gt;排序条件&lt;/strong&gt;：$\max(w_{i1},w_{j1}) \le \max(w_{i2},w_{j2})$&lt;/p&gt;
&lt;p&gt;开始化简：&lt;br&gt;
$\max(w_{i1},w_{j1}) \le \max(w_{i2},w_{j2})$&lt;br&gt;
$\implies w_{j1} \le w_{j2}$&lt;br&gt;
$\implies \max(\sout{pre_w+b_i+b_j},\underline{sum+a_i}+b_i+\underline{b_j},\underline{sum+a_i}+a_j+\underline{b_j}) \le \max(\sout{pre_w+b_j+b_i},\underline{sum+a_j}+b_j+\underline{b_i},\underline{sum+a_j}+a_i+\underline{b_i})$&lt;br&gt;
【删除线的部分代表根据相同无关原则可以消去；下划线的部分代表根据结合性可以提出来】&lt;br&gt;
$\implies \max(b_i,a_j)+sum+a_i+b_j \le \max(b_j,a+i)+sum+a_j+b_i$&lt;br&gt;
$\implies \max(b_i,a_j)-a_j-b_i \le \max(b_j,a_i)-a_i-b_j$&lt;br&gt;
$\implies \max(-a_j,-b_i) \le \max(-a_i,-b_j)$&lt;br&gt;
$\implies -\min(a_j,b_i) \le -\min(a_i,b_j)$&lt;br&gt;
$\implies \min(a_j,b_i) &amp;gt; \min(a_i,b_j)$&lt;/p&gt;
&lt;p&gt;最终的&lt;strong&gt;决策条件&lt;/strong&gt;：$\min(a_j,b_i) &amp;gt; \min(a_i,b_j)$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;那就开写呗……&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;然后交上去会WA，80分。&lt;br&gt;
证明我们这种方法&lt;strong&gt;有思路缺陷&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;错误分析&#34;&gt;错误分析&lt;/h3&gt;
&lt;p&gt;这里便不满足严格弱序的&lt;strong&gt;相等传递性&lt;/strong&gt;这个性质。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当取$i,j$时，若$\min(a_i,b_j)=\min(a_j,b_i)$，&lt;br&gt;
当取$j,k$时，若$\min(a_j,b_k)=\min(a_k,b_j)$，&lt;br&gt;
则需要满足：取$i,k$时，$\min(a_i,b_k)=\min(a_k,b_i)$&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;反例：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;$a$&lt;/th&gt;
&lt;th&gt;$b$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$i$&lt;/td&gt;
&lt;td&gt;$3$&lt;/td&gt;
&lt;td&gt;$5$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$j$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$k$&lt;/td&gt;
&lt;td&gt;$7$&lt;/td&gt;
&lt;td&gt;$2$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;虽然$\min(a_i,b_j)=\min(a_j,b_i)$和$\min(a_j,b_k)=\min(a_k,b_j)$都满足，&lt;br&gt;
但却不满足$\min(a_i,b_k)=\min(a_k,b_i)$。&lt;br&gt;
【只需要让$a_j,b_j$相等，就可以构建众多反例。】&lt;/p&gt;
&lt;h4 id=&#34;错误根本原因新内容&#34;&gt;错误根本原因（新内容！）&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;为什么不满足严格弱序中传递性就会造成错误&lt;/strong&gt;：
&lt;blockquote&gt;
&lt;p&gt;因为&lt;code&gt;sort&lt;/code&gt;实现时，采用了&lt;strong&gt;分治&lt;/strong&gt;的思想。&lt;br&gt;
会将数据分为两个部分，对两个部分进行排序，然后使数列直接有序。&lt;br&gt;
但问题就刚好出在这个“直接有序”上。&lt;/p&gt;
&lt;p&gt;之所以在左右都有序后，会认为整个数列直接有序，&lt;br&gt;
就是因为利用了&lt;strong&gt;严格弱序中的传递性&lt;/strong&gt;：&lt;br&gt;
认为$X &amp;lt; Y,Y &amp;lt; Z$，则$X &amp;lt; Z$，&lt;br&gt;
以及$X = Y,Y = Z$，则$X = Z$。&lt;/p&gt;
&lt;p&gt;但假如不满足的第一条的话，分治处理过后：&lt;br&gt;
左侧的数是小于中间的，中间的数也是小于右边的，但左侧的是却不一定小于右边的了。&lt;br&gt;
会造成很严重的合并后错误。&lt;/p&gt;
&lt;p&gt;但假如不满足的第二条的话，分治处理过后：&lt;br&gt;
如果&lt;strong&gt;都是小于条件&lt;/strong&gt;，根据第一条可推合并后也有序，&lt;strong&gt;没有问题&lt;/strong&gt;。
&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 这也就是为什么我们这个方法还能得部分分的原因——决策判断时没判断出相等。 &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;&lt;/p&gt;
&lt;p&gt;但一旦&lt;strong&gt;出现等于条件&lt;/strong&gt;的情况，则不&lt;strong&gt;能推得左边的也等于右边的&lt;/strong&gt;，&lt;br&gt;
同时$X=Y, Y&amp;lt;Z \implies X&amp;lt;Z$、$X&amp;lt;Y, Y=Z \implies X&amp;lt;Z$也无法推得。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;举例：判断条件为$\min(a_i,b_j) &amp;lt; \min(a_j,b_i)$【就本题我们推的条件……
对以下两组数据：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;$a$&lt;/th&gt;
&lt;th&gt;$b$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$i$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$j$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;td&gt;$2$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$k$&lt;/td&gt;
&lt;td&gt;$2$&lt;/td&gt;
&lt;td&gt;$2$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其中$X(i,j)=Y(j,i),Y(j,k)&amp;lt;Z(k,j)$，但$X(i,k) \not&amp;lt; Z(k,i)$，为$X=Z$。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;$a$&lt;/th&gt;
&lt;th&gt;$b$&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;$i$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;td&gt;$2$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$j$&lt;/td&gt;
&lt;td&gt;$2$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;$k$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;其中$X(i,j)&amp;lt;Y(j,i),Y(j,k)=Z(k,j)$，但$X(i,k) \not&amp;lt; Z(k,i)$，为$X=Z$。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;那么&lt;strong&gt;不满足传递性&lt;/strong&gt;，就会导致&lt;strong&gt;虽然序列大部分满足决策条件&lt;/strong&gt;，但&lt;strong&gt;并不是任意两项都满足条件的&lt;/strong&gt;。&lt;br&gt;
而回到我们贪心的基本要求：需要&lt;strong&gt;任意两个元素都满足决策条件&lt;/strong&gt;。&lt;br&gt;
故会造成错误。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;改进方法&#34;&gt;改进方法&lt;/h3&gt;
&lt;p&gt;其实上述主要问题都归结于我们&lt;strong&gt;对相等状况的定义模棱两可&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于满足严格弱序中的传递性的数据来说：&lt;br&gt;
出现相等状况，&lt;strong&gt;交换或者不交换都无所谓&lt;/strong&gt;，因为可以通过传递性证得交换后对数列无影响。&lt;br&gt;
所以可以保持这种模棱两可的定义。
&lt;blockquote&gt;
&lt;p&gt;也就是说这种数据，我们即使将判断中的不取等判断&lt;strong&gt;改为取等的判断&lt;/strong&gt;，也依旧&lt;strong&gt;不会有影响&lt;/strong&gt;。只不过会多交换几次，让&lt;strong&gt;状态变得不同&lt;/strong&gt;，但最终结果一致。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;对于不满足严格弱序中的传递性的数据来说：&lt;br&gt;
我们就必须对相等状况作出严格的操作规定了，否则&lt;strong&gt;两种不同的状态&lt;/strong&gt;会导致数据&lt;strong&gt;最终结果的不一致&lt;/strong&gt;。&lt;br&gt;
也就是说我们要对&lt;strong&gt;相等状况&lt;/strong&gt;进行&lt;strong&gt;特判&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;那么我们就来考虑在$\max(w_{i1},w_{j1}) = \max(w_{i2},w_{j2})$的相等条件下，又该加什么判断。&lt;br&gt;
也就是说，除了这个很显然的条件在影响&lt;code&gt;ans&lt;/code&gt;外，还有没有什么可能影响&lt;code&gt;ans&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;根据个人看法不同，会有很多种可能的条件，以下列举两种正确的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;会发现：$a$的前缀和会影响$\max(c_{i-1},\sum_{j=1}^ia_j)$这个的选择，从而影响$w_i$，从而影响&lt;code&gt;ans&lt;/code&gt;。&lt;br&gt;
因为要找最小的&lt;code&gt;ans&lt;/code&gt;，所以我们**把$a$更小的放在前面**，这样就能让更加保证所得状态是最优的了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;会发现：两种状态的前后两项$w$，后者是一样的【我们比较条件就是用的两状态的后者】，因此我们要让前者尽量小，从而确保&lt;code&gt;ans&lt;/code&gt;更小。&lt;br&gt;
所以我们&lt;strong&gt;把$b$更小的放在前面&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;那么假如这两个条件判断出来也是相等的，需不需要再特判呢？
&lt;blockquote&gt;
&lt;p&gt;假如$\min(a_j,b_i) = \min(a_i,b_j)$和$a_i = a_j$（或者$b_i = b_j$）同时满足，&lt;br&gt;
则可以推出$a_i=a_j,b_i=b_j$，也就是这两项的数据完全一致，并不是比较用数据一致，因此我们这里也可以即交换又不交换，保持模棱两可定义。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;很特殊的hack数据&#34;&gt;很特殊的hack数据&lt;/h3&gt;
&lt;p&gt;在这里，我们会惊讶地发现，如果&lt;strong&gt;用选择排序的话&lt;/strong&gt;，虽然是会&lt;code&gt;TLE&lt;/code&gt;，但其&lt;strong&gt;结果是正确的&lt;/strong&gt;。&lt;br&gt;
【相关原因请查看后面的「有关排序的深层理解」部分】&lt;/p&gt;
&lt;p&gt;个人发现了选择排序答案是正确的后，对各种排序的实现展开了思考和实验。&lt;/p&gt;
&lt;p&gt;认为像快速排序或归并排序等，是因为采用典型的分治思想才导致需要满足严格弱序的。&lt;br&gt;
那么对于其他排序方法比如“希尔排序”、“堆排序”、“锦标赛排序”等是否不需要满足严格弱序呢？&lt;br&gt;
【这里没考虑“计数排序”、“基数排序”和“桶排序”这三种非比较式排序算法。因为这里没有关键字，无法使用这三种排序方法。&lt;/p&gt;
&lt;p&gt;所以在实验的时候就弄出了一些其他的hack数据，&lt;br&gt;
然后其中发现了一组很特殊的hack数据！&lt;em&gt;(:з」∠)&lt;/em&gt;……&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;数据：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;1&lt;br&gt;
5&lt;/p&gt;
&lt;p&gt;9 7&lt;br&gt;
1 1&lt;br&gt;
4 5&lt;br&gt;
1 2&lt;br&gt;
6 5&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;*以下表格中的option表示$\max(c_{i-1},\sum_{j=1}^ia_j)$选择的哪个*。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;标准答案：&lt;code&gt;27&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;利用选择排序后的结果&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;$a$&lt;/th&gt;
&lt;th&gt;$b$&lt;/th&gt;
&lt;th&gt;$c$&lt;/th&gt;
&lt;th&gt;option&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;td&gt;$2$&lt;/td&gt;
&lt;td&gt;$3$&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;td&gt;$4$&lt;/td&gt;
&lt;td&gt;$c$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;$4$&lt;/td&gt;
&lt;td&gt;$5$&lt;/td&gt;
&lt;td&gt;$11$&lt;/td&gt;
&lt;td&gt;$\sum a$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;$9$&lt;/td&gt;
&lt;td&gt;$7$&lt;/td&gt;
&lt;td&gt;$22$&lt;/td&gt;
&lt;td&gt;$\sum a$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;$6$&lt;/td&gt;
&lt;td&gt;$5$&lt;/td&gt;
&lt;td&gt;$27$&lt;/td&gt;
&lt;td&gt;$c$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;特殊性&lt;br&gt;
我们如果排序成：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;$a$&lt;/th&gt;
&lt;th&gt;$b$&lt;/th&gt;
&lt;th&gt;$c$&lt;/th&gt;
&lt;th&gt;option&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;$4$&lt;/td&gt;
&lt;td&gt;$5$&lt;/td&gt;
&lt;td&gt;$9$&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;td&gt;$2$&lt;/td&gt;
&lt;td&gt;$11$&lt;/td&gt;
&lt;td&gt;$c$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;$9$&lt;/td&gt;
&lt;td&gt;$7$&lt;/td&gt;
&lt;td&gt;$21$&lt;/td&gt;
&lt;td&gt;$\sum a$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;td&gt;$1$&lt;/td&gt;
&lt;td&gt;$22$&lt;/td&gt;
&lt;td&gt;$c$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;$6$&lt;/td&gt;
&lt;td&gt;$5$&lt;/td&gt;
&lt;td&gt;$27$&lt;/td&gt;
&lt;td&gt;$c$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;会发现$1$和$2$（$i=1,j=2$）这两组数据，&lt;br&gt;
&lt;strong&gt;其实是不满足$\min(a_i,b_j) &amp;lt; \min(a_j,b_i)$这个条件的！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;故这也告诉了我们：最优解也&lt;strong&gt;可能存在有两项不满足决策条件&lt;/strong&gt;的状态。&lt;br&gt;
【更准确叙述请查看后面的「有关贪心决策的满足度影响」部分】&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;有关自己使用其他排序方法验证的代码，以及其他两组hack数据可见&lt;a class=&#34;link&#34; href=&#34;https://paste.ubuntu.com/p/KjHc2bMCj6/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Pastebin&lt;/a&gt;。&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;决策条件是否正确的判断方法&#34;&gt;决策条件是否正确的判断方法&lt;/h2&gt;
&lt;h3 id=&#34;1条件检查器&#34;&gt;1、条件检查器&lt;/h3&gt;
&lt;p&gt;基于以上分析，我们发现：&lt;br&gt;
如果按上述“基本决策寻找方法”得到的决策条件$P$是正确的，必须要满足基本的排序型贪心的条件：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;数列&lt;strong&gt;任意两项满足决策条件&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果决策条件$P$满足以下条件，则可证得排序后一定满足该基本条件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;满足严格弱序中的&lt;strong&gt;两个传递性&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;根据以上一点，我们可以编写一个条件检查器。&lt;br&gt;
【这个条件检查器的方法是参考自&lt;a class=&#34;link&#34; href=&#34;https://ouuan.github.io/post/%E6%B5%85%E8%B0%88%E9%82%BB%E9%A1%B9%E4%BA%A4%E6%8D%A2%E6%8E%92%E5%BA%8F%E7%9A%84%E5%BA%94%E7%94%A8%E4%BB%A5%E5%8F%8A%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E9%97%AE%E9%A2%98/#%E4%BD%BF%E7%94%A8%E9%82%BB%E9%A1%B9%E4%BA%A4%E6%8D%A2%E6%8E%92%E5%BA%8F%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E9%97%AE%E9%A2%98&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;“ouuan”的博客&lt;/a&gt;后了解的，个人在其基础之上有所修改并加入了注释……&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;algorithm&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;#include&lt;/span&gt; &lt;span class=&#34;cpf&#34;&gt;&amp;lt;cstdio&amp;gt;&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;
&lt;/span&gt;&lt;span class=&#34;cp&#34;&gt;&lt;/span&gt;&lt;span class=&#34;k&#34;&gt;using&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;namespace&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;std&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;];&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//构造第一组a,b数组数据：用来判断自反性
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//不满足自反性。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                           &lt;span class=&#34;c1&#34;&gt;//分析知这条对于贪心思路并不是很重要，所以注释了。但如果用sort就很重要。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;c1&#34;&gt;//printf(&amp;#34;No irreflexivity: %d %d\n&amp;#34;, a[0], b[0]);
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;            &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
                &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//构造第二组a,b数组数据：用来判断非对称性
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//非对称性的判断
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;No asymmetric: %d %d %d %d&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
                    &lt;span class=&#34;cm&#34;&gt;/* 这部分原本是判断 我们新的决策条件 与 最开始分析的决策条件 是否判断一致，但其实可以不用判断。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                    //同理，在ouuan所写的判断器中：有一个关于「排序完成后任意交换相邻元素均不会使答案更优」这个的判断，但实际上如果满足了严格弱序一定也会满足这个条件，也不用判断。
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                    bool our_judge = cmp(0, 1),
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                         real_judge = min(a[0], b[1]) &amp;lt; min(a[1], b[0]),
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                         if_equal = min(a[0], b[1]) == min(a[1], b[0]);
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                    //注意这里真实判断（以决策条件判断），如果为0：有可能真的不满足，但也有可能是相等情况；如果为1：那就一定是满足
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                    //所以我们要加个if_equal，如果是相同状况则不判断是否与真是判断相同
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                    if (!if_equal &amp;amp;&amp;amp; our_judge != real_judge) //与真正决策条件判断不同
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                        printf(&amp;#34;Not correct(%s): %d %d %d %d\n&amp;#34;, (our_judge == 1 ? &amp;#34;We judge it&amp;#39;s right, but truth is wrong.&amp;#34; : &amp;#34;We judge it&amp;#39;s wrong, but truth is right&amp;#34;), a[0], b[0], a[1], b[1]);
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                    */&lt;/span&gt;
                    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//构造第三组a,b数据：用来判断传递性
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;++&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
                        &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                            &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flag_inequ&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
                                 &lt;span class=&#34;n&#34;&gt;flag_equ&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                            &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmp_01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                                 &lt;span class=&#34;n&#34;&gt;cmp_12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                                 &lt;span class=&#34;n&#34;&gt;cmp_02&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                            &lt;span class=&#34;c1&#34;&gt;//注意我们判断两状态是否是用的!cmp(i,j) &amp;amp;&amp;amp; !cmp(j,i)（非对称性的利用）
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                            &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;euqal_01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                                 &lt;span class=&#34;n&#34;&gt;euqal_12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                                 &lt;span class=&#34;n&#34;&gt;euqal_02&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp_01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmp_12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp_01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp_01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;euqal_01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;euqal_12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)))&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmp_01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmp_02&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//不符合不等传递性
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                &lt;span class=&#34;cm&#34;&gt;/* 怎么才算符合不等传递性：
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                                1 1 -&amp;gt; 1
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                                1 0 -&amp;gt; ? (2 &amp;lt; 7, 7 \not&amp;lt; 5 ---&amp;gt; 2 &amp;lt; 5)(2 &amp;lt; 7, 7 \not&amp;lt; 1 ---&amp;gt; 2 \not&amp;lt; 1)
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                                0 1 -&amp;gt; ? (Same way)
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                                0 0 -&amp;gt; 0 //但要注意这里cmp为0：有可能是不满足，也有可能是因为等于的情况。所以要加!euqal来排除等于情况
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                                */&lt;/span&gt;
                                &lt;span class=&#34;n&#34;&gt;flag_inequ&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                                &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;No transitivity of inequivalence: %d %d %d %d %d %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
                            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;euqal_01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;euqal_12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;euqal_01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;euqal_12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;euqal_02&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//相等传递性
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                &lt;span class=&#34;cm&#34;&gt;/* 怎么才算符合相等传递性：
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                                1 1 -&amp;gt; 1
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                                1 0 -&amp;gt; 0
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                                0 1 -&amp;gt; 0
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                                0 0 -&amp;gt; ? (2 ≠ 3, 3 ≠ 2 ---&amp;gt; 2 = 2)//这个很好知道吧【…… 
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;                                */&lt;/span&gt;
                                &lt;span class=&#34;n&#34;&gt;flag_equ&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
                                &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;No transitivity of equivalence: %d %d %d %d %d %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
                            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

                            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;flag_inequ&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;flag_equ&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;//私货：求证如果满足不等传递性，但不满足相等传递性，是否X=Y,Y&amp;lt;Z---&amp;gt;X&amp;lt;Z；X&amp;lt;Y,Y=Z---&amp;gt;X&amp;lt;Z？
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;                            &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;===In Case===&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                                &lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;euqal_cmp01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                                     &lt;span class=&#34;n&#34;&gt;ineuq_cmp01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                                     &lt;span class=&#34;n&#34;&gt;euqal_cmp12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                                     &lt;span class=&#34;n&#34;&gt;ineuq_cmp12&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                                     &lt;span class=&#34;n&#34;&gt;euqal_cmp02&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;),&lt;/span&gt;
                                     &lt;span class=&#34;n&#34;&gt;ineuq_cmp02&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;
                                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;euqal_cmp01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;ineuq_cmp12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ineuq_cmp02&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;euqal_cmp02&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                                        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;---X=Y,Y&amp;lt;Z---&amp;gt;X not&amp;lt; Z: %d %d %d %d %d %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
                                    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ineuq_cmp02&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                                        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;---X=Y,Y&amp;lt;Z---&amp;gt;X = Z: %d %d %d %d %d %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                                &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ineuq_cmp01&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;euqal_cmp12&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
                                    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ineuq_cmp02&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;euqal_cmp02&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                                        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;---X&amp;lt;Y,Y=Z---&amp;gt;X not&amp;lt; Z: %d %d %d %d %d %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
                                    &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;!&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;ineuq_cmp02&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
                                        &lt;span class=&#34;n&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;---X&amp;lt;Y,Y=Z---&amp;gt;X = Z: %d %d %d %d %d %d&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;
                                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                            &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
                &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
        &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;cmp&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
    &lt;span class=&#34;cm&#34;&gt;/* 展开式：【用来debug方便watch的……
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    int min_ij = min(a[i], b[j]),
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;        min_ji = min(a[j], b[i]);
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    bool ans = 0;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    if (min_ij == min_ji)
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;        ans = a[i] &amp;lt; a[j];
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    else
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;        ans = min_ij &amp;lt; min_ji;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    return ans;
&lt;/span&gt;&lt;span class=&#34;cm&#34;&gt;    */&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;min&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;j&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;i&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]);&lt;/span&gt;                                                    &lt;span class=&#34;c1&#34;&gt;//Case.1
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//return min(a[i], b[j]) &amp;lt;= min(a[j], b[i]);                                                   //Case.2
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//return min(a[i], b[j]) == min(a[j], b[i]) ? a[i] &amp;gt; a[j] : min(a[i], b[j]) &amp;lt; min(a[j], b[i]); //Case.3
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;    &lt;span class=&#34;c1&#34;&gt;//return min(a[i], b[j]) == min(a[j], b[i]) ? a[i] &amp;lt; a[j] : min(a[i], b[j]) &amp;lt; min(a[j], b[i]); //Case.4
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上述提到了：如果满足了严格弱序一定也会满足「排序完成后任意交换相邻元素均不会使答案更优」这个条件。&lt;br&gt;
所以我并没有写上“ouuan”博客中的那个条件。&lt;br&gt;
而且对于严格弱序，我也认为只用判断传递性即可。&lt;br&gt;
【如果这种修改有误，请务必告诉我！……&lt;/p&gt;
&lt;p&gt;因为决策条件$P$满足严格弱序后，我们按照$P$排序后，一定会使任意两项均满足$P$，则满足我们的贪心的思想，使得肯定这个状态是最优解状态。&lt;br&gt;
【但这种口头解释没有严格证明可能没有说服力，可以自己在判断器里删掉注释然后验证一下_(:з」∠)_……&lt;/p&gt;
&lt;h3 id=&#34;2与选择排序对拍&#34;&gt;2、与选择排序对拍&lt;/h3&gt;
&lt;p&gt;当然，我们发现了：用选择排序的话结果是正确的。&lt;/p&gt;
&lt;p&gt;所以我们也可以很快地写个选择排序，然后跟我们新的方法进行对拍。&lt;/p&gt;
&lt;h1 id=&#34;其他补充点&#34;&gt;其他补充点&lt;/h1&gt;
&lt;h2 id=&#34;有关排序的深层理解&#34;&gt;有关排序的深层理解&lt;/h2&gt;
&lt;p&gt;我们发现&lt;strong&gt;选择排序用之前的条件&lt;/strong&gt;，虽然会TLE，但是是&lt;strong&gt;正确的&lt;/strong&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;洛谷上测试状态【其余未放出的均AC】：&lt;br&gt;
&lt;img src=&#34;./pic/Selection_status.png&#34; alt=&#34;Selection_status&#34;  /&gt;&lt;br&gt;
将其两组数据放到本地测评：&lt;br&gt;
&lt;img src=&#34;./pic/Selection_AC.png&#34; alt=&#34;Selection_AC&#34;  /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主要就是因为排序这种绝对的$O(n^2)$的算法，是&lt;strong&gt;严格让所有数据都两两比较&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;正式因为其两两比较，使得不需要利用满足数据严格弱序的传递性。&lt;br&gt;
不会像快排或归并等其他非$O(n^2)$的算法一样，利用严格弱序中的传递性，来对某些情况减少判断，达成了降低复杂度的办法。&lt;/p&gt;
&lt;p&gt;也就是说，他们&lt;strong&gt;为了提高速度&lt;/strong&gt;，&lt;strong&gt;省略了一些比较&lt;/strong&gt;。代价就是数据必须要满足一定的条件，即严格弱序。&lt;/p&gt;
&lt;p&gt;同样，就连冒泡排序这种本来也是$O(n^2)$的排序算法【但实际上并不是绝对的$O(n^2)$，其最坏是$\frac{(n-1)n}{2}$次操作】，&lt;br&gt;
因为只是比较相邻的数据，并未严格任意两两比较。也是利用了传递性。&lt;/p&gt;
&lt;h2 id=&#34;有关贪心决策的满足度影响&#34;&gt;有关贪心决策的满足度影响&lt;/h2&gt;
&lt;p&gt;之前发现：&lt;/p&gt;
&lt;p&gt;让&lt;strong&gt;任意两项都满足决策条件&lt;/strong&gt;，是&lt;strong&gt;一定是最优解&lt;/strong&gt;的。&lt;br&gt;
但之前发现：如果&lt;strong&gt;存在两项不满足&lt;/strong&gt;，也有&lt;strong&gt;可能是最优解&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;也就是&lt;strong&gt;任意两项都满足&lt;/strong&gt;决策条件的这种状态，是&lt;strong&gt;最优解状态的一种&lt;/strong&gt;，为$∈$关系。&lt;/p&gt;
&lt;p&gt;但我们&lt;strong&gt;只能去找任意两项均满足的这种状态&lt;/strong&gt;。因为对于存在两项不满足的，也有可能不是最优解，就成了概率问题。&lt;br&gt;
【而这道题概率出来就是80分……&lt;/p&gt;
&lt;h2 id=&#34;有关排序对严格弱序的不同要求&#34;&gt;有关排序对严格弱序的不同要求&lt;/h2&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;$X \not&amp;lt; X$（比较条件非自反性）&lt;/li&gt;
&lt;li&gt;若$X &amp;lt; Y$，则$Y \not&amp;lt; X$（比较条件非对称性）&lt;/li&gt;
&lt;li&gt;若$X &amp;lt; Y,Y &amp;lt; Z$，则$X &amp;lt; Z$（比较条件不等&lt;strong&gt;传递性&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;若$X=Y,Y=Z$，则$X=Z$（比较条件相等&lt;strong&gt;传递性&lt;/strong&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;前面已经说了，对于1、2点，其实对于贪心的题目要求并不严格。&lt;br&gt;
不满足的话只是会多交换几次，导致状态不同，但最终的&lt;code&gt;ans&lt;/code&gt;是一样的。&lt;/p&gt;
&lt;p&gt;但某些算法要求必须要遵守1、2点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对于用STL库的&lt;code&gt;sort()&lt;/code&gt;：&lt;br&gt;
其必须还要考虑1、2点&lt;strong&gt;非自反性和非对称性&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;因为内部的算法实现，对下标的判断需要用到这两个性质，否则会越界导致&lt;code&gt;RE&lt;/code&gt;。&lt;br&gt;
【不过我没有具体去看函数内部的代码实现，只是根据网上搜的以及自己实验得出来的，不一定准确。但确实不考虑这两个的话会出现&lt;code&gt;RE&lt;/code&gt;……&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于其他非$O(n^2)$排序方法：&lt;br&gt;
如：归并排序&lt;code&gt;merge&lt;/code&gt;：&lt;br&gt;
则不用考虑1、2点。&lt;br&gt;
【当然还是要根据自己的排序写法来判断是否需要满足1、2点……&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;有关传递性的简单判断&#34;&gt;有关传递性的简单判断&lt;/h2&gt;
&lt;p&gt;我们排序比较时，只会比较两个元素，也就是两个下标，一般用$i,j$代表。&lt;br&gt;
而&lt;strong&gt;排序（决策）条件&lt;/strong&gt;，也一定是与$a_i$和$a_j$的衍生关系。&lt;/p&gt;
&lt;p&gt;那么排序条件的下标会有两种情况：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;一侧只有一个下标&lt;br&gt;
形如：$cmp(x,y)=A_x?A_y$&lt;/p&gt;
&lt;p&gt;当比较条件一侧只有一个下标的时候很好理解，就是普通的数列排序。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;单侧下标时&lt;/strong&gt;，两个下标的选择&lt;strong&gt;不会影响&lt;/strong&gt;其对应的&lt;strong&gt;比较用数据&lt;/strong&gt;的值，&lt;br&gt;
故一般能符合&lt;strong&gt;比较条件不等传递性&lt;/strong&gt;和&lt;strong&gt;比较条件相等传递性&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;举例：&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;条件为$a_i&amp;gt;a_j$&lt;br&gt;
取$i,j$：$a_i=a_j$&lt;br&gt;
取$j,k$：$a_j=a_k$&lt;br&gt;
取$i,k$：$a_i=a_k$&lt;/li&gt;
&lt;li&gt;条件为$a_i+a_{i+1}&amp;gt;a_j+a_{j+1}$&lt;br&gt;
取$i,j$：$a_i+a_{i+1}=a_j+a_{j+1}$&lt;br&gt;
取$j,k$：$a_j+a_{j+1}=a_k+a_{k+1}$&lt;br&gt;
【则可直接推得$a_i+a_{i+1}=a_j+a_{j+1}=a_j+a_{j+1}=a_k+a_{k+1}$】&lt;br&gt;
取$i,k$：$a_i+a_{i+1}=a_k+a_{k+1}$&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;一侧两个下标都有&lt;br&gt;
形如：$cmp(x,y)=A_{x,y}?A_{y,x}$&lt;/p&gt;
&lt;p&gt;当一侧两种下标都有时，则不同下标的选择&lt;strong&gt;会影响&lt;/strong&gt;其对应的&lt;strong&gt;比较用数据&lt;/strong&gt;的值。&lt;br&gt;
故需要具体判断是否&lt;strong&gt;比较条件传递性&lt;/strong&gt;和&lt;strong&gt;比较条件相等传递性&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;举例：&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;条件为$a_i+a_{j+1}&amp;gt;a_j+a_{i+1}$&lt;br&gt;
取$i,j$：$a_i+a_{j+1}=a_j+a_{i+1}$&lt;br&gt;
取$j,k$：$a_j+a_{k+1}=a_k+a_{j+1}$&lt;br&gt;
【不可直接推得$a_i+a_{j+1}=a_j+a_{i+1}=a_j+a_{k+1}=a_k+a_{j+1}$】&lt;br&gt;
但可证得：取$i,k$：$a_i+a_{k+1}=a_k+a_{i+1}$&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;总结&#34;&gt;总结&lt;/h1&gt;
&lt;p&gt;有关排序型贪心，最基本的条件：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;数列&lt;strong&gt;任意两项满足决策条件&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;而我们可以&lt;strong&gt;利用传递性&lt;/strong&gt;，只用分析相邻两项，来得到决策条件。&lt;/p&gt;
&lt;p&gt;但在找到决策条件之后，要判定其&lt;strong&gt;是否满足&lt;/strong&gt;严格弱序中的“&lt;strong&gt;相等传递性&lt;/strong&gt;”和“&lt;strong&gt;不等传递性&lt;/strong&gt;”&lt;/p&gt;
&lt;p&gt;因此题目解决大致思路方法：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;找出每种状态的&lt;code&gt;ans&lt;/code&gt;，选邻项代入&lt;/li&gt;
&lt;li&gt;假设相邻位置，写出两种状态的&lt;code&gt;ans&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;根据题意写出排序条件并化简，得到最终决策方案（不一定划到最简）&lt;/li&gt;
&lt;li&gt;判断是否满足传递性&lt;/li&gt;
&lt;li&gt;如满足：自定义结构体，重载&lt;code&gt;&amp;lt;&lt;/code&gt;运算符，使用&lt;code&gt;sort&lt;/code&gt;，遍历寻答案&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;以上部分参考自“ouuon”的&lt;a class=&#34;link&#34; href=&#34;https://ouuan.github.io/post/%E6%B5%85%E8%B0%88%E9%82%BB%E9%A1%B9%E4%BA%A4%E6%8D%A2%E6%8E%92%E5%BA%8F%E7%9A%84%E5%BA%94%E7%94%A8%E4%BB%A5%E5%8F%8A%E9%9C%80%E8%A6%81%E6%B3%A8%E6%84%8F%E7%9A%84%E9%97%AE%E9%A2%98/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;「浅谈邻项交换排序的应用以及需要注意的问题」&lt;/a&gt;，以及“Joker&amp;amp;Liar”的&lt;a class=&#34;link&#34; href=&#34;https://www.cnblogs.com/17134h/p/12706408.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;「浅谈邻项交换排序」&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;写在最后：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;真的没想到写了这么多orz……弄了整整四天来写这一个东西qwqqq……&lt;br&gt;
写这么长而且也很混乱，估计以后自己或者其他人也根本看不下去吧x【……&lt;br&gt;
不过其实这里面还是有很多新发现的。比如快速排序算法的快速原因，以及最珍贵的就是那个不符合任意两项满足条件但是也对的hack数据什么的……&lt;br&gt;
也算是很深入地去理解贪心中这排序型贪心的本质……并且有一些也是在“ouuan”dalao博客里所没有的新发现，也算是比较安慰了【？……&lt;br&gt;
就这样吧，最近刚好也发生了很多事……&lt;br&gt;
按照自己的步调前行吧……&lt;/p&gt;
&lt;/blockquote&gt;
</description>
        </item>
        <item>
        <title>贪心……</title>
        <link>https://blog.supersassw.com/p/greedy/</link>
        <pubDate>Mon, 14 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/greedy/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/greedy/80942286_p0.png" alt="Featured image of post 贪心……" /&gt;&lt;h1 id=&#34;贪心&#34;&gt;贪心&lt;/h1&gt;
&lt;h2 id=&#34;定义&#34;&gt;定义&lt;/h2&gt;
&lt;p&gt;贪心，指的是决策时都采取&lt;strong&gt;当前最优解&lt;/strong&gt;的算法。&lt;br&gt;
可以通过&lt;strong&gt;局部最优解&lt;/strong&gt;拓展得到&lt;strong&gt;全局最优解&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;用处&#34;&gt;用处&lt;/h2&gt;
&lt;p&gt;寻找&lt;strong&gt;最优解&lt;/strong&gt;（如：找最大(小)值）&lt;/p&gt;
&lt;h1 id=&#34;贪心类别&#34;&gt;贪心类别&lt;/h1&gt;
&lt;h2 id=&#34;一排序型贪心&#34;&gt;一、排序型贪心&lt;/h2&gt;
&lt;p&gt;这种类型就是通过给数据排序，不同的排序方法演绎下去就会有不同的答案&lt;code&gt;ans&lt;/code&gt;。&lt;br&gt;
然后要比较所有排序方法，选让&lt;strong&gt;这些&lt;code&gt;ans&lt;/code&gt;的最值&lt;/strong&gt;。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;为什么会想到排序？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;虽然我们只看重眼前利益选择当前的最优解，随时准备开冲去比较两者选获利最大的【指直接从头开始遍历然后选择】。&lt;/p&gt;
&lt;p&gt;但这个时候我们暂且压一下枪理智一下：我们怎么知道我们现在选的是不是最优解呢？&lt;br&gt;
也就是说，可能现在这两个中，我选了一个当前最优解，但实际上跟后面比起来，这两个都不是最优解。&lt;br&gt;
也就是著名的苏格拉底的“拣麦穗的故事”。&lt;/p&gt;
&lt;p&gt;所以我们以全局眼光来看这些数据，飞到这片麦田之上，就会发现：“哦~原来利益最大的在那个地方、第二大的又在另个地方……”&lt;br&gt;
然后我们知道这些获利最大的点在哪里，就用原力把他们放到我们面前来，然后直接取走就行了。&lt;br&gt;
或者说：我们先辛苦一下&lt;strong&gt;对这些数据排下序&lt;/strong&gt;，然后直接&lt;strong&gt;取最优结果&lt;/strong&gt;就可以了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;所以我们就能得到有关排序型贪心的定义：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通过对数据，按照&lt;strong&gt;某种决策条件&lt;/strong&gt;排序，使得&lt;strong&gt;任意两项均满足&lt;/strong&gt;该决策条件，而找到最优解。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;实现方法&#34;&gt;实现方法&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;根据题意，分析每种状态的&lt;code&gt;ans&lt;/code&gt;如何计算，以及题目要求取&lt;code&gt;ans&lt;/code&gt;的什么最值。&lt;/li&gt;
&lt;li&gt;采用邻项交换排序思想，选取相邻两项$i,i+1$，比较两种状态的&lt;code&gt;ans&lt;/code&gt;，选择最优的&lt;code&gt;ans&lt;/code&gt;。由此可以推出一种基于数据比较的&lt;strong&gt;决策方案&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;按照该决策方案排序，算出排序后状态的&lt;code&gt;ans&lt;/code&gt;值，即为结果。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;邻项交换排序&#34;&gt;邻项交换排序&lt;/h3&gt;
&lt;p&gt;这一部分请查看&lt;a class=&#34;link&#34; href=&#34;../neighbor-sort/&#34; &gt;邻项交换排序&lt;/a&gt;笔记。&lt;/p&gt;
&lt;h2 id=&#34;二反悔型贪心&#34;&gt;二、反悔型贪心&lt;/h2&gt;
&lt;p&gt;依然是上面的引例：&lt;/p&gt;
&lt;p&gt;【我管不了那么多了我现在就要开冲.jpg……&lt;/p&gt;
&lt;p&gt;但一路冲下去，如果发现有比之前选择的更好的数据，&lt;br&gt;
我们是不是就会觉得后悔，觉得如果之前不选那个而选这个该多好。&lt;/p&gt;
&lt;p&gt;因此我们就可以从&lt;strong&gt;之前所选择的&lt;/strong&gt;当中，&lt;strong&gt;取一个最差的&lt;/strong&gt;，然后&lt;strong&gt;跟这个最好的换一下&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;这就是反悔贪心法的基本思路：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;无论当前的选项是否最优都先接受，然后继续往后进行比较。&lt;br&gt;
如果发现有比之前选择更优的，则反悔，舍弃之前最差的换成这个选项；否则继续往后比较。直到序列遍历完。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;要记录之前所选择的，则一般采用&lt;strong&gt;优先队列&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>STL……</title>
        <link>https://blog.supersassw.com/p/stl/</link>
        <pubDate>Thu, 03 Dec 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/stl/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/stl/79059953_p0.png" alt="Featured image of post STL……" /&gt;&lt;h1 id=&#34;stl-详解&#34;&gt;STL 详解&lt;/h1&gt;
&lt;h2 id=&#34;set集合&#34;&gt;set——集合&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;set&amp;lt;int&amp;gt; STL_set&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;set为关联容器。为一种体现集合性质的容器。&lt;/p&gt;
&lt;p&gt;其中&lt;strong&gt;不允许有重复元素&lt;/strong&gt;。&lt;br&gt;
并且set中的元素是&lt;strong&gt;排好序的&lt;/strong&gt;（升序）。&lt;/p&gt;
&lt;h3 id=&#34;用法&#34;&gt;用法：&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;set&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;STL_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;//---对整体的操作---
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//清空
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//返回是否为空
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//返回元素个数
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//---对元素的操作---
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;insert&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...);&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//在集合中插入元素
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;erase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...);&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//删除集合中的元素
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...);&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//返回元素的个数【由于set不能存在重复元素，故只能返回0或1
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//---迭代器---
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;STL_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;STL_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...);&lt;/span&gt;		&lt;span class=&#34;c1&#34;&gt;//返回一个指向被查找到元素的迭代器，未找到返回set::end()
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lower_bound&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//返回大于等于某值的第一个元素的迭代器
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_set&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;upper_bound&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//返回大于某个值元素的迭代器
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;自定义性&#34;&gt;自定义性：&lt;/h3&gt;
&lt;p&gt;set可支持自定义类型，但需要重载&lt;code&gt;&amp;lt;&lt;/code&gt;运算符。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;type&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;//用来存棋盘状态
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;

	&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;operator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;实现&#34;&gt;实现：&lt;/h3&gt;
&lt;p&gt;内部以红黑树的形式实现。&lt;/p&gt;
&lt;h3 id=&#34;应用场景&#34;&gt;应用场景：&lt;/h3&gt;
&lt;p&gt;set就是关键字的简单集合。当只是想知道一个值是否存在时，set是最有用的。&lt;br&gt;
同时可以实现数据去重。&lt;/p&gt;
&lt;h3 id=&#34;衍生stl&#34;&gt;衍生STL：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;multiset: 关键字可重复出现的set。&lt;/li&gt;
&lt;li&gt;unordered_set: 未排序的set（用hash函数组织）。&lt;/li&gt;
&lt;li&gt;unordered_multiset: 未排序的可重复出现的set。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;map映射&#34;&gt;map——映射&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;map&amp;lt;int, int&amp;gt; STL_map&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;map为关联容器。为一种体现映射关系的容器，每个关键字对应一个值。&lt;/p&gt;
&lt;p&gt;数据会根据&lt;strong&gt;键值大小关系排序&lt;/strong&gt;（升序）。&lt;/p&gt;
&lt;p&gt;数据元素都是成对出现(&lt;code&gt;pair&lt;/code&gt;)。&lt;br&gt;
每一对中的第一个值称之为关键字(key)（也称键值），每个&lt;strong&gt;关键字只能&lt;/strong&gt;在map中&lt;strong&gt;出现一次&lt;/strong&gt;。&lt;br&gt;
第二个称之为该关键字的对应值(value)（也称实值）。&lt;/p&gt;
&lt;h3 id=&#34;用法-1&#34;&gt;用法：&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;n&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;string&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;STL_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;//---初始构造---
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_map&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;},{&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;}};&lt;/span&gt;		&lt;span class=&#34;c1&#34;&gt;//为c++11标准
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//---数组操作---
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;25252&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s&#34;&gt;&amp;#34;niconiconi&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//如果没有对应key则插入，如果已经存在则会修改value
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//---对整体的操作---
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;clear&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;STL_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;empty&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;STL_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;size&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;c1&#34;&gt;//---对元素的操作---
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//insert过于麻烦不予讲解。
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;erase&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...);&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//删除对应key的元素，成功删除返回1，否则返回0
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;count&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...);&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//返回对应key元素的个数【由于map不能存在重复key，故只能返回0或1
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;//---迭代器---
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;STL_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;();&lt;/span&gt;
&lt;span class=&#34;n&#34;&gt;STL_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;find&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...);&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//返回查找元素的迭代器，未找到返回map::end()
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;lower_bound&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//返回key大于等于某值的第一个元素的迭代器
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;STL_map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;upper_bound&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(...)&lt;/span&gt;	&lt;span class=&#34;c1&#34;&gt;//返回key大于某个值元素的迭代器
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;自定义性-1&#34;&gt;自定义性：&lt;/h3&gt;
&lt;p&gt;set可支持自定义类型，但需要重载&lt;code&gt;&amp;lt;&lt;/code&gt;运算符。&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-c++&#34; data-lang=&#34;c++&#34;&gt;&lt;span class=&#34;k&#34;&gt;struct&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;type&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;//用来存棋盘状态
&lt;/span&gt;&lt;span class=&#34;c1&#34;&gt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;

	&lt;span class=&#34;kt&#34;&gt;bool&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;operator&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;k&#34;&gt;const&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
		&lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;...;&lt;/span&gt;
	&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;实现-1&#34;&gt;实现：&lt;/h3&gt;
&lt;p&gt;内部以红黑树的形式实现。&lt;/p&gt;
&lt;h3 id=&#34;应用场景-1&#34;&gt;应用场景：&lt;/h3&gt;
&lt;p&gt;hash&lt;/p&gt;
</description>
        </item>
        <item>
        <title>排序……</title>
        <link>https://blog.supersassw.com/p/sort/</link>
        <pubDate>Thu, 12 Nov 2020 00:00:00 +0000</pubDate>
        
        <guid>https://blog.supersassw.com/p/sort/</guid>
        <description>&lt;img src="https://blog.supersassw.com/p/sort/86036732_p0.png" alt="Featured image of post 排序……" /&gt;&lt;div class=&#34;snote error &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt; 以下部分本地链接无法加载，需要修正…… &lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;
&lt;h1 id=&#34;排序&#34;&gt;排序&lt;/h1&gt;
&lt;h2 id=&#34;不考虑算法&#34;&gt;不考虑算法&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;选择排序、冒泡排序、插入排序 $O(n^2)$&lt;/li&gt;
&lt;li&gt;计数排序、基数排序、桶排序 $O(n+w)$


&lt;div class=&#34;snote info &#34;&gt;
	&lt;div class=&#34;snote-content&#34;&gt;
		&lt;p&gt;&lt;a href=&#34;./template/Counting_Sort.cpp&#34;&gt;计数排序&lt;/a&gt;&lt;/p&gt;
	&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;希尔排序、锦标赛排序&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;快速排序&#34;&gt;快速排序&lt;/h1&gt;
&lt;h2 id=&#34;应用&#34;&gt;应用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;寻找第k大的数&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;归并排序&#34;&gt;归并排序&lt;/h1&gt;
&lt;h2 id=&#34;应用-1&#34;&gt;应用&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;寻找逆序对&lt;br&gt;
可见&lt;a class=&#34;link&#34; href=&#34;https://blog.csdn.net/qq_31029725/article/details/78073131&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;之前笔记&lt;/a&gt;。&lt;br&gt;
&lt;em&gt;（有关逆序对的问题还可以用&lt;strong&gt;树状数组&lt;/strong&gt;或&lt;strong&gt;线段树&lt;/strong&gt;来解决。）&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;对于逆序对问题的抽象：
&lt;ol&gt;
&lt;li&gt;询问最少经过几次（可能为&lt;strong&gt;相邻元素交换&lt;/strong&gt;）交换，可使数列有序。&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;如果限制了为&lt;strong&gt;相邻元素交换&lt;/strong&gt;，最开始很容易想到采用冒泡排序来做，但这样$O(n^2)$很容易TLE……&lt;br&gt;
发现即便是相邻交换，也是因为存在了逆序对才交换的……&lt;br&gt;
而每次交换后，&lt;strong&gt;能且仅能消除一个逆序对&lt;/strong&gt;……&lt;br&gt;
要使序列达到最终有序，则肯定需要消除全部逆序对……&lt;br&gt;
故此类题目仍为求逆序对，且答案就为逆序对个数……&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;如果&lt;strong&gt;没有限制相邻元素交换&lt;/strong&gt;，那么处理一位数，就能&lt;strong&gt;消除这位数的所有逆序对个数&lt;/strong&gt;（与相邻交换的区别）&lt;br&gt;
所以就变成了找&lt;strong&gt;存在逆序对的位&lt;/strong&gt;（简称：逆位）的个数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;模板题：&lt;br&gt;
P1908 &lt;a class=&#34;link&#34; href=&#34;https://www.luogu.com.cn/problem/P1908&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;逆序对&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;P1908.cpp&#34; &gt;本地代码+题目分析+归并排序讲解+WA记录&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;总应用&#34;&gt;总应用&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;贪心中的&lt;strong&gt;邻项交换排序&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;例题&#34;&gt;例题&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;P1774 &lt;a class=&#34;link&#34; href=&#34;https://www.luogu.com.cn/problem/P1774&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;最接近神的人&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;考点：归并排序、逆序对&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;%22../../../../Daily/11.25_P1774.cpp&#34; &gt;本地代码+题目分析+WA记录&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;SWJTU OJ-12.13 F &lt;a class=&#34;link&#34; href=&#34;https://oj.swjtu.edu.cn/contest/26/problem/F&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;XCPC&lt;/a&gt;
&lt;blockquote&gt;
&lt;p&gt;考点：归并排序、逆序对（没有相邻元素交换）&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;%22../../../../../Competition/12.13/F.cpp&#34; &gt;题目分析&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
